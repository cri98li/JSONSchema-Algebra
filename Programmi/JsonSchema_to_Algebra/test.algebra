rootdef "x" = {
    type[obj],
    props[
        "^.a":mof(123),
        "^b":bet(1,12)
    ;],
    pattReq["^.a":true, "^b":bet(1,12)]
}

/*
allOf[
  type[obj],
  props["^.*a" : mof(2); true],
  pattReq["^.*a" : anyOf[type[int], mof(2), false]]
]*/

/*
allOf[
  type[obj],
  props["^a" : mof(2); true],
  pattReq["^b" : mof(3)]
]
*/


/*allOf[
  type[obj],
  props[
        "^a" : mof(2),
        "^aa" : mof(3),
	      "^aaa" : mof(5) ; true
  ]
]*/

/*{
    type[obj],
    pattReq["^a": mof(2)],
    pattReq["^aa": mof(3)]

    //pattReq["^a": {type[int], mof(1)}],
    //pattReq["^.d": true]

    /*props[
        "^.*a": {type[int], mof(2)},
        "^.*b": {type[int], mof(3)},
        "^.*c": {type[int], mof(5)}
    ;mof(7)]*/
}*/


/*
// object completion:

  props[
        pAnd["^a",pNot("^aa"),pNot("^aaa")] : mof(2),
        pAnd["^aa",pNot("^aaa"),"a"] : mof(6),
	    pAnd["^aaa","^aa","^a"] : mof(30),
        pNot(pAnyOf["^a","^aa","^aaa"]) :  true
      ]
*/










/*
allOf[
  type[obj],
  props[
        "^a" : mof(2),
        "^aa" : mof(3),
	    "^aaa" : mof(5)
	    ;true
  ]
]
*/

/*
allOf[
  type[obj],
  props["^a$" : mof(2),
        "^b$" : mof(3),
	"^c$" : mof(5) ; true
  ]
]
*/

/*
allOf[
  type[obj],
  props["^.*a" : mof(2),                 // it is just the pattern "a"
        "^.*b" : mof(3),
	"^.*c" : mof(5) ; true
  ]
]
*/

/*
allOf[
  type[obj],
  props["^a" : mof(2); true],
  pattReq["^b" : mof(3)]
]
*/

/*
allOf[
  type[obj],
  props[
        "^.*a" : mof(2)
        ;true
        ],
  pattReq["^.*a" : mof(2)]
]
*/

/*allOf[
  type[obj],
  pattReq["^.*a" : mof(2)]
]*/







/*{
    type[obj],
    pattReq["^a": mof(2)],
    pattReq["^aa": mof(3)]

    pattReq["^a": {type[int], mof(1)}],
    pattReq["^.d": true],
    /*props[
        "^.*a": {type[int], mof(2)},
        "^.*b": {type[int], mof(3)},
        "^.*c": {type[int], mof(5)}
    ;mof(7)]*/
}*/


/*{
    type[obj],
    pattReq["^a": {type[int], mof(1)}],
    pattReq["^.d": true],
    props[
        "^a": {type[int], mof(1)},
        "^.b" : {type[int], bet(1,100)}
    ;]
}*/

/*rootdef "x" = { //lui o "i" se ne va e il suo negato Ã¨ non_x
    ref("y"),
    ref("z")
},
def "y" = mof(12),
def "z" = mof(3),
def "not_y" = notMof(12),
def "not_z" = notMof(3),
def "i" = {
    ref("y"),
    ref("z")
},
def "base" = {ref("i"),mof(12)},
def "non_x" = anyOf[
	ref("not_y"),
	ref("not_z")
]*/

/*def "x" = props["a": ref("y");],
def "y" = ref("x")*/