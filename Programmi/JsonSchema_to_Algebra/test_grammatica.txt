{
	def "viaPropertyFound" = {
		allOf[
			req["via"],
			ref: "#/definitions/viaValidIfPresent"
		],
		oneOf[
			ref: "annotations.json#/definitions/annotationTypeValueFound",
			ref: "specificResource.json#/definitions/specificeResourceDetected",
			ref: "bodyTarget.json#/definitions/externalWebResourceDetected",
			ref: "bodyTarget.json#/definitions/textualBodyFound"
		]
	},
	def "createdPropertyFound" = {
		allOf[
			ref: "#/definitions/createdValidIfPresent",
			req["created"]
		],
		oneOf[
			ref: "annotations.json#/definitions/annotationTypeValueFound",
			ref: "specificResource.json#/definitions/specificeResourceDetected",
			ref: "bodyTarget.json#/definitions/externalWebResourceDetected",
			ref: "bodyTarget.json#/definitions/textualBodyFound"
		]
	},
	def "modifiedPropertyFound" = {
		allOf[
			ref: "#/definitions/modifiedValidIfPresent",
			req["modified"]
		],
		oneOf[
			ref: "annotations.json#/definitions/annotationTypeValueFound",
			ref: "specificResource.json#/definitions/specificeResourceDetected",
			ref: "bodyTarget.json#/definitions/externalWebResourceDetected",
			ref: "bodyTarget.json#/definitions/textualBodyFound"
		]
	},
	def "agentTypeFound" = allOf[
		req["type"],
		ref: "#/definitions/agentTypeDefinition"
	],
	def "creatorAgentWithTypeFound" = {
		type(obj),
		properties[
			"creator"::oneOf[
				ref: "#/definitions/agentTypeFound",
				{
					not: items(;not: ref: "#/definitions/agentTypeFound"),
					betitems(1,null),
					type(arr)
				}
			]
		],
		req["creator"]
	},
	def "itemAudiencePropertyFound" = {
		type(obj),
		properties[
			"items"::{
				not: items(;not: ref: "#/definitions/audiencePropertyFound"),
				betitems(1,null),
				type(arr)
			}
		],
		req["items"]
	},
	def "itemAccessibilityPropertyFound" = {
		type(obj),
		properties[
			"items"::{
				not: items(;not: ref: "#/definitions/accessibilityPropertyFound"),
				betitems(1,null),
				type(arr)
			}
		],
		req["items"]
	},
	def "itemCreatorPropertyFound" = {
		type(obj),
		properties[
			"items"::{
				not: items(;not: ref: "#/definitions/creatorPropertyFound"),
				betitems(1,null),
				type(arr)
			}
		],
		req["items"]
	},
	def "itemViaPropertyFound" = {
		type(obj),
		properties[
			"items"::{
				not: items(;not: ref: "#/definitions/viaPropertyFound"),
				betitems(1,null),
				type(arr)
			}
		],
		req["items"]
	},
	def "generatedValidIfPresent" = {
		type(obj),
		properties[
			"generated"::oneOf[
				type(str),
				{
					betitems(1,1),
					type(arr),
					items(;type(str))
				}
			]
		]
	},
	def "sourceCreatorAgentWithTypeFound" = {
		type(obj),
		properties[
			"source"::ref: "#/definitions/creatorAgentWithTypeFound"
		],
		req["source"]
	},
	def "agentSingularNicknameFound" = allOf[
		req["nickname"],
		ref: "#/definitions/agentSingularNicknameDefinition"
	],
	def "agentHomepageDefinition" = {
		type(obj),
		properties[
			"email"::oneOf[
				type(str),
				{
					betitems(1,null),
					type(arr),
					items(;type(str))
				}
			]
		]
	},
	def "audienceDefinition" = {
		type(obj),
		properties[
			"id"::ref: "id.json#/definitions/arraySingleStringUri",
			"type"::oneOf[
				{
					pattern("^(schema:)"),
					type(str)
				},
				{
					betitems(1,null),
					type(arr),
					items(;{
						pattern("^(schema:)"),
						type(str)
					})
				}
			],
			"^(schema:)"::true,
			addp("id"
			|	"type"
			|	"^(schema:)")::false
		]
	},
	def "canonicalPropertyFound" = {
		allOf[
			req["canonical"],
			ref: "#/definitions/canonicalValidIfPresent"
		],
		oneOf[
			ref: "annotations.json#/definitions/annotationTypeValueFound",
			ref: "specificResource.json#/definitions/specificeResourceDetected",
			ref: "bodyTarget.json#/definitions/externalWebResourceDetected",
			ref: "bodyTarget.json#/definitions/textualBodyFound"
		]
	},
	def "purposePropertyFound" = {
		allOf[
			req["purpose"],
			ref: "#/definitions/purposeRecognizedIfPresent"
		],
		oneOf[
			ref: "specificResource.json#/definitions/specificeResourceDetected",
			ref: "bodyTarget.json#/definitions/textualBodyFound"
		]
	},
	def "creatorSingularIfPresent" = {
		type(obj),
		properties[
			"creator"::oneOf[
				ref: "id.json#/definitions/stringUri",
				type(obj),
				{
					betitems(1,1),
					type(arr),
					items(;oneOf[
						ref: "id.json#/definitions/stringUri",
						type(obj)
					])
				}
			]
		]
	},
	def "sourceCreatorPropertyFound" = {
		type(obj),
		properties[
			"source"::{
				type(obj),
				ref: "#/definitions/creatorValidIfPresent",
				req["creator"]
			}
		],
		req["source"]
	},
	def "sourceCreatorAgentWithEmailFound" = {
		type(obj),
		properties[
			"source"::ref: "#/definitions/creatorAgentWithEmailFound"
		],
		req["source"]
	},
	def "sourceModifiedPropertyFound" = {
		type(obj),
		properties[
			"source"::{
				type(obj),
				ref: "#/definitions/modifiedValidIfPresent",
				req["modified"]
			}
		],
		req["source"]
	},
	def "modifiedValidIfPresent" = {
		type(obj),
		properties[
			"modified"::oneOf[
				type(str),
				{
					betitems(1,1),
					type(arr),
					items(;type(str))
				}
			]
		]
	},
	def "generatorValidIfPresent" = {
		type(obj),
		properties[
			"generator"::oneOf[
				ref: "id.json#/definitions/stringUri",
				type(obj),
				{
					betitems(1,null),
					type(arr),
					items(;oneOf[
						ref: "id.json#/definitions/stringUri",
						type(obj)
					])
				}
			]
		]
	},
	def "rightsValidIfPresent" = {
		type(obj),
		properties[
			"rights"::oneOf[
				ref: "id.json#/definitions/stringUri",
				{
					betitems(1,null),
					type(arr),
					items(;ref: "id.json#/definitions/stringUri")
				}
			]
		]
	},
	def "sourceAccessibilityPropertyFound" = {
		type(obj),
		properties[
			"source"::{
				type(obj),
				ref: "#/definitions/accessibilityValidIfPresent",
				req["accessibility"]
			}
		],
		req["source"]
	},
	def "itemCanonicalPropertyFound" = {
		type(obj),
		properties[
			"items"::{
				not: items(;not: ref: "#/definitions/canonicalPropertyFound"),
				betitems(1,null),
				type(arr)
			}
		],
		req["items"]
	},
	def "itemCreatorAgentWithNameFound" = {
		type(obj),
		properties[
			"items"::{
				not: items(;not: ref: "#/definitions/creatorAgentWithNameFound"),
				betitems(1,null),
				type(arr)
			}
		],
		req["items"]
	},
	def "agentEmail_sha1Found" = allOf[
		req["email_sha1"],
		ref: "#/definitions/agentEmail_sha1Definition"
	],
	def "accessibilityValidIfPresent" = {
		type(obj),
		properties[
			"accessibility"::oneOf[
				type(str),
				{
					betitems(1,null),
					type(arr),
					items(;type(str))
				}
			]
		]
	},
	def "audienceValidIfPresent" = {
		type(obj),
		properties[
			"audience"::oneOf[
				ref: "id.json#/definitions/stringUri",
				ref: "#/definitions/audienceDefinition",
				{
					betitems(1,null),
					type(arr),
					items(;oneOf[
						ref: "id.json#/definitions/stringUri",
						ref: "#/definitions/audienceDefinition"
					])
				}
			]
		]
	},
	def "agentEmailDefinition" = {
		type(obj),
		properties[
			"email"::oneOf[
				{
					pattern("^(mailto)"),
					type(str)
				},
				{
					betitems(1,null),
					type(arr),
					items(;{
						pattern("^(mailto)"),
						type(str)
					})
				}
			]
		]
	},
	def "viaValidIfPresent" = {
		type(obj),
		properties[
			"via"::oneOf[
				ref: "id.json#/definitions/stringUri",
				{
					betitems(1,null),
					type(arr),
					items(;ref: "id.json#/definitions/stringUri")
				}
			]
		]
	},
	def "generatorPropertyFound" = {
		allOf[
			req["generator"],
			ref: "#/definitions/generatorValidIfPresent"
		],
		ref: "annotations.json#/definitions/annotationTypeValueFound"
	},
	def "itemCreatedPropertyFound" = {
		type(obj),
		properties[
			"items"::{
				not: items(;not: ref: "#/definitions/createdPropertyFound"),
				betitems(1,null),
				type(arr)
			}
		],
		req["items"]
	},
	def "canonicalValidIfPresent" = {
		type(obj),
		properties[
			"canonical"::ref: "id.json#/definitions/arraySingleStringUri"
		]
	},
	def "itemCreatorAgentWithTypeFound" = {
		type(obj),
		properties[
			"items"::{
				not: items(;not: ref: "#/definitions/creatorAgentWithTypeFound"),
				betitems(1,null),
				type(arr)
			}
		],
		req["items"]
	},
	def "creatorValidIfPresent" = {
		type(obj),
		properties[
			"creator"::oneOf[
				ref: "id.json#/definitions/stringUri",
				type(obj),
				{
					betitems(1,null),
					type(arr),
					items(;oneOf[
						ref: "id.json#/definitions/stringUri",
						type(obj)
					])
				}
			]
		]
	},
	def "sourceCreatedPropertyFound" = {
		type(obj),
		properties[
			"source"::{
				type(obj),
				ref: "#/definitions/createdValidIfPresent",
				req["created"]
			}
		],
		req["source"]
	},
	def "singleCreatorPropertyFound" = {
		allOf[
			req["creator"],
			ref: "#/definitions/creatorSingularIfPresent"
		],
		oneOf[
			ref: "annotations.json#/definitions/annotationTypeValueFound",
			ref: "specificResource.json#/definitions/specificeResourceDetected",
			ref: "bodyTarget.json#/definitions/externalWebResourceDetected",
			ref: "bodyTarget.json#/definitions/textualBodyFound"
		]
	},
	def "creatorPropertyFound" = {
		allOf[
			req["creator"],
			ref: "#/definitions/creatorValidIfPresent"
		],
		oneOf[
			ref: "annotations.json#/definitions/annotationTypeValueFound",
			ref: "specificResource.json#/definitions/specificeResourceDetected",
			ref: "bodyTarget.json#/definitions/externalWebResourceDetected",
			ref: "bodyTarget.json#/definitions/textualBodyFound"
		]
	},
	def "agentEmailFound" = allOf[
		req["email"],
		ref: "#/definitions/agentEmailDefinition"
	],
	def "sourceAudiencePropertyFound" = {
		type(obj),
		properties[
			"source"::{
				type(obj),
				ref: "#/definitions/audienceValidIfPresent",
				req["audience"]
			}
		],
		req["source"]
	},
	def "itemRightsPropertyFound" = {
		type(obj),
		properties[
			"items"::{
				not: items(;not: ref: "#/definitions/rightsPropertyFound"),
				betitems(1,null),
				type(arr)
			}
		],
		req["items"]
	},
	def "rightsPropertyFound" = {
		allOf[
			req["rights"],
			ref: "#/definitions/rightsValidIfPresent"
		],
		oneOf[
			ref: "annotations.json#/definitions/annotationTypeValueFound",
			ref: "specificResource.json#/definitions/specificeResourceDetected",
			ref: "bodyTarget.json#/definitions/externalWebResourceDetected",
			ref: "bodyTarget.json#/definitions/textualBodyFound"
		]
	},
	def "creatorAgentWithIdFound" = {
		type(obj),
		properties[
			"creator"::oneOf[
				ref: "id.json#/definitions/idValueFound",
				{
					not: items(;not: ref: "id.json#/definitions/idValueFound"),
					betitems(1,null),
					type(arr)
				}
			]
		],
		req["creator"]
	},
	def "agentEmail_sha1Definition" = {
		type(obj),
		properties[
			"email_sha1"::oneOf[
				type(str),
				{
					betitems(1,null),
					type(arr),
					items(;type(str))
				}
			]
		]
	},
	def "itemCreatorAgentWithSingularNicknameFound" = {
		type(obj),
		properties[
			"items"::{
				not: items(;not: ref: "#/definitions/creatorAgentWithSingularNicknameFound"),
				betitems(1,null),
				type(arr)
			}
		],
		req["items"]
	},
	def "sourceCreatorAgentWithNameFound" = {
		type(obj),
		properties[
			"source"::ref: "#/definitions/creatorAgentWithNameFound"
		],
		req["source"]
	},
	def "sourceCreatorAgentWithSingularNicknameFound" = {
		type(obj),
		properties[
			"source"::ref: "#/definitions/creatorAgentWithSingularNicknameFound"
		],
		req["source"]
	},
	def "sourceCanonicalPropertyFound" = {
		type(obj),
		properties[
			"source"::{
				type(obj),
				ref: "#/definitions/canonicalValidIfPresent",
				req["canonical"]
			}
		],
		req["source"]
	},
	def "creatorAgentWithSingularNameFound" = {
		type(obj),
		properties[
			"creator"::oneOf[
				ref: "#/definitions/agentSingularNameFound",
				{
					not: items(;not: ref: "#/definitions/agentSingularNameFound"),
					betitems(1,null),
					type(arr)
				}
			]
		],
		req["creator"]
	},
	def "creatorAgentWithEmail_sha1Found" = {
		type(obj),
		properties[
			"creator"::oneOf[
				ref: "#/definitions/agentEmail_sha1Found",
				{
					not: items(;not: ref: "#/definitions/agentEmail_sha1Found"),
					betitems(1,null),
					type(arr)
				}
			]
		],
		req["creator"]
	},
	def "agentNameFound" = allOf[
		req["name"],
		ref: "#/definitions/agentNameDefinition"
	],
	def "agentSingularNameFound" = allOf[
		req["name"],
		ref: "#/definitions/agentSingularNameDefinition"
	],
	def "createdValidIfPresent" = {
		type(obj),
		properties[
			"created"::oneOf[
				type(str),
				{
					betitems(1,1),
					type(arr),
					items(;type(str))
				}
			]
		]
	},
	def "itemCreatorAgentWithEmailFound" = {
		type(obj),
		properties[
			"items"::{
				not: items(;not: ref: "#/definitions/creatorAgentWithEmailFound"),
				betitems(1,null),
				type(arr)
			}
		],
		req["items"]
	},
	def "sourceCreatorAgentWithIdFound" = {
		type(obj),
		properties[
			"source"::ref: "#/definitions/creatorAgentWithIdFound"
		],
		req["source"]
	},
	def "agentSingularNameDefinition" = {
		type(obj),
		properties[
			"name"::oneOf[
				type(str),
				{
					betitems(1,1),
					type(arr),
					items(;type(str))
				}
			]
		]
	},
	def "creatorAgentWithEmailFound" = {
		type(obj),
		properties[
			"creator"::oneOf[
				ref: "#/definitions/agentEmailFound",
				{
					not: items(;not: ref: "#/definitions/agentEmailFound"),
					betitems(1,null),
					type(arr)
				}
			]
		],
		req["creator"]
	},
	def "agentHomepageFound" = allOf[
		req["homepage"],
		ref: "#/definitions/agentHomepageDefinition"
	],
	def "sourceViaPropertyFound" = {
		type(obj),
		properties[
			"source"::{
				type(obj),
				ref: "#/definitions/viaValidIfPresent",
				req["via"]
			}
		],
		req["source"]
	},
	def "sourceRightsPropertyFound" = {
		type(obj),
		properties[
			"source"::{
				type(obj),
				ref: "#/definitions/rightsValidIfPresent",
				req["rights"]
			}
		],
		req["source"]
	},
	def "itemModifiedPropertyFound" = {
		type(obj),
		properties[
			"items"::{
				not: items(;not: ref: "#/definitions/modifiedPropertyFound"),
				betitems(1,null),
				type(arr)
			}
		],
		req["items"]
	},
	def "agentSingularNicknameDefinition" = {
		type(obj),
		properties[
			"nickname"::oneOf[
				type(str),
				{
					betitems(1,1),
					type(arr),
					items(;type(str))
				}
			]
		]
	},
	def "accessibilityPropertyFound" = {
		allOf[
			req["accessibility"],
			ref: "#/definitions/accessibilityValidIfPresent"
		],
		oneOf[
			ref: "specificResource.json#/definitions/specificeResourceDetected",
			ref: "bodyTarget.json#/definitions/externalWebResourceDetected",
			ref: "bodyTarget.json#/definitions/textualBodyFound"
		]
	},
	def "generatedPropertyFound" = {
		allOf[
			ref: "#/definitions/generatedValidIfPresent",
			req["generated"]
		],
		ref: "annotations.json#/definitions/annotationTypeValueFound"
	},
	def "audiencePropertyFound" = {
		allOf[
			req["audience"],
			ref: "#/definitions/audienceValidIfPresent"
		],
		oneOf[
			ref: "annotations.json#/definitions/annotationTypeValueFound",
			ref: "specificResource.json#/definitions/specificeResourceDetected",
			ref: "bodyTarget.json#/definitions/externalWebResourceDetected",
			ref: "bodyTarget.json#/definitions/textualBodyFound"
		]
	},
	def "purposeRecognizedIfPresent" = {
		type(obj),
		properties[
			"purpose"::oneOf[
				ref: "annotations.json#/definitions/motivationList",
				{
					betitems(1,null),
					type(arr),
					items(;ref: "annotations.json#/definitions/motivationList")
				}
			]
		]
	},
	def "sourceCreatorAgentWithHomepageFound" = {
		type(obj),
		properties[
			"source"::ref: "#/definitions/creatorAgentWithHomepageFound"
		],
		req["source"]
	},
	def "itemCreatorAgentWithEmail_sha1Found" = {
		type(obj),
		properties[
			"items"::{
				not: items(;not: ref: "#/definitions/creatorAgentWithEmail_sha1Found"),
				betitems(1,null),
				type(arr)
			}
		],
		req["items"]
	},
	def "itemPurposePropertyFound" = {
		type(obj),
		properties[
			"items"::{
				not: items(;not: ref: "#/definitions/purposePropertyFound"),
				betitems(1,null),
				type(arr)
			}
		],
		req["items"]
	},
	def "creatorAgentWithSingularNicknameFound" = {
		type(obj),
		properties[
			"creator"::oneOf[
				ref: "#/definitions/agentSingularNicknameFound",
				{
					not: items(;not: ref: "#/definitions/agentSingularNicknameFound"),
					betitems(1,null),
					type(arr)
				}
			]
		],
		req["creator"]
	},
	def "creatorAgentWithHomepageFound" = {
		type(obj),
		properties[
			"creator"::oneOf[
				ref: "#/definitions/agentHomepageFound",
				{
					not: items(;not: ref: "#/definitions/agentHomepageFound"),
					betitems(1,null),
					type(arr)
				}
			]
		],
		req["creator"]
	},
	def "sourceCreatorAgentWithSingularNameFound" = {
		type(obj),
		properties[
			"source"::ref: "#/definitions/creatorAgentWithSingularNameFound"
		],
		req["source"]
	},
	def "sourceSingleCreatorPropertyFound" = {
		type(obj),
		properties[
			"source"::{
				type(obj),
				ref: "#/definitions/creatorSingularIfPresent",
				req["creator"]
			}
		],
		req["source"]
	},
	def "sourceCreatorAgentWithEmail_sha1Found" = {
		type(obj),
		properties[
			"source"::ref: "#/definitions/creatorAgentWithEmail_sha1Found"
		],
		req["source"]
	},
	def "agentTypeDefinition" = {
		type(obj),
		properties[
			"type"::oneOf[
				{
					type(str),
					enum["Person", "Organization", "Software"]
				},
				{
					not: items(;{
						not: {
							type(str),
							enum["Person", "Organization", "Software"]
						}
					}),
					betitems(1,null),
					type(arr)
				}
			]
		]
	},
	def "agentNameDefinition" = {
		type(obj),
		properties[
			"name"::oneOf[
				type(str),
				{
					betitems(1,null),
					type(arr),
					items(;type(str))
				}
			]
		]
	},
	def "itemCreatorAgentWithHomepageFound" = {
		type(obj),
		properties[
			"items"::{
				not: items(;not: ref: "#/definitions/creatorAgentWithHomepageFound"),
				betitems(1,null),
				type(arr)
			}
		],
		req["items"]
	},
	def "itemSingleCreatorPropertyFound" = {
		type(obj),
		properties[
			"items"::{
				not: items(;not: ref: "#/definitions/singleCreatorPropertyFound"),
				betitems(1,null),
				type(arr)
			}
		],
		req["items"]
	},
	def "itemCreatorAgentWithSingularNameFound" = {
		type(obj),
		properties[
			"items"::{
				not: items(;not: ref: "#/definitions/creatorAgentWithSingularNameFound"),
				betitems(1,null),
				type(arr)
			}
		],
		req["items"]
	},
	def "creatorAgentWithNameFound" = {
		type(obj),
		properties[
			"creator"::oneOf[
				ref: "#/definitions/agentNameFound",
				{
					not: items(;not: ref: "#/definitions/agentNameFound"),
					betitems(1,null),
					type(arr)
				}
			]
		],
		req["creator"]
	},
	def "itemCreatorAgentWithIdFound" = {
		type(obj),
		properties[
			"items"::{
				not: items(;not: ref: "#/definitions/creatorAgentWithIdFound"),
				betitems(1,null),
				type(arr)
			}
		],
		req["items"]
	}
}
