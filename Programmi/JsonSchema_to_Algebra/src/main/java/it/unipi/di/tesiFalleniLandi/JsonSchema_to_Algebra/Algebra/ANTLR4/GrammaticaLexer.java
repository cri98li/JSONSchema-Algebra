// Generated from Grammatica.g4 by ANTLR 4.7.2
package it.unipi.di.tesiFalleniLandi.JsonSchema_to_Algebra.Algebra.ANTLR4;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class GrammaticaLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, NULL=42, TYPE=43, INT=44, DOUBLE=45, WS=46, 
		STRING=47, BOOLEAN=48;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
			"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
			"NULL", "TYPE", "INT", "DOUBLE", "WS", "STRING", "BOOLEAN", "ESC", "UNICODE", 
			"HEX", "SAFECODEPOINT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'{'", "','", "'}'", "'type'", "'('", "')'", "'bet'", "'xbet'", 
			"'length'", "'betitems'", "'pro'", "'mof'", "'notMof'", "'not'", "':'", 
			"'allOf'", "'['", "']'", "'oneOf'", "'anyOf'", "'req'", "'enum['", "'ifThenElse'", 
			"';'", "'ifThen'", "'uniqueItems'", "'repeatedItems'", "'pattern'", "'notPattern'", 
			"'items'", "'contains'", "'props'", "'const'", "'def'", "'='", "'rootdef'", 
			"'ref'", "'names'", "'annotations'", "'pattReq'", "'addPattReq'", "'null'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, "NULL", "TYPE", "INT", "DOUBLE", 
			"WS", "STRING", "BOOLEAN"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public GrammaticaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Grammatica.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\62\u01bb\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3"+
		"\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n"+
		"\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\r\3\r"+
		"\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3"+
		"\20\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\24\3"+
		"\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\27\3"+
		"\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3"+
		"\30\3\30\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3"+
		"\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3"+
		"\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3"+
		"\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3"+
		"\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3"+
		"!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3$\3$\3%\3%\3%\3%\3%\3%\3%\3"+
		"%\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3"+
		"(\3(\3)\3)\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3+\3+\3"+
		"+\3+\3+\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\5,\u0174"+
		"\n,\3-\5-\u0177\n-\3-\6-\u017a\n-\r-\16-\u017b\3.\5.\u017f\n.\3.\6.\u0182"+
		"\n.\r.\16.\u0183\3.\3.\6.\u0188\n.\r.\16.\u0189\3/\6/\u018d\n/\r/\16/"+
		"\u018e\3/\3/\3\60\3\60\7\60\u0195\n\60\f\60\16\60\u0198\13\60\3\60\3\60"+
		"\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\5\61\u01a5\n\61\3\62\3\62"+
		"\3\62\5\62\u01aa\n\62\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63"+
		"\5\63\u01b6\n\63\3\64\3\64\3\65\3\65\3\u0196\2\66\3\3\5\4\7\5\t\6\13\7"+
		"\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25"+
		")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O"+
		")Q*S+U,W-Y.[/]\60_\61a\62c\2e\2g\2i\2\3\2\b\3\2\62;\4\2\62;GG\5\2\13\f"+
		"\17\17\"\"\n\2$$\61\61^^ddhhppttvv\5\2\62;CHch\5\2\2!$$^^\2\u01c5\2\3"+
		"\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2"+
		"\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31"+
		"\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2"+
		"\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2"+
		"\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2"+
		"\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2"+
		"I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3"+
		"\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2"+
		"\2\3k\3\2\2\2\5m\3\2\2\2\7o\3\2\2\2\tq\3\2\2\2\13v\3\2\2\2\rx\3\2\2\2"+
		"\17z\3\2\2\2\21~\3\2\2\2\23\u0083\3\2\2\2\25\u008a\3\2\2\2\27\u0093\3"+
		"\2\2\2\31\u0097\3\2\2\2\33\u009b\3\2\2\2\35\u00a2\3\2\2\2\37\u00a6\3\2"+
		"\2\2!\u00a8\3\2\2\2#\u00ae\3\2\2\2%\u00b0\3\2\2\2\'\u00b2\3\2\2\2)\u00b8"+
		"\3\2\2\2+\u00be\3\2\2\2-\u00c2\3\2\2\2/\u00c8\3\2\2\2\61\u00d3\3\2\2\2"+
		"\63\u00d5\3\2\2\2\65\u00dc\3\2\2\2\67\u00e8\3\2\2\29\u00f6\3\2\2\2;\u00fe"+
		"\3\2\2\2=\u0109\3\2\2\2?\u010f\3\2\2\2A\u0118\3\2\2\2C\u011e\3\2\2\2E"+
		"\u0124\3\2\2\2G\u0128\3\2\2\2I\u012a\3\2\2\2K\u0132\3\2\2\2M\u0136\3\2"+
		"\2\2O\u013c\3\2\2\2Q\u0148\3\2\2\2S\u0150\3\2\2\2U\u015b\3\2\2\2W\u0173"+
		"\3\2\2\2Y\u0176\3\2\2\2[\u017e\3\2\2\2]\u018c\3\2\2\2_\u0192\3\2\2\2a"+
		"\u01a4\3\2\2\2c\u01a6\3\2\2\2e\u01b5\3\2\2\2g\u01b7\3\2\2\2i\u01b9\3\2"+
		"\2\2kl\7}\2\2l\4\3\2\2\2mn\7.\2\2n\6\3\2\2\2op\7\177\2\2p\b\3\2\2\2qr"+
		"\7v\2\2rs\7{\2\2st\7r\2\2tu\7g\2\2u\n\3\2\2\2vw\7*\2\2w\f\3\2\2\2xy\7"+
		"+\2\2y\16\3\2\2\2z{\7d\2\2{|\7g\2\2|}\7v\2\2}\20\3\2\2\2~\177\7z\2\2\177"+
		"\u0080\7d\2\2\u0080\u0081\7g\2\2\u0081\u0082\7v\2\2\u0082\22\3\2\2\2\u0083"+
		"\u0084\7n\2\2\u0084\u0085\7g\2\2\u0085\u0086\7p\2\2\u0086\u0087\7i\2\2"+
		"\u0087\u0088\7v\2\2\u0088\u0089\7j\2\2\u0089\24\3\2\2\2\u008a\u008b\7"+
		"d\2\2\u008b\u008c\7g\2\2\u008c\u008d\7v\2\2\u008d\u008e\7k\2\2\u008e\u008f"+
		"\7v\2\2\u008f\u0090\7g\2\2\u0090\u0091\7o\2\2\u0091\u0092\7u\2\2\u0092"+
		"\26\3\2\2\2\u0093\u0094\7r\2\2\u0094\u0095\7t\2\2\u0095\u0096\7q\2\2\u0096"+
		"\30\3\2\2\2\u0097\u0098\7o\2\2\u0098\u0099\7q\2\2\u0099\u009a\7h\2\2\u009a"+
		"\32\3\2\2\2\u009b\u009c\7p\2\2\u009c\u009d\7q\2\2\u009d\u009e\7v\2\2\u009e"+
		"\u009f\7O\2\2\u009f\u00a0\7q\2\2\u00a0\u00a1\7h\2\2\u00a1\34\3\2\2\2\u00a2"+
		"\u00a3\7p\2\2\u00a3\u00a4\7q\2\2\u00a4\u00a5\7v\2\2\u00a5\36\3\2\2\2\u00a6"+
		"\u00a7\7<\2\2\u00a7 \3\2\2\2\u00a8\u00a9\7c\2\2\u00a9\u00aa\7n\2\2\u00aa"+
		"\u00ab\7n\2\2\u00ab\u00ac\7Q\2\2\u00ac\u00ad\7h\2\2\u00ad\"\3\2\2\2\u00ae"+
		"\u00af\7]\2\2\u00af$\3\2\2\2\u00b0\u00b1\7_\2\2\u00b1&\3\2\2\2\u00b2\u00b3"+
		"\7q\2\2\u00b3\u00b4\7p\2\2\u00b4\u00b5\7g\2\2\u00b5\u00b6\7Q\2\2\u00b6"+
		"\u00b7\7h\2\2\u00b7(\3\2\2\2\u00b8\u00b9\7c\2\2\u00b9\u00ba\7p\2\2\u00ba"+
		"\u00bb\7{\2\2\u00bb\u00bc\7Q\2\2\u00bc\u00bd\7h\2\2\u00bd*\3\2\2\2\u00be"+
		"\u00bf\7t\2\2\u00bf\u00c0\7g\2\2\u00c0\u00c1\7s\2\2\u00c1,\3\2\2\2\u00c2"+
		"\u00c3\7g\2\2\u00c3\u00c4\7p\2\2\u00c4\u00c5\7w\2\2\u00c5\u00c6\7o\2\2"+
		"\u00c6\u00c7\7]\2\2\u00c7.\3\2\2\2\u00c8\u00c9\7k\2\2\u00c9\u00ca\7h\2"+
		"\2\u00ca\u00cb\7V\2\2\u00cb\u00cc\7j\2\2\u00cc\u00cd\7g\2\2\u00cd\u00ce"+
		"\7p\2\2\u00ce\u00cf\7G\2\2\u00cf\u00d0\7n\2\2\u00d0\u00d1\7u\2\2\u00d1"+
		"\u00d2\7g\2\2\u00d2\60\3\2\2\2\u00d3\u00d4\7=\2\2\u00d4\62\3\2\2\2\u00d5"+
		"\u00d6\7k\2\2\u00d6\u00d7\7h\2\2\u00d7\u00d8\7V\2\2\u00d8\u00d9\7j\2\2"+
		"\u00d9\u00da\7g\2\2\u00da\u00db\7p\2\2\u00db\64\3\2\2\2\u00dc\u00dd\7"+
		"w\2\2\u00dd\u00de\7p\2\2\u00de\u00df\7k\2\2\u00df\u00e0\7s\2\2\u00e0\u00e1"+
		"\7w\2\2\u00e1\u00e2\7g\2\2\u00e2\u00e3\7K\2\2\u00e3\u00e4\7v\2\2\u00e4"+
		"\u00e5\7g\2\2\u00e5\u00e6\7o\2\2\u00e6\u00e7\7u\2\2\u00e7\66\3\2\2\2\u00e8"+
		"\u00e9\7t\2\2\u00e9\u00ea\7g\2\2\u00ea\u00eb\7r\2\2\u00eb\u00ec\7g\2\2"+
		"\u00ec\u00ed\7c\2\2\u00ed\u00ee\7v\2\2\u00ee\u00ef\7g\2\2\u00ef\u00f0"+
		"\7f\2\2\u00f0\u00f1\7K\2\2\u00f1\u00f2\7v\2\2\u00f2\u00f3\7g\2\2\u00f3"+
		"\u00f4\7o\2\2\u00f4\u00f5\7u\2\2\u00f58\3\2\2\2\u00f6\u00f7\7r\2\2\u00f7"+
		"\u00f8\7c\2\2\u00f8\u00f9\7v\2\2\u00f9\u00fa\7v\2\2\u00fa\u00fb\7g\2\2"+
		"\u00fb\u00fc\7t\2\2\u00fc\u00fd\7p\2\2\u00fd:\3\2\2\2\u00fe\u00ff\7p\2"+
		"\2\u00ff\u0100\7q\2\2\u0100\u0101\7v\2\2\u0101\u0102\7R\2\2\u0102\u0103"+
		"\7c\2\2\u0103\u0104\7v\2\2\u0104\u0105\7v\2\2\u0105\u0106\7g\2\2\u0106"+
		"\u0107\7t\2\2\u0107\u0108\7p\2\2\u0108<\3\2\2\2\u0109\u010a\7k\2\2\u010a"+
		"\u010b\7v\2\2\u010b\u010c\7g\2\2\u010c\u010d\7o\2\2\u010d\u010e\7u\2\2"+
		"\u010e>\3\2\2\2\u010f\u0110\7e\2\2\u0110\u0111\7q\2\2\u0111\u0112\7p\2"+
		"\2\u0112\u0113\7v\2\2\u0113\u0114\7c\2\2\u0114\u0115\7k\2\2\u0115\u0116"+
		"\7p\2\2\u0116\u0117\7u\2\2\u0117@\3\2\2\2\u0118\u0119\7r\2\2\u0119\u011a"+
		"\7t\2\2\u011a\u011b\7q\2\2\u011b\u011c\7r\2\2\u011c\u011d\7u\2\2\u011d"+
		"B\3\2\2\2\u011e\u011f\7e\2\2\u011f\u0120\7q\2\2\u0120\u0121\7p\2\2\u0121"+
		"\u0122\7u\2\2\u0122\u0123\7v\2\2\u0123D\3\2\2\2\u0124\u0125\7f\2\2\u0125"+
		"\u0126\7g\2\2\u0126\u0127\7h\2\2\u0127F\3\2\2\2\u0128\u0129\7?\2\2\u0129"+
		"H\3\2\2\2\u012a\u012b\7t\2\2\u012b\u012c\7q\2\2\u012c\u012d\7q\2\2\u012d"+
		"\u012e\7v\2\2\u012e\u012f\7f\2\2\u012f\u0130\7g\2\2\u0130\u0131\7h\2\2"+
		"\u0131J\3\2\2\2\u0132\u0133\7t\2\2\u0133\u0134\7g\2\2\u0134\u0135\7h\2"+
		"\2\u0135L\3\2\2\2\u0136\u0137\7p\2\2\u0137\u0138\7c\2\2\u0138\u0139\7"+
		"o\2\2\u0139\u013a\7g\2\2\u013a\u013b\7u\2\2\u013bN\3\2\2\2\u013c\u013d"+
		"\7c\2\2\u013d\u013e\7p\2\2\u013e\u013f\7p\2\2\u013f\u0140\7q\2\2\u0140"+
		"\u0141\7v\2\2\u0141\u0142\7c\2\2\u0142\u0143\7v\2\2\u0143\u0144\7k\2\2"+
		"\u0144\u0145\7q\2\2\u0145\u0146\7p\2\2\u0146\u0147\7u\2\2\u0147P\3\2\2"+
		"\2\u0148\u0149\7r\2\2\u0149\u014a\7c\2\2\u014a\u014b\7v\2\2\u014b\u014c"+
		"\7v\2\2\u014c\u014d\7T\2\2\u014d\u014e\7g\2\2\u014e\u014f\7s\2\2\u014f"+
		"R\3\2\2\2\u0150\u0151\7c\2\2\u0151\u0152\7f\2\2\u0152\u0153\7f\2\2\u0153"+
		"\u0154\7R\2\2\u0154\u0155\7c\2\2\u0155\u0156\7v\2\2\u0156\u0157\7v\2\2"+
		"\u0157\u0158\7T\2\2\u0158\u0159\7g\2\2\u0159\u015a\7s\2\2\u015aT\3\2\2"+
		"\2\u015b\u015c\7p\2\2\u015c\u015d\7w\2\2\u015d\u015e\7n\2\2\u015e\u015f"+
		"\7n\2\2\u015fV\3\2\2\2\u0160\u0161\7q\2\2\u0161\u0162\7d\2\2\u0162\u0174"+
		"\7l\2\2\u0163\u0164\7u\2\2\u0164\u0165\7v\2\2\u0165\u0174\7t\2\2\u0166"+
		"\u0167\7p\2\2\u0167\u0168\7w\2\2\u0168\u0174\7o\2\2\u0169\u016a\7k\2\2"+
		"\u016a\u016b\7p\2\2\u016b\u0174\7v\2\2\u016c\u016d\7c\2\2\u016d\u016e"+
		"\7t\2\2\u016e\u0174\7t\2\2\u016f\u0170\7d\2\2\u0170\u0171\7q\2\2\u0171"+
		"\u0172\7q\2\2\u0172\u0174\7n\2\2\u0173\u0160\3\2\2\2\u0173\u0163\3\2\2"+
		"\2\u0173\u0166\3\2\2\2\u0173\u0169\3\2\2\2\u0173\u016c\3\2\2\2\u0173\u016f"+
		"\3\2\2\2\u0174X\3\2\2\2\u0175\u0177\7/\2\2\u0176\u0175\3\2\2\2\u0176\u0177"+
		"\3\2\2\2\u0177\u0179\3\2\2\2\u0178\u017a\t\2\2\2\u0179\u0178\3\2\2\2\u017a"+
		"\u017b\3\2\2\2\u017b\u0179\3\2\2\2\u017b\u017c\3\2\2\2\u017cZ\3\2\2\2"+
		"\u017d\u017f\7/\2\2\u017e\u017d\3\2\2\2\u017e\u017f\3\2\2\2\u017f\u0181"+
		"\3\2\2\2\u0180\u0182\t\2\2\2\u0181\u0180\3\2\2\2\u0182\u0183\3\2\2\2\u0183"+
		"\u0181\3\2\2\2\u0183\u0184\3\2\2\2\u0184\u0185\3\2\2\2\u0185\u0187\7\60"+
		"\2\2\u0186\u0188\t\3\2\2\u0187\u0186\3\2\2\2\u0188\u0189\3\2\2\2\u0189"+
		"\u0187\3\2\2\2\u0189\u018a\3\2\2\2\u018a\\\3\2\2\2\u018b\u018d\t\4\2\2"+
		"\u018c\u018b\3\2\2\2\u018d\u018e\3\2\2\2\u018e\u018c\3\2\2\2\u018e\u018f"+
		"\3\2\2\2\u018f\u0190\3\2\2\2\u0190\u0191\b/\2\2\u0191^\3\2\2\2\u0192\u0196"+
		"\7$\2\2\u0193\u0195\13\2\2\2\u0194\u0193\3\2\2\2\u0195\u0198\3\2\2\2\u0196"+
		"\u0197\3\2\2\2\u0196\u0194\3\2\2\2\u0197\u0199\3\2\2\2\u0198\u0196\3\2"+
		"\2\2\u0199\u019a\7$\2\2\u019a`\3\2\2\2\u019b\u019c\7v\2\2\u019c\u019d"+
		"\7t\2\2\u019d\u019e\7w\2\2\u019e\u01a5\7g\2\2\u019f\u01a0\7h\2\2\u01a0"+
		"\u01a1\7c\2\2\u01a1\u01a2\7n\2\2\u01a2\u01a3\7u\2\2\u01a3\u01a5\7g\2\2"+
		"\u01a4\u019b\3\2\2\2\u01a4\u019f\3\2\2\2\u01a5b\3\2\2\2\u01a6\u01a9\7"+
		"^\2\2\u01a7\u01aa\t\5\2\2\u01a8\u01aa\5e\63\2\u01a9\u01a7\3\2\2\2\u01a9"+
		"\u01a8\3\2\2\2\u01aad\3\2\2\2\u01ab\u01ac\7w\2\2\u01ac\u01ad\5g\64\2\u01ad"+
		"\u01ae\5g\64\2\u01ae\u01af\5g\64\2\u01af\u01b0\5g\64\2\u01b0\u01b6\3\2"+
		"\2\2\u01b1\u01b2\7z\2\2\u01b2\u01b3\5g\64\2\u01b3\u01b4\5g\64\2\u01b4"+
		"\u01b6\3\2\2\2\u01b5\u01ab\3\2\2\2\u01b5\u01b1\3\2\2\2\u01b6f\3\2\2\2"+
		"\u01b7\u01b8\t\6\2\2\u01b8h\3\2\2\2\u01b9\u01ba\n\7\2\2\u01baj\3\2\2\2"+
		"\16\2\u0173\u0176\u017b\u017e\u0183\u0189\u018e\u0196\u01a4\u01a9\u01b5"+
		"\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}