// Generated from Grammatica.g4 by ANTLR 4.8
package it.unipi.di.tesiFalleniLandi.JsonSchema_to_Algebra.FullAlgebra.ANTLR4;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class GrammaticaLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.8", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, NULL=47, TYPE=48, INT=49, DOUBLE=50, WS=51, STRING=52, BOOLEAN=53;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
			"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
			"T__41", "T__42", "T__43", "T__44", "T__45", "NULL", "TYPE", "INT", "DOUBLE", 
			"WS", "STRING", "BOOLEAN", "ESC", "UNICODE", "HEX", "SAFECODEPOINT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'{'", "','", "'}'", "'type'", "'['", "']'", "'bet'", "'('", "')'", 
			"'xbet'", "'length'", "'betItems'", "'pro'", "'mof'", "'notMof'", "'not'", 
			"'allOf'", "'oneOf'", "'anyOf'", "'req'", "'enum['", "'ifThenElse'", 
			"';'", "'ifThen'", "'uniqueItems'", "'repeatedItems'", "'pattern'", "'notPattern'", 
			"'items'", "'contains'", "'props'", "':'", "'const'", "'rootdef'", "'='", 
			"'def'", "'ref'", "'names'", "'exNames'", "'annotations'", "'pattReq'", 
			"'addPattReq'", "'ifBoolThen'", "'+'", "'-'", "'inf'", "'null'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, "NULL", 
			"TYPE", "INT", "DOUBLE", "WS", "STRING", "BOOLEAN"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public GrammaticaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Grammatica.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\67\u01ef\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\3\2\3\2\3\3\3\3"+
		"\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3"+
		"\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3"+
		"\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20"+
		"\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22"+
		"\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24"+
		"\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32"+
		"\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33"+
		"\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35"+
		"\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37"+
		"\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\3!\3\"\3\"\3\"\3\""+
		"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3%\3%\3%\3%\3&\3&\3&\3&\3\'\3\'"+
		"\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3)\3)\3"+
		")\3)\3)\3*\3*\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3+\3,\3"+
		",\3,\3,\3,\3,\3,\3,\3,\3,\3,\3-\3-\3.\3.\3/\3/\3/\3/\3\60\3\60\3\60\3"+
		"\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3"+
		"\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3"+
		"\61\3\61\5\61\u01a2\n\61\3\62\5\62\u01a5\n\62\3\62\6\62\u01a8\n\62\r\62"+
		"\16\62\u01a9\3\63\5\63\u01ad\n\63\3\63\6\63\u01b0\n\63\r\63\16\63\u01b1"+
		"\3\63\3\63\6\63\u01b6\n\63\r\63\16\63\u01b7\3\64\6\64\u01bb\n\64\r\64"+
		"\16\64\u01bc\3\64\3\64\3\65\3\65\7\65\u01c3\n\65\f\65\16\65\u01c6\13\65"+
		"\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66"+
		"\3\66\3\66\3\66\5\66\u01d9\n\66\3\67\3\67\3\67\5\67\u01de\n\67\38\38\3"+
		"8\38\38\38\38\38\38\38\58\u01ea\n8\39\39\3:\3:\3\u01c4\2;\3\3\5\4\7\5"+
		"\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23"+
		"%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G"+
		"%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m\2o\2q\2s\2\3\2"+
		"\b\3\2\62;\4\2\62;GG\5\2\13\f\17\17\"\"\n\2$$\61\61^^ddhhppttvv\5\2\62"+
		";CHch\5\2\2!$$^^\2\u01fe\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2"+
		"\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25"+
		"\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2"+
		"\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2"+
		"\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3"+
		"\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2"+
		"\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2"+
		"Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3"+
		"\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2"+
		"\2\2k\3\2\2\2\3u\3\2\2\2\5w\3\2\2\2\7y\3\2\2\2\t{\3\2\2\2\13\u0080\3\2"+
		"\2\2\r\u0082\3\2\2\2\17\u0084\3\2\2\2\21\u0088\3\2\2\2\23\u008a\3\2\2"+
		"\2\25\u008c\3\2\2\2\27\u0091\3\2\2\2\31\u0098\3\2\2\2\33\u00a1\3\2\2\2"+
		"\35\u00a5\3\2\2\2\37\u00a9\3\2\2\2!\u00b0\3\2\2\2#\u00b4\3\2\2\2%\u00ba"+
		"\3\2\2\2\'\u00c0\3\2\2\2)\u00c6\3\2\2\2+\u00ca\3\2\2\2-\u00d0\3\2\2\2"+
		"/\u00db\3\2\2\2\61\u00dd\3\2\2\2\63\u00e4\3\2\2\2\65\u00f0\3\2\2\2\67"+
		"\u00fe\3\2\2\29\u0106\3\2\2\2;\u0111\3\2\2\2=\u0117\3\2\2\2?\u0120\3\2"+
		"\2\2A\u0126\3\2\2\2C\u0128\3\2\2\2E\u012e\3\2\2\2G\u0136\3\2\2\2I\u0138"+
		"\3\2\2\2K\u013c\3\2\2\2M\u0140\3\2\2\2O\u0146\3\2\2\2Q\u014e\3\2\2\2S"+
		"\u015a\3\2\2\2U\u0162\3\2\2\2W\u016d\3\2\2\2Y\u0178\3\2\2\2[\u017a\3\2"+
		"\2\2]\u017c\3\2\2\2_\u0180\3\2\2\2a\u01a1\3\2\2\2c\u01a4\3\2\2\2e\u01ac"+
		"\3\2\2\2g\u01ba\3\2\2\2i\u01c0\3\2\2\2k\u01d8\3\2\2\2m\u01da\3\2\2\2o"+
		"\u01e9\3\2\2\2q\u01eb\3\2\2\2s\u01ed\3\2\2\2uv\7}\2\2v\4\3\2\2\2wx\7."+
		"\2\2x\6\3\2\2\2yz\7\177\2\2z\b\3\2\2\2{|\7v\2\2|}\7{\2\2}~\7r\2\2~\177"+
		"\7g\2\2\177\n\3\2\2\2\u0080\u0081\7]\2\2\u0081\f\3\2\2\2\u0082\u0083\7"+
		"_\2\2\u0083\16\3\2\2\2\u0084\u0085\7d\2\2\u0085\u0086\7g\2\2\u0086\u0087"+
		"\7v\2\2\u0087\20\3\2\2\2\u0088\u0089\7*\2\2\u0089\22\3\2\2\2\u008a\u008b"+
		"\7+\2\2\u008b\24\3\2\2\2\u008c\u008d\7z\2\2\u008d\u008e\7d\2\2\u008e\u008f"+
		"\7g\2\2\u008f\u0090\7v\2\2\u0090\26\3\2\2\2\u0091\u0092\7n\2\2\u0092\u0093"+
		"\7g\2\2\u0093\u0094\7p\2\2\u0094\u0095\7i\2\2\u0095\u0096\7v\2\2\u0096"+
		"\u0097\7j\2\2\u0097\30\3\2\2\2\u0098\u0099\7d\2\2\u0099\u009a\7g\2\2\u009a"+
		"\u009b\7v\2\2\u009b\u009c\7K\2\2\u009c\u009d\7v\2\2\u009d\u009e\7g\2\2"+
		"\u009e\u009f\7o\2\2\u009f\u00a0\7u\2\2\u00a0\32\3\2\2\2\u00a1\u00a2\7"+
		"r\2\2\u00a2\u00a3\7t\2\2\u00a3\u00a4\7q\2\2\u00a4\34\3\2\2\2\u00a5\u00a6"+
		"\7o\2\2\u00a6\u00a7\7q\2\2\u00a7\u00a8\7h\2\2\u00a8\36\3\2\2\2\u00a9\u00aa"+
		"\7p\2\2\u00aa\u00ab\7q\2\2\u00ab\u00ac\7v\2\2\u00ac\u00ad\7O\2\2\u00ad"+
		"\u00ae\7q\2\2\u00ae\u00af\7h\2\2\u00af \3\2\2\2\u00b0\u00b1\7p\2\2\u00b1"+
		"\u00b2\7q\2\2\u00b2\u00b3\7v\2\2\u00b3\"\3\2\2\2\u00b4\u00b5\7c\2\2\u00b5"+
		"\u00b6\7n\2\2\u00b6\u00b7\7n\2\2\u00b7\u00b8\7Q\2\2\u00b8\u00b9\7h\2\2"+
		"\u00b9$\3\2\2\2\u00ba\u00bb\7q\2\2\u00bb\u00bc\7p\2\2\u00bc\u00bd\7g\2"+
		"\2\u00bd\u00be\7Q\2\2\u00be\u00bf\7h\2\2\u00bf&\3\2\2\2\u00c0\u00c1\7"+
		"c\2\2\u00c1\u00c2\7p\2\2\u00c2\u00c3\7{\2\2\u00c3\u00c4\7Q\2\2\u00c4\u00c5"+
		"\7h\2\2\u00c5(\3\2\2\2\u00c6\u00c7\7t\2\2\u00c7\u00c8\7g\2\2\u00c8\u00c9"+
		"\7s\2\2\u00c9*\3\2\2\2\u00ca\u00cb\7g\2\2\u00cb\u00cc\7p\2\2\u00cc\u00cd"+
		"\7w\2\2\u00cd\u00ce\7o\2\2\u00ce\u00cf\7]\2\2\u00cf,\3\2\2\2\u00d0\u00d1"+
		"\7k\2\2\u00d1\u00d2\7h\2\2\u00d2\u00d3\7V\2\2\u00d3\u00d4\7j\2\2\u00d4"+
		"\u00d5\7g\2\2\u00d5\u00d6\7p\2\2\u00d6\u00d7\7G\2\2\u00d7\u00d8\7n\2\2"+
		"\u00d8\u00d9\7u\2\2\u00d9\u00da\7g\2\2\u00da.\3\2\2\2\u00db\u00dc\7=\2"+
		"\2\u00dc\60\3\2\2\2\u00dd\u00de\7k\2\2\u00de\u00df\7h\2\2\u00df\u00e0"+
		"\7V\2\2\u00e0\u00e1\7j\2\2\u00e1\u00e2\7g\2\2\u00e2\u00e3\7p\2\2\u00e3"+
		"\62\3\2\2\2\u00e4\u00e5\7w\2\2\u00e5\u00e6\7p\2\2\u00e6\u00e7\7k\2\2\u00e7"+
		"\u00e8\7s\2\2\u00e8\u00e9\7w\2\2\u00e9\u00ea\7g\2\2\u00ea\u00eb\7K\2\2"+
		"\u00eb\u00ec\7v\2\2\u00ec\u00ed\7g\2\2\u00ed\u00ee\7o\2\2\u00ee\u00ef"+
		"\7u\2\2\u00ef\64\3\2\2\2\u00f0\u00f1\7t\2\2\u00f1\u00f2\7g\2\2\u00f2\u00f3"+
		"\7r\2\2\u00f3\u00f4\7g\2\2\u00f4\u00f5\7c\2\2\u00f5\u00f6\7v\2\2\u00f6"+
		"\u00f7\7g\2\2\u00f7\u00f8\7f\2\2\u00f8\u00f9\7K\2\2\u00f9\u00fa\7v\2\2"+
		"\u00fa\u00fb\7g\2\2\u00fb\u00fc\7o\2\2\u00fc\u00fd\7u\2\2\u00fd\66\3\2"+
		"\2\2\u00fe\u00ff\7r\2\2\u00ff\u0100\7c\2\2\u0100\u0101\7v\2\2\u0101\u0102"+
		"\7v\2\2\u0102\u0103\7g\2\2\u0103\u0104\7t\2\2\u0104\u0105\7p\2\2\u0105"+
		"8\3\2\2\2\u0106\u0107\7p\2\2\u0107\u0108\7q\2\2\u0108\u0109\7v\2\2\u0109"+
		"\u010a\7R\2\2\u010a\u010b\7c\2\2\u010b\u010c\7v\2\2\u010c\u010d\7v\2\2"+
		"\u010d\u010e\7g\2\2\u010e\u010f\7t\2\2\u010f\u0110\7p\2\2\u0110:\3\2\2"+
		"\2\u0111\u0112\7k\2\2\u0112\u0113\7v\2\2\u0113\u0114\7g\2\2\u0114\u0115"+
		"\7o\2\2\u0115\u0116\7u\2\2\u0116<\3\2\2\2\u0117\u0118\7e\2\2\u0118\u0119"+
		"\7q\2\2\u0119\u011a\7p\2\2\u011a\u011b\7v\2\2\u011b\u011c\7c\2\2\u011c"+
		"\u011d\7k\2\2\u011d\u011e\7p\2\2\u011e\u011f\7u\2\2\u011f>\3\2\2\2\u0120"+
		"\u0121\7r\2\2\u0121\u0122\7t\2\2\u0122\u0123\7q\2\2\u0123\u0124\7r\2\2"+
		"\u0124\u0125\7u\2\2\u0125@\3\2\2\2\u0126\u0127\7<\2\2\u0127B\3\2\2\2\u0128"+
		"\u0129\7e\2\2\u0129\u012a\7q\2\2\u012a\u012b\7p\2\2\u012b\u012c\7u\2\2"+
		"\u012c\u012d\7v\2\2\u012dD\3\2\2\2\u012e\u012f\7t\2\2\u012f\u0130\7q\2"+
		"\2\u0130\u0131\7q\2\2\u0131\u0132\7v\2\2\u0132\u0133\7f\2\2\u0133\u0134"+
		"\7g\2\2\u0134\u0135\7h\2\2\u0135F\3\2\2\2\u0136\u0137\7?\2\2\u0137H\3"+
		"\2\2\2\u0138\u0139\7f\2\2\u0139\u013a\7g\2\2\u013a\u013b\7h\2\2\u013b"+
		"J\3\2\2\2\u013c\u013d\7t\2\2\u013d\u013e\7g\2\2\u013e\u013f\7h\2\2\u013f"+
		"L\3\2\2\2\u0140\u0141\7p\2\2\u0141\u0142\7c\2\2\u0142\u0143\7o\2\2\u0143"+
		"\u0144\7g\2\2\u0144\u0145\7u\2\2\u0145N\3\2\2\2\u0146\u0147\7g\2\2\u0147"+
		"\u0148\7z\2\2\u0148\u0149\7P\2\2\u0149\u014a\7c\2\2\u014a\u014b\7o\2\2"+
		"\u014b\u014c\7g\2\2\u014c\u014d\7u\2\2\u014dP\3\2\2\2\u014e\u014f\7c\2"+
		"\2\u014f\u0150\7p\2\2\u0150\u0151\7p\2\2\u0151\u0152\7q\2\2\u0152\u0153"+
		"\7v\2\2\u0153\u0154\7c\2\2\u0154\u0155\7v\2\2\u0155\u0156\7k\2\2\u0156"+
		"\u0157\7q\2\2\u0157\u0158\7p\2\2\u0158\u0159\7u\2\2\u0159R\3\2\2\2\u015a"+
		"\u015b\7r\2\2\u015b\u015c\7c\2\2\u015c\u015d\7v\2\2\u015d\u015e\7v\2\2"+
		"\u015e\u015f\7T\2\2\u015f\u0160\7g\2\2\u0160\u0161\7s\2\2\u0161T\3\2\2"+
		"\2\u0162\u0163\7c\2\2\u0163\u0164\7f\2\2\u0164\u0165\7f\2\2\u0165\u0166"+
		"\7R\2\2\u0166\u0167\7c\2\2\u0167\u0168\7v\2\2\u0168\u0169\7v\2\2\u0169"+
		"\u016a\7T\2\2\u016a\u016b\7g\2\2\u016b\u016c\7s\2\2\u016cV\3\2\2\2\u016d"+
		"\u016e\7k\2\2\u016e\u016f\7h\2\2\u016f\u0170\7D\2\2\u0170\u0171\7q\2\2"+
		"\u0171\u0172\7q\2\2\u0172\u0173\7n\2\2\u0173\u0174\7V\2\2\u0174\u0175"+
		"\7j\2\2\u0175\u0176\7g\2\2\u0176\u0177\7p\2\2\u0177X\3\2\2\2\u0178\u0179"+
		"\7-\2\2\u0179Z\3\2\2\2\u017a\u017b\7/\2\2\u017b\\\3\2\2\2\u017c\u017d"+
		"\7k\2\2\u017d\u017e\7p\2\2\u017e\u017f\7h\2\2\u017f^\3\2\2\2\u0180\u0181"+
		"\7p\2\2\u0181\u0182\7w\2\2\u0182\u0183\7n\2\2\u0183\u0184\7n\2\2\u0184"+
		"`\3\2\2\2\u0185\u0186\7q\2\2\u0186\u0187\7d\2\2\u0187\u01a2\7l\2\2\u0188"+
		"\u0189\7u\2\2\u0189\u018a\7v\2\2\u018a\u01a2\7t\2\2\u018b\u018c\7p\2\2"+
		"\u018c\u018d\7w\2\2\u018d\u01a2\7o\2\2\u018e\u018f\7k\2\2\u018f\u0190"+
		"\7p\2\2\u0190\u01a2\7v\2\2\u0191\u0192\7c\2\2\u0192\u0193\7t\2\2\u0193"+
		"\u01a2\7t\2\2\u0194\u0195\7d\2\2\u0195\u0196\7q\2\2\u0196\u0197\7q\2\2"+
		"\u0197\u01a2\7n\2\2\u0198\u0199\7p\2\2\u0199\u019a\7w\2\2\u019a\u019b"+
		"\7o\2\2\u019b\u019c\7P\2\2\u019c\u019d\7q\2\2\u019d\u019e\7v\2\2\u019e"+
		"\u019f\7K\2\2\u019f\u01a0\7p\2\2\u01a0\u01a2\7v\2\2\u01a1\u0185\3\2\2"+
		"\2\u01a1\u0188\3\2\2\2\u01a1\u018b\3\2\2\2\u01a1\u018e\3\2\2\2\u01a1\u0191"+
		"\3\2\2\2\u01a1\u0194\3\2\2\2\u01a1\u0198\3\2\2\2\u01a2b\3\2\2\2\u01a3"+
		"\u01a5\7/\2\2\u01a4\u01a3\3\2\2\2\u01a4\u01a5\3\2\2\2\u01a5\u01a7\3\2"+
		"\2\2\u01a6\u01a8\t\2\2\2\u01a7\u01a6\3\2\2\2\u01a8\u01a9\3\2\2\2\u01a9"+
		"\u01a7\3\2\2\2\u01a9\u01aa\3\2\2\2\u01aad\3\2\2\2\u01ab\u01ad\7/\2\2\u01ac"+
		"\u01ab\3\2\2\2\u01ac\u01ad\3\2\2\2\u01ad\u01af\3\2\2\2\u01ae\u01b0\t\2"+
		"\2\2\u01af\u01ae\3\2\2\2\u01b0\u01b1\3\2\2\2\u01b1\u01af\3\2\2\2\u01b1"+
		"\u01b2\3\2\2\2\u01b2\u01b3\3\2\2\2\u01b3\u01b5\7\60\2\2\u01b4\u01b6\t"+
		"\3\2\2\u01b5\u01b4\3\2\2\2\u01b6\u01b7\3\2\2\2\u01b7\u01b5\3\2\2\2\u01b7"+
		"\u01b8\3\2\2\2\u01b8f\3\2\2\2\u01b9\u01bb\t\4\2\2\u01ba\u01b9\3\2\2\2"+
		"\u01bb\u01bc\3\2\2\2\u01bc\u01ba\3\2\2\2\u01bc\u01bd\3\2\2\2\u01bd\u01be"+
		"\3\2\2\2\u01be\u01bf\b\64\2\2\u01bfh\3\2\2\2\u01c0\u01c4\7$\2\2\u01c1"+
		"\u01c3\13\2\2\2\u01c2\u01c1\3\2\2\2\u01c3\u01c6\3\2\2\2\u01c4\u01c5\3"+
		"\2\2\2\u01c4\u01c2\3\2\2\2\u01c5\u01c7\3\2\2\2\u01c6\u01c4\3\2\2\2\u01c7"+
		"\u01c8\7$\2\2\u01c8j\3\2\2\2\u01c9\u01d9\7v\2\2\u01ca\u01cb\7v\2\2\u01cb"+
		"\u01d9\7v\2\2\u01cc\u01d9\7h\2\2\u01cd\u01ce\7h\2\2\u01ce\u01d9\7h\2\2"+
		"\u01cf\u01d0\7v\2\2\u01d0\u01d1\7t\2\2\u01d1\u01d2\7w\2\2\u01d2\u01d9"+
		"\7g\2\2\u01d3\u01d4\7h\2\2\u01d4\u01d5\7c\2\2\u01d5\u01d6\7n\2\2\u01d6"+
		"\u01d7\7u\2\2\u01d7\u01d9\7g\2\2\u01d8\u01c9\3\2\2\2\u01d8\u01ca\3\2\2"+
		"\2\u01d8\u01cc\3\2\2\2\u01d8\u01cd\3\2\2\2\u01d8\u01cf\3\2\2\2\u01d8\u01d3"+
		"\3\2\2\2\u01d9l\3\2\2\2\u01da\u01dd\7^\2\2\u01db\u01de\t\5\2\2\u01dc\u01de"+
		"\5o8\2\u01dd\u01db\3\2\2\2\u01dd\u01dc\3\2\2\2\u01den\3\2\2\2\u01df\u01e0"+
		"\7w\2\2\u01e0\u01e1\5q9\2\u01e1\u01e2\5q9\2\u01e2\u01e3\5q9\2\u01e3\u01e4"+
		"\5q9\2\u01e4\u01ea\3\2\2\2\u01e5\u01e6\7z\2\2\u01e6\u01e7\5q9\2\u01e7"+
		"\u01e8\5q9\2\u01e8\u01ea\3\2\2\2\u01e9\u01df\3\2\2\2\u01e9\u01e5\3\2\2"+
		"\2\u01eap\3\2\2\2\u01eb\u01ec\t\6\2\2\u01ecr\3\2\2\2\u01ed\u01ee\n\7\2"+
		"\2\u01eet\3\2\2\2\16\2\u01a1\u01a4\u01a9\u01ac\u01b1\u01b7\u01bc\u01c4"+
		"\u01d8\u01dd\u01e9\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}