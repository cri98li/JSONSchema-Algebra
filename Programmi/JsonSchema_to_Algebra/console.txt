[DEBUG] 2020-08-12 16:51:00.950 [main] WitnessBoolean - Created a new WitnessBoolean: WitnessBoolean{value=true}
[DEBUG] 2020-08-12 16:51:00.970 [main] WitnessBoolean - Created a new WitnessBoolean: WitnessBoolean{value=false}
rootdef "root" = {
	type[
		obj
	],
	props[
		"^.*$": true;

	],
	anyOf[
		pattReq[
			"^.*a":mof(2.0)
		],
		type[
			str,
			num,
			arr,
			bool,
			null
		]
	]
},
def "not_root" = anyOf[
	{
		type[
			obj
		],
		pattReq[
			"^.*$":false
		]
	},
	{
		{
			type[
				obj
			],
			props[
				"^.*a": {
					type[
						num
					],
					notMof(2.0)
				};

			]
		},
		type[
			obj
		]
	},
	type[
		str,
		num,
		arr,
		bool,
		null
	]
]
[DEBUG] 2020-08-12 16:51:00.977 [main] WitnessBoolean - Created a new WitnessBoolean: WitnessBoolean{value=false}
[DEBUG] 2020-08-12 16:51:00.977 [main] WitnessBoolean - Created a new WitnessBoolean: WitnessBoolean{value=false}


 Merge:



 Groupize:



 DNF:

[DEBUG] 2020-08-12 16:51:00.978 [main] WitnessBoolean - Created a new WitnessBoolean: WitnessBoolean{value=false}
[DEBUG] 2020-08-12 16:51:00.979 [main] WitnessBoolean - Created a new WitnessBoolean: WitnessBoolean{value=false}
[DEBUG] 2020-08-12 16:51:00.979 [main] WitnessBoolean - Created a new WitnessBoolean: WitnessBoolean{value=false}
[DEBUG] 2020-08-12 16:51:00.979 [main] WitnessBoolean - Created a new WitnessBoolean: WitnessBoolean{value=false}
[DEBUG] 2020-08-12 16:51:00.979 [main] WitnessBoolean - Created a new WitnessBoolean: WitnessBoolean{value=false}
[DEBUG] 2020-08-12 16:51:00.979 [main] WitnessBoolean - Created a new WitnessBoolean: WitnessBoolean{value=false}
[DEBUG] 2020-08-12 16:51:00.979 [main] WitnessBoolean - Created a new WitnessBoolean: WitnessBoolean{value=false}
[DEBUG] 2020-08-12 16:51:00.979 [main] WitnessBoolean - Created a new WitnessBoolean: WitnessBoolean{value=false}
[DEBUG] 2020-08-12 16:51:00.979 [main] WitnessBoolean - Created a new WitnessBoolean: WitnessBoolean{value=false}
[DEBUG] 2020-08-12 16:51:00.979 [main] WitnessBoolean - Created a new WitnessBoolean: WitnessBoolean{value=false}


 Separation:



 Expansion:

def "WitnessAnd_1" = {
	type[
		num
	],
	notMof(2.0)
},
def "not_WitnessOr_0" = allOf[
	type[
		str,
		obj,
		num,
		bool,
		null
	],
	type[
		obj,
		num,
		arr,
		bool,
		null
	],
	anyOf[
		{
			type[
				num
			],
			notMof(2.0)
		},
		type[
			str,
			obj,
			arr,
			bool,
			null
		]
	],
	type[
		str,
		obj,
		num,
		arr,
		bool
	],
	type[
		str,
		num,
		arr,
		bool,
		null
	],
	type[
		str,
		obj,
		num,
		arr,
		null
	]
],
def "WitnessOr_0" = anyOf[
	type[
		arr
	],
	type[
		str
	],
	{
		type[
			num
		],
		mof(2.0)
	},
	type[
		null
	],
	type[
		obj
	],
	type[
		bool
	]
],
rootdef "root" = {
	pattReq[
		"^.*a":ref("WitnessOr_0")
	],
	type[
		obj
	],
	true
},
def "not_root" = anyOf[
	{
		type[
			obj
		],
		false
	},
	{
		props[
			"^.*a": ref("WitnessAnd_1");

		],
		type[
			obj
		]
	},
	type[
		str
	],
	type[
		arr
	],
	type[
		num
	],
	type[
		null
	],
	type[
		bool
	]
],
def "not_WitnessAnd_1" = anyOf[
	{
		type[
			num
		],
		mof(2.0)
	},
	type[
		str,
		obj,
		arr,
		bool,
		null
	]
]


 objectPrepare:

[DEBUG] 2020-08-12 16:51:00.993 [main] WitnessAnd - Preparing WitnessAnd without type object assertion
[DEBUG] 2020-08-12 16:51:00.993 [main] WitnessAnd - Preparing WitnessAnd without type specified
[DEBUG] 2020-08-12 16:51:00.993 [main] WitnessAnd - Preparing WitnessAnd without type object assertion
[DEBUG] 2020-08-12 16:51:00.993 [main] WitnessAnd - Preparing WitnessAnd without type object assertion
[DEBUG] 2020-08-12 16:51:00.994 [main] WitnessAnd - Preparing WitnessAnd without type object assertion
[DEBUG] 2020-08-12 16:51:00.994 [main] WitnessAnd - Preparing WitnessAnd without type object assertion
[DEBUG] 2020-08-12 16:51:00.994 [main] WitnessAnd - Complete empty CPart
[DEBUG] 2020-08-12 16:51:00.994 [main] WitnessBoolean - Created a new WitnessBoolean: WitnessBoolean{value=true}
[DEBUG] 2020-08-12 16:51:00.994 [main] WitnessAnd - Preparing WitnessAnd without type object assertion
[DEBUG] 2020-08-12 16:51:00.994 [main] WitnessAnd - Complete empty CPart
[DEBUG] 2020-08-12 16:51:00.994 [main] WitnessBoolean - Created a new WitnessBoolean: WitnessBoolean{value=true}
[DEBUG] 2020-08-12 16:51:00.994 [main] WitnessAnd - [CP-RP] Computing intersection between "^.*$" and "^.*a"
[DEBUG] 2020-08-12 16:51:00.996 [main] WitnessAnd - Old ORP size:
[DEBUG] 2020-08-12 16:51:00.996 [main] WitnessAnd - Old Pattern Requests size:
[DEBUG] 2020-08-12 16:51:00.997 [main] WitnessAnd - Complete empty CPart
[DEBUG] 2020-08-12 16:51:00.997 [main] WitnessBoolean - Created a new WitnessBoolean: WitnessBoolean{value=true}
[DEBUG] 2020-08-12 16:51:00.997 [main] WitnessAnd - Complete non-empty CPart
[DEBUG] 2020-08-12 16:51:00.997 [main] WitnessBoolean - Created a new WitnessBoolean: WitnessBoolean{value=true}
[DEBUG] 2020-08-12 16:51:00.998 [main] WitnessAnd - Reducing subProperty WitnessProperty{key="^.*a", value=WitnessVar{name='WitnessAnd_1'}} with reduceT
[DEBUG] 2020-08-12 16:51:00.999 [main] WitnessAnd - Adding completed property in CPart with key: pNot("^.*a")
[DEBUG] 2020-08-12 16:51:00.999 [main] WitnessAnd - Preparing WitnessAnd without type object assertion
[DEBUG] 2020-08-12 16:51:01.001 [main] WitnessAnd - Preparing WitnessAnd without type object assertion
[DEBUG] 2020-08-12 16:51:01.002 [main] WitnessAnd - Preparing WitnessAnd without type object assertion
[DEBUG] 2020-08-12 16:51:01.002 [main] WitnessAnd - Preparing WitnessAnd without type object assertion
[DEBUG] 2020-08-12 16:51:01.002 [main] WitnessAnd - Preparing WitnessAnd without type object assertion
[DEBUG] 2020-08-12 16:51:01.002 [main] WitnessAnd - Preparing WitnessAnd without type object assertion
def "WitnessAnd_1" = {
	type[
		num
	],
	notMof(2.0)
},
def "not_WitnessOr_0" = allOf[
	type[
		obj,
		num,
		arr,
		bool,
		null
	],
	anyOf[
		{
			type[
				num
			],
			notMof(2.0)
		},
		type[
			str,
			obj,
			arr,
			bool,
			null
		]
	],
	type[
		str,
		obj,
		num,
		arr,
		bool
	],
	type[
		str,
		num,
		arr,
		bool,
		null
	],
	type[
		str,
		obj,
		num,
		arr,
		null
	],
	type[
		str,
		obj,
		num,
		bool,
		null
	]
],
def "WitnessOr_0" = anyOf[
	type[
		arr
	],
	type[
		str
	],
	{
		type[
			num
		],
		mof(2.0)
	},
	type[
		null
	],
	{
		type[
			obj
		],
		props[
			"^.*$": true;

		]
	},
	type[
		bool
	]
],
rootdef "root" = {
	type[
		obj
	],
	true,
	props[
		"^.*$": true;

	]
},
def "not_root" = anyOf[
	{
		type[
			obj
		],
		false,
		props[
			"^.*$": true;

		]
	},
	allOf[
		type[
			obj
		],
		props[
			"^.*a": ref("WitnessAnd_1");

		],
		props[
			pNot("^.*a"): true;

		]
	],
	type[
		str
	],
	type[
		arr
	],
	type[
		num
	],
	type[
		null
	],
	type[
		bool
	]
],
def "not_WitnessAnd_1" = anyOf[
	{
		type[
			num
		],
		mof(2.0)
	},
	type[
		str,
		obj,
		arr,
		bool,
		null
	]
]


 FINE!

