def "kubernetes_core_EndpointSubset" = allOf[
	type[
		obj
	],
	props[
		"notReadyAddresses": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_EndpointAddress");
				
			]
		],
		"addresses": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_EndpointAddress");
				
			]
		],
		"ports": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_EndpointPort");
				
			]
		];
		true
	]
],
def "kubernetes_rbac_RoleBinding" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"subjects": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_rbac_Subject");
				
			]
		],
		"roleRef": ref("kubernetes_rbac_RoleRef");
		true
	]
],
def "os_deploy_ExecNewPodHook" = allOf[
	type[
		obj
	],
	props[
		"containerName": type[
			str
		],
		"volumes": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"env": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_EnvVar");
				
			]
		],
		"command": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "os_project_ProjectSpec" = allOf[
	type[
		obj
	],
	props[
		"finalizers": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_admission_AdmissionReview" = allOf[
	type[
		obj
	],
	props[
		"request": ref("kubernetes_admission_AdmissionRequest"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"response": ref("kubernetes_admission_AdmissionResponse");
		true
	]
],
def "kubernetes_core_PersistentVolumeSpec" = allOf[
	type[
		obj
	],
	props[
		"claimRef": ref("kubernetes_core_ObjectReference"),
		"quobyte": ref("kubernetes_core_QuobyteVolumeSource"),
		"azureFile": ref("kubernetes_core_AzureFilePersistentVolumeSource"),
		"flexVolume": ref("kubernetes_core_FlexPersistentVolumeSource"),
		"mountOptions": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"local": ref("kubernetes_core_LocalVolumeSource"),
		"capacity": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_resource_Quantity")
			]
		],
		"cephfs": ref("kubernetes_core_CephFSPersistentVolumeSource"),
		"scaleIO": ref("kubernetes_core_ScaleIOPersistentVolumeSource"),
		"accessModes": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"glusterfs": ref("kubernetes_core_GlusterfsPersistentVolumeSource"),
		"gcePersistentDisk": ref("kubernetes_core_GCEPersistentDiskVolumeSource"),
		"photonPersistentDisk": ref("kubernetes_core_PhotonPersistentDiskVolumeSource"),
		"azureDisk": ref("kubernetes_core_AzureDiskVolumeSource"),
		"cinder": ref("kubernetes_core_CinderPersistentVolumeSource"),
		"awsElasticBlockStore": ref("kubernetes_core_AWSElasticBlockStoreVolumeSource"),
		"nodeAffinity": ref("kubernetes_core_VolumeNodeAffinity"),
		"flocker": ref("kubernetes_core_FlockerVolumeSource"),
		"volumeMode": type[
			str
		],
		"iscsi": ref("kubernetes_core_ISCSIPersistentVolumeSource"),
		"rbd": ref("kubernetes_core_RBDPersistentVolumeSource"),
		"storageClassName": type[
			str
		],
		"storageos": ref("kubernetes_core_StorageOSPersistentVolumeSource"),
		"csi": ref("kubernetes_core_CSIPersistentVolumeSource"),
		"nfs": ref("kubernetes_core_NFSVolumeSource"),
		"persistentVolumeReclaimPolicy": type[
			str
		],
		"portworxVolume": ref("kubernetes_core_PortworxVolumeSource"),
		"vsphereVolume": ref("kubernetes_core_VsphereVirtualDiskVolumeSource"),
		"fc": ref("kubernetes_core_FCVolumeSource"),
		"hostPath": ref("kubernetes_core_HostPathVolumeSource");
		true
	]
],
def "kubernetes_apimachinery_RootPaths" = allOf[
	type[
		obj
	],
	props[
		"paths": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_core_ServiceAccountTokenProjection" = allOf[
	type[
		obj
	],
	props[
		"path": type[
			str
		],
		"audience": type[
			str
		],
		"expirationSeconds": type[
			int
		];
		true
	]
],
def "kubernetes_admission_AdmissionResponse" = allOf[
	type[
		obj
	],
	props[
		"patch": type[
			str
		],
		"uid": type[
			str
		],
		"patchType": type[
			str
		],
		"allowed": type[
			bool
		],
		"auditAnnotations": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"status": ref("kubernetes_apimachinery_Status");
		true
	]
],
def "kubernetes_core_ObjectReference" = allOf[
	type[
		obj
	],
	props[
		"uid": type[
			str
		],
		"apiVersion": type[
			str
		],
		"kind": type[
			str
		],
		"resourceVersion": type[
			str
		],
		"fieldPath": type[
			str
		],
		"name": type[
			str
		],
		"namespace": type[
			str
		];
		true
	]
],
def "kubernetes_core_VolumeSource" = allOf[
	type[
		obj
	],
	props[
		"quobyte": ref("kubernetes_core_QuobyteVolumeSource"),
		"azureFile": ref("kubernetes_core_AzureFileVolumeSource"),
		"flexVolume": ref("kubernetes_core_FlexVolumeSource"),
		"secret": ref("kubernetes_core_SecretVolumeSource"),
		"projected": ref("kubernetes_core_ProjectedVolumeSource"),
		"cephfs": ref("kubernetes_core_CephFSVolumeSource"),
		"scaleIO": ref("kubernetes_core_ScaleIOVolumeSource"),
		"emptyDir": ref("kubernetes_core_EmptyDirVolumeSource"),
		"glusterfs": ref("kubernetes_core_GlusterfsVolumeSource"),
		"gcePersistentDisk": ref("kubernetes_core_GCEPersistentDiskVolumeSource"),
		"photonPersistentDisk": ref("kubernetes_core_PhotonPersistentDiskVolumeSource"),
		"azureDisk": ref("kubernetes_core_AzureDiskVolumeSource"),
		"cinder": ref("kubernetes_core_CinderVolumeSource"),
		"downwardAPI": ref("kubernetes_core_DownwardAPIVolumeSource"),
		"awsElasticBlockStore": ref("kubernetes_core_AWSElasticBlockStoreVolumeSource"),
		"flocker": ref("kubernetes_core_FlockerVolumeSource"),
		"iscsi": ref("kubernetes_core_ISCSIVolumeSource"),
		"rbd": ref("kubernetes_core_RBDVolumeSource"),
		"configMap": ref("kubernetes_core_ConfigMapVolumeSource"),
		"storageos": ref("kubernetes_core_StorageOSVolumeSource"),
		"nfs": ref("kubernetes_core_NFSVolumeSource"),
		"persistentVolumeClaim": ref("kubernetes_core_PersistentVolumeClaimVolumeSource"),
		"gitRepo": ref("kubernetes_core_GitRepoVolumeSource"),
		"portworxVolume": ref("kubernetes_core_PortworxVolumeSource"),
		"vsphereVolume": ref("kubernetes_core_VsphereVirtualDiskVolumeSource"),
		"fc": ref("kubernetes_core_FCVolumeSource"),
		"hostPath": ref("kubernetes_core_HostPathVolumeSource");
		true
	]
],
def "kubernetes_core_DownwardAPIProjection" = allOf[
	type[
		obj
	],
	props[
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_DownwardAPIVolumeFile");
				
			]
		];
		true
	]
],
def "os_authorization_LocalSubjectAccessReview" = allOf[
	type[
		obj
	],
	props[
		"isNonResourceURL": type[
			bool
		],
		"resource": type[
			str
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"resourceAPIGroup": type[
			str
		],
		"verb": type[
			str
		],
		"groups": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"resourceName": type[
			str
		],
		"content": ref("kubernetes_apimachinery_pkg_runtime_RawExtension"),
		"path": type[
			str
		],
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"namespace": type[
			str
		],
		"resourceAPIVersion": type[
			str
		],
		"scopes": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"user": type[
			str
		];
		true
	]
],
def "kubernetes_apps_ReplicaSet" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_apps_ReplicaSetSpec"),
		"status": ref("kubernetes_apps_ReplicaSetStatus");
		true
	]
],
def "os_build_BuildStatus" = allOf[
	type[
		obj
	],
	props[
		"duration": type[
			int
		],
		"output": ref("os_build_BuildStatusOutput"),
		"phase": type[
			str
		],
		"reason": type[
			str
		],
		"completionTimestamp": ref("kubernetes_apimachinery_Time"),
		"stages": allOf[
			type[
				arr
			],
			items[
				ref("os_build_StageInfo");
				
			]
		],
		"cancelled": type[
			bool
		],
		"message": type[
			str
		],
		"config": ref("kubernetes_core_ObjectReference"),
		"logSnippet": type[
			str
		],
		"outputDockerImageReference": type[
			str
		],
		"startTimestamp": ref("kubernetes_apimachinery_Time");
		true
	]
],
def "kubernetes_core_LoadBalancerStatus" = allOf[
	type[
		obj
	],
	props[
		"ingress": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_LoadBalancerIngress");
				
			]
		];
		true
	]
],
def "kubernetes_apimachinery_Preconditions" = allOf[
	type[
		obj
	],
	props[
		"uid": type[
			str
		];
		true
	]
],
def "os_authorization_ServiceAccountRestriction" = allOf[
	type[
		obj
	],
	props[
		"serviceaccounts": allOf[
			type[
				arr
			],
			items[
				ref("os_authorization_ServiceAccountReference");
				
			]
		],
		"namespaces": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "os_build_GitHubWebHookCause" = allOf[
	type[
		obj
	],
	props[
		"secret": type[
			str
		],
		"revision": ref("os_build_SourceRevision");
		true
	]
],
def "kubernetes_core_GlusterfsPersistentVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"path": type[
			str
		],
		"endpoints": type[
			str
		],
		"readOnly": type[
			bool
		],
		"endpointsNamespace": type[
			str
		];
		true
	]
],
def "kubernetes_batch_CronJobSpec" = allOf[
	type[
		obj
	],
	props[
		"suspend": type[
			bool
		],
		"schedule": type[
			str
		],
		"jobTemplate": ref("kubernetes_batch_JobTemplateSpec"),
		"startingDeadlineSeconds": type[
			int
		],
		"concurrencyPolicy": type[
			str
		],
		"failedJobsHistoryLimit": type[
			int
		],
		"successfulJobsHistoryLimit": type[
			int
		];
		true
	]
],
def "kubernetes_apiextensions_CustomResourceDefinitionNames" = allOf[
	type[
		obj
	],
	props[
		"listKind": type[
			str
		],
		"shortNames": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"plural": type[
			str
		],
		"kind": type[
			str
		],
		"categories": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"singular": type[
			str
		];
		true
	]
],
def "os_security_SecurityContextConstraintsList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_security_SecurityContextConstraints");
				
			]
		];
		true
	]
],
def "kubernetes_apiextensions_CustomResourceSubresourceStatus" = allOf[
	type[
		obj
	],
	props[
		;
		true
	]
],
def "os_build_BuildOutput" = allOf[
	type[
		obj
	],
	props[
		"to": ref("kubernetes_core_ObjectReference"),
		"pushSecret": ref("kubernetes_core_LocalObjectReference"),
		"imageLabels": allOf[
			type[
				arr
			],
			items[
				ref("os_build_ImageLabel");
				
			]
		];
		true
	]
],
def "os_build_ImageLabel" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		],
		"value": type[
			str
		];
		true
	]
],
def "kubernetes_extensions_PodSecurityPolicy" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_extensions_PodSecurityPolicySpec");
		true
	]
],
def "kubernetes_autoscaling_HorizontalPodAutoscalerSpec" = allOf[
	type[
		obj
	],
	props[
		"maxReplicas": type[
			int
		],
		"minReplicas": type[
			int
		],
		"metrics": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_autoscaling_MetricSpec");
				
			]
		],
		"scaleTargetRef": ref("kubernetes_autoscaling_CrossVersionObjectReference");
		true
	]
],
def "kubernetes_core_LimitRangeItem" = allOf[
	type[
		obj
	],
	props[
		"default": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_resource_Quantity")
			]
		],
		"min": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_resource_Quantity")
			]
		],
		"max": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_resource_Quantity")
			]
		],
		"maxLimitRequestRatio": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_resource_Quantity")
			]
		],
		"type": type[
			str
		],
		"defaultRequest": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_resource_Quantity")
			]
		];
		true
	]
],
def "kubernetes_core_WeightedPodAffinityTerm" = allOf[
	type[
		obj
	],
	props[
		"podAffinityTerm": ref("kubernetes_core_PodAffinityTerm"),
		"weight": type[
			int
		];
		true
	]
],
def "os_image_ImageSignature" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"issuedTo": ref("os_image_SignatureSubject"),
		"created": ref("kubernetes_apimachinery_Time"),
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"issuedBy": ref("os_image_SignatureIssuer"),
		"signedClaims": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"conditions": allOf[
			type[
				arr
			],
			items[
				ref("os_image_SignatureCondition");
				
			]
		],
		"type": type[
			str
		],
		"content": type[
			str
		],
		"imageIdentity": type[
			str
		];
		true
	]
],
def "kubernetes_core_Affinity" = allOf[
	type[
		obj
	],
	props[
		"nodeAffinity": ref("kubernetes_core_NodeAffinity"),
		"podAffinity": ref("kubernetes_core_PodAffinity"),
		"podAntiAffinity": ref("kubernetes_core_PodAntiAffinity");
		true
	]
],
def "os_image_SignatureIssuer" = allOf[
	type[
		obj
	],
	props[
		"commonName": type[
			str
		],
		"organization": type[
			str
		];
		true
	]
],
def "kubernetes_core_PersistentVolumeClaimCondition" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"lastTransitionTime": ref("kubernetes_apimachinery_Time"),
		"message": type[
			str
		],
		"type": type[
			str
		],
		"lastProbeTime": ref("kubernetes_apimachinery_Time"),
		"status": type[
			str
		];
		true
	]
],
def "os_image_ImageStreamList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_image_ImageStream");
				
			]
		];
		true
	]
],
def "kubernetes_certificates_CertificateSigningRequestList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_certificates_CertificateSigningRequest");
				
			]
		];
		true
	]
],
def "os_build_SecretSpec" = allOf[
	type[
		obj
	],
	props[
		"mountPath": type[
			str
		],
		"secretSource": ref("kubernetes_core_LocalObjectReference");
		true
	]
],
def "os_authorization_SubjectAccessReviewResponse" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"allowed": type[
			bool
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"namespace": type[
			str
		],
		"evaluationError": type[
			str
		];
		true
	]
],
def "os_security_AllowedFlexVolume" = allOf[
	type[
		obj
	],
	props[
		"driver": type[
			str
		];
		true
	]
],
def "os_authorization_UserRestriction" = allOf[
	type[
		obj
	],
	props[
		"groups": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"users": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"labels": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apimachinery_LabelSelector");
				
			]
		];
		true
	]
],
def "kubernetes_core_CinderVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"secretRef": ref("kubernetes_core_LocalObjectReference"),
		"volumeID": type[
			str
		],
		"readOnly": type[
			bool
		],
		"fsType": type[
			str
		];
		true
	]
],
def "os_user_Identity" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"extra": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"providerUserName": type[
			str
		],
		"user": ref("kubernetes_core_ObjectReference"),
		"providerName": type[
			str
		];
		true
	]
],
def "kubernetes_apps_ReplicaSetStatus" = allOf[
	type[
		obj
	],
	props[
		"fullyLabeledReplicas": type[
			int
		],
		"replicas": type[
			int
		],
		"readyReplicas": type[
			int
		],
		"conditions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apps_ReplicaSetCondition");
				
			]
		],
		"availableReplicas": type[
			int
		],
		"observedGeneration": type[
			int
		];
		true
	]
],
def "os_build_ProxyConfig" = allOf[
	type[
		obj
	],
	props[
		"httpProxy": type[
			str
		],
		"httpsProxy": type[
			str
		],
		"noProxy": type[
			str
		];
		true
	]
],
def "kubernetes_core_PreferredSchedulingTerm" = allOf[
	type[
		obj
	],
	props[
		"preference": ref("kubernetes_core_NodeSelectorTerm"),
		"weight": type[
			int
		];
		true
	]
],
def "os_build_CommonWebHookCause" = allOf[
	type[
		obj
	],
	props[
		"secret": type[
			str
		],
		"revision": ref("os_build_SourceRevision");
		true
	]
],
def "os_build_BuildPostCommitSpec" = allOf[
	type[
		obj
	],
	props[
		"args": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"command": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"script": type[
			str
		];
		true
	]
],
def "kubernetes_authentication_UserInfo" = allOf[
	type[
		obj
	],
	props[
		"uid": type[
			str
		],
		"extra": allOf[
			type[
				obj
			],
			props[
				;
				allOf[
					type[
						arr
					],
					items[
						type[
							str
						];
						
					]
				]
			]
		],
		"groups": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"username": type[
			str
		];
		true
	]
],
def "os_build_GitSourceRevision" = allOf[
	type[
		obj
	],
	props[
		"committer": ref("os_build_SourceControlUser"),
		"author": ref("os_build_SourceControlUser"),
		"commit": type[
			str
		],
		"message": type[
			str
		];
		true
	]
],
def "kubernetes_rbac_Role" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"rules": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_rbac_PolicyRule");
				
			]
		];
		true
	]
],
def "kubernetes_config_NamedAuthInfo" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		],
		"user": ref("kubernetes_config_AuthInfo");
		true
	]
],
def "os_image_ImageStreamStatus" = allOf[
	type[
		obj
	],
	props[
		"dockerImageRepository": type[
			str
		],
		"publicDockerImageRepository": type[
			str
		],
		"tags": allOf[
			type[
				arr
			],
			items[
				ref("os_image_NamedTagEventList");
				
			]
		];
		true
	]
],
def "kubernetes_config_Context" = allOf[
	type[
		obj
	],
	props[
		"cluster": type[
			str
		],
		"extensions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_config_NamedExtension");
				
			]
		],
		"namespace": type[
			str
		],
		"user": type[
			str
		];
		true
	]
],
def "kubernetes_autoscaling_ExternalMetricSource" = allOf[
	type[
		obj
	],
	props[
		"metricSelector": ref("kubernetes_apimachinery_LabelSelector"),
		"metricName": type[
			str
		],
		"targetAverageValue": ref("kubernetes_resource_Quantity"),
		"targetValue": ref("kubernetes_resource_Quantity");
		true
	]
],
def "kubernetes_core_CephFSVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"path": type[
			str
		],
		"secretRef": ref("kubernetes_core_LocalObjectReference"),
		"secretFile": type[
			str
		],
		"readOnly": type[
			bool
		],
		"user": type[
			str
		],
		"monitors": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "os_build_Build" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("os_build_BuildSpec"),
		"status": ref("os_build_BuildStatus");
		true
	]
],
def "kubernetes_core_ScopedResourceSelectorRequirement" = allOf[
	type[
		obj
	],
	props[
		"scopeName": type[
			str
		],
		"values": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"operator": type[
			str
		];
		true
	]
],
def "kubernetes_core_EnvVarSource" = allOf[
	type[
		obj
	],
	props[
		"secretKeyRef": ref("kubernetes_core_SecretKeySelector"),
		"resourceFieldRef": ref("kubernetes_core_ResourceFieldSelector"),
		"configMapKeyRef": ref("kubernetes_core_ConfigMapKeySelector"),
		"fieldRef": ref("kubernetes_core_ObjectFieldSelector");
		true
	]
],
def "kubernetes_core_NodeSelectorTerm" = allOf[
	type[
		obj
	],
	props[
		"matchExpressions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_NodeSelectorRequirement");
				
			]
		],
		"matchFields": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_NodeSelectorRequirement");
				
			]
		];
		true
	]
],
def "kubernetes_policy_PodDisruptionBudgetSpec" = allOf[
	type[
		obj
	],
	props[
		"minAvailable": ref("kubernetes_apimachinery_pkg_util_intstr_IntOrString"),
		"maxUnavailable": ref("kubernetes_apimachinery_pkg_util_intstr_IntOrString"),
		"selector": ref("kubernetes_apimachinery_LabelSelector");
		true
	]
],
def "kubernetes_core_Container" = allOf[
	type[
		obj
	],
	props[
		"volumeDevices": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_VolumeDevice");
				
			]
		],
		"image": type[
			str
		],
		"imagePullPolicy": type[
			str
		],
		"livenessProbe": ref("kubernetes_core_Probe"),
		"stdin": type[
			bool
		],
		"terminationMessagePolicy": type[
			str
		],
		"terminationMessagePath": type[
			str
		],
		"workingDir": type[
			str
		],
		"resources": ref("kubernetes_core_ResourceRequirements"),
		"securityContext": ref("kubernetes_core_SecurityContext"),
		"env": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_EnvVar");
				
			]
		],
		"ports": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_ContainerPort");
				
			]
		],
		"command": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"volumeMounts": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_VolumeMount");
				
			]
		],
		"args": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"lifecycle": ref("kubernetes_core_Lifecycle"),
		"name": allOf[
			length(0,63),
			pattern("^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"),
			type[
				str
			]
		],
		"tty": type[
			bool
		],
		"readinessProbe": ref("kubernetes_core_Probe"),
		"stdinOnce": type[
			bool
		],
		"envFrom": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_EnvFromSource");
				
			]
		];
		true
	]
],
def "kubernetes_core_Secret" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"data": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"type": type[
			str
		],
		"stringData": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		];
		true
	]
],
def "kubernetes_apimachinery_MicroTime" = allOf[
	type[
		obj
	],
	props[
		"Time": type[
			str
		];
		true
	]
],
def "kubernetes_core_TopologySelectorTerm" = allOf[
	type[
		obj
	],
	props[
		"matchLabelExpressions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_TopologySelectorLabelRequirement");
				
			]
		];
		true
	]
],
def "os_image_TagReference" = allOf[
	type[
		obj
	],
	props[
		"generation": type[
			int
		],
		"reference": type[
			bool
		],
		"importPolicy": ref("os_image_TagImportPolicy"),
		"name": type[
			str
		],
		"referencePolicy": ref("os_image_TagReferencePolicy"),
		"annotations": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"from": ref("kubernetes_core_ObjectReference");
		true
	]
],
def "os_security_IDRange" = allOf[
	type[
		obj
	],
	props[
		"min": type[
			int
		],
		"max": type[
			int
		];
		true
	]
],
def "os_build_BuildStatusOutput" = allOf[
	type[
		obj
	],
	props[
		"to": ref("os_build_BuildStatusOutputTo");
		true
	]
],
def "os_route_RouteIngress" = allOf[
	type[
		obj
	],
	props[
		"routerName": type[
			str
		],
		"wildcardPolicy": type[
			str
		],
		"host": type[
			str
		],
		"routerCanonicalHostname": type[
			str
		],
		"conditions": allOf[
			type[
				arr
			],
			items[
				ref("os_route_RouteIngressCondition");
				
			]
		];
		true
	]
],
def "os_build_BuildConfigStatus" = allOf[
	type[
		obj
	],
	props[
		"lastVersion": type[
			int
		];
		true
	]
],
def "kubernetes_core_EnvVar" = allOf[
	type[
		obj
	],
	props[
		"name": allOf[
			pattern("^[A-Za-z_][A-Za-z0-9_]*$"),
			type[
				str
			]
		],
		"value": type[
			str
		],
		"valueFrom": ref("kubernetes_core_EnvVarSource");
		true
	]
],
def "kubernetes_core_ISCSIVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"chapAuthSession": type[
			bool
		],
		"iscsiInterface": type[
			str
		],
		"lun": type[
			int
		],
		"chapAuthDiscovery": type[
			bool
		],
		"iqn": type[
			str
		],
		"portals": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"secretRef": ref("kubernetes_core_LocalObjectReference"),
		"initiatorName": type[
			str
		],
		"readOnly": type[
			bool
		],
		"fsType": type[
			str
		],
		"targetPortal": type[
			str
		];
		true
	]
],
def "os_user_IdentityList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_user_Identity");
				
			]
		];
		true
	]
],
def "kubernetes_core_EnvFromSource" = allOf[
	type[
		obj
	],
	props[
		"configMapRef": ref("kubernetes_core_ConfigMapEnvSource"),
		"prefix": type[
			str
		],
		"secretRef": ref("kubernetes_core_SecretEnvSource");
		true
	]
],
def "kubernetes_extensions_SELinuxStrategyOptions" = allOf[
	type[
		obj
	],
	props[
		"seLinuxOptions": ref("kubernetes_core_SELinuxOptions"),
		"rule": type[
			str
		];
		true
	]
],
def "kubernetes_storageclass_StorageClass" = allOf[
	type[
		obj
	],
	props[
		"volumeBindingMode": type[
			str
		],
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"provisioner": type[
			str
		],
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"allowVolumeExpansion": type[
			bool
		],
		"reclaimPolicy": type[
			str
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"mountOptions": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"parameters": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"allowedTopologies": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_TopologySelectorTerm");
				
			]
		];
		true
	]
],
def "kubernetes_core_SecretEnvSource" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		],
		"optional": type[
			bool
		];
		true
	]
],
def "kubernetes_core_ObjectFieldSelector" = allOf[
	type[
		obj
	],
	props[
		"apiVersion": type[
			str
		],
		"fieldPath": type[
			str
		];
		true
	]
],
def "kubernetes_core_PersistentVolumeClaimStatus" = allOf[
	type[
		obj
	],
	props[
		"phase": type[
			str
		],
		"accessModes": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"conditions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_PersistentVolumeClaimCondition");
				
			]
		],
		"capacity": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_resource_Quantity")
			]
		];
		true
	]
],
def "kubernetes_core_NodeCondition" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"lastHeartbeatTime": ref("kubernetes_apimachinery_Time"),
		"lastTransitionTime": ref("kubernetes_apimachinery_Time"),
		"message": type[
			str
		],
		"type": type[
			str
		],
		"status": type[
			str
		];
		true
	]
],
def "os_authorization_ClusterRoleBindingList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_authorization_ClusterRoleBinding");
				
			]
		];
		true
	]
],
def "kubernetes_settings_PodPresetSpec" = allOf[
	type[
		obj
	],
	props[
		"volumes": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_Volume");
				
			]
		],
		"selector": ref("kubernetes_apimachinery_LabelSelector"),
		"env": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_EnvVar");
				
			]
		],
		"envFrom": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_EnvFromSource");
				
			]
		],
		"volumeMounts": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_VolumeMount");
				
			]
		];
		true
	]
],
def "os_security_SELinuxContextStrategyOptions" = allOf[
	type[
		obj
	],
	props[
		"seLinuxOptions": ref("kubernetes_core_SELinuxOptions"),
		"type": type[
			str
		];
		true
	]
],
def "kubernetes_core_ResourceQuota" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_core_ResourceQuotaSpec"),
		"status": ref("kubernetes_core_ResourceQuotaStatus");
		true
	]
],
def "os_image_SignatureSubject" = allOf[
	type[
		obj
	],
	props[
		"commonName": type[
			str
		],
		"organization": type[
			str
		],
		"publicKeyID": type[
			str
		];
		true
	]
],
def "kubernetes_apimachinery_Patch" = allOf[
	type[
		obj
	],
	props[
		;
		true
	]
],
def "kubernetes_core_DownwardAPIVolumeFile" = allOf[
	type[
		obj
	],
	props[
		"mode": type[
			int
		],
		"path": type[
			str
		],
		"resourceFieldRef": ref("kubernetes_core_ResourceFieldSelector"),
		"fieldRef": ref("kubernetes_core_ObjectFieldSelector");
		true
	]
],
def "kubernetes_core_PodTemplate" = allOf[
	type[
		obj
	],
	props[
		"template": ref("kubernetes_core_PodTemplateSpec"),
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		];
		true
	]
],
def "kubernetes_autoscaling_ExternalMetricStatus" = allOf[
	type[
		obj
	],
	props[
		"metricSelector": ref("kubernetes_apimachinery_LabelSelector"),
		"metricName": type[
			str
		],
		"currentAverageValue": ref("kubernetes_resource_Quantity"),
		"currentValue": ref("kubernetes_resource_Quantity");
		true
	]
],
def "kubernetes_core_NamespaceList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_Namespace");
				
			]
		];
		true
	]
],
def "os_build_CustomBuildStrategy" = allOf[
	type[
		obj
	],
	props[
		"buildAPIVersion": type[
			str
		],
		"forcePull": type[
			bool
		],
		"from": ref("kubernetes_core_ObjectReference"),
		"env": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_EnvVar");
				
			]
		],
		"exposeDockerSocket": type[
			bool
		],
		"pullSecret": ref("kubernetes_core_LocalObjectReference"),
		"secrets": allOf[
			type[
				arr
			],
			items[
				ref("os_build_SecretSpec");
				
			]
		];
		true
	]
],
def "kubernetes_core_EmptyDirVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"sizeLimit": ref("kubernetes_resource_Quantity"),
		"medium": type[
			str
		];
		true
	]
],
def "kubernetes_extensions_IngressStatus" = allOf[
	type[
		obj
	],
	props[
		"loadBalancer": ref("kubernetes_core_LoadBalancerStatus");
		true
	]
],
def "kubernetes_apimachinery_GroupVersionResource" = allOf[
	type[
		obj
	],
	props[
		"resource": type[
			str
		],
		"version": type[
			str
		],
		"group": type[
			str
		];
		true
	]
],
def "kubernetes_core_NodeAffinity" = allOf[
	type[
		obj
	],
	props[
		"requiredDuringSchedulingIgnoredDuringExecution": ref("kubernetes_core_NodeSelector"),
		"preferredDuringSchedulingIgnoredDuringExecution": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_PreferredSchedulingTerm");
				
			]
		];
		true
	]
],
def "kubernetes_autoscaling_HorizontalPodAutoscalerCondition" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"lastTransitionTime": ref("kubernetes_apimachinery_Time"),
		"message": type[
			str
		],
		"type": type[
			str
		],
		"status": type[
			str
		];
		true
	]
],
def "kubernetes_core_EventSource" = allOf[
	type[
		obj
	],
	props[
		"component": type[
			str
		],
		"host": type[
			str
		];
		true
	]
],
def "os_image_ImageStreamTagList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_image_ImageStreamTag");
				
			]
		];
		true
	]
],
def "kubernetes_networking_NetworkPolicy" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_networking_NetworkPolicySpec");
		true
	]
],
def "os_image_TagEvent" = allOf[
	type[
		obj
	],
	props[
		"generation": type[
			int
		],
		"image": type[
			str
		],
		"created": ref("kubernetes_apimachinery_Time"),
		"dockerImageReference": type[
			str
		];
		true
	]
],
def "kubernetes_apps_StatefulSetStatus" = allOf[
	type[
		obj
	],
	props[
		"currentRevision": type[
			str
		],
		"replicas": type[
			int
		],
		"updateRevision": type[
			str
		],
		"readyReplicas": type[
			int
		],
		"collisionCount": type[
			int
		],
		"currentReplicas": type[
			int
		],
		"conditions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apps_StatefulSetCondition");
				
			]
		],
		"updatedReplicas": type[
			int
		],
		"observedGeneration": type[
			int
		];
		true
	]
],
def "kubernetes_core_ResourceRequirements" = allOf[
	type[
		obj
	],
	props[
		"requests": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_resource_Quantity")
			]
		],
		"limits": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_resource_Quantity")
			]
		];
		true
	]
],
def "os_build_CommonSpec" = allOf[
	type[
		obj
	],
	props[
		"output": ref("os_build_BuildOutput"),
		"completionDeadlineSeconds": type[
			int
		],
		"resources": ref("kubernetes_core_ResourceRequirements"),
		"serviceAccount": type[
			str
		],
		"source": ref("os_build_BuildSource"),
		"postCommit": ref("os_build_BuildPostCommitSpec"),
		"strategy": ref("os_build_BuildStrategy"),
		"nodeSelector": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"revision": ref("os_build_SourceRevision");
		true
	]
],
def "kubernetes_extensions_HTTPIngressRuleValue" = allOf[
	type[
		obj
	],
	props[
		"paths": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_extensions_HTTPIngressPath");
				
			]
		];
		true
	]
],
def "kubernetes_apps_StatefulSet" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_apps_StatefulSetSpec"),
		"status": ref("kubernetes_apps_StatefulSetStatus");
		true
	]
],
def "os_project_ProjectStatus" = allOf[
	type[
		obj
	],
	props[
		"phase": type[
			str
		];
		true
	]
],
def "kubernetes_policy_PodDisruptionBudget" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_policy_PodDisruptionBudgetSpec"),
		"status": ref("kubernetes_policy_PodDisruptionBudgetStatus");
		true
	]
],
def "kubernetes_apiextensions_JSONSchemaPropsOrStringArray" = allOf[
	type[
		obj
	],
	props[
		"Schema": ref("kubernetes_apiextensions_JSONSchemaProps"),
		"Property": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_core_PodTemplateList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_PodTemplate");
				
			]
		];
		true
	]
],
def "os_oauth_OAuthClientAuthorizationList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_oauth_OAuthClientAuthorization");
				
			]
		];
		true
	]
],
def "os_oauth_OAuthClient" = allOf[
	type[
		obj
	],
	props[
		"additionalSecrets": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"respondWithChallenges": type[
			bool
		],
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"scopeRestrictions": allOf[
			type[
				arr
			],
			items[
				ref("os_oauth_ScopeRestriction");
				
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"accessTokenInactivityTimeoutSeconds": type[
			int
		],
		"grantMethod": type[
			str
		],
		"accessTokenMaxAgeSeconds": type[
			int
		],
		"secret": type[
			str
		],
		"redirectURIs": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_core_PortworxVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"volumeID": type[
			str
		],
		"readOnly": type[
			bool
		],
		"fsType": type[
			str
		];
		true
	]
],
def "kubernetes_extensions_IDRange" = allOf[
	type[
		obj
	],
	props[
		"min": type[
			int
		],
		"max": type[
			int
		];
		true
	]
],
def "kubernetes_apiextensions_WebhookClientConfig" = allOf[
	type[
		obj
	],
	props[
		"caBundle": type[
			str
		],
		"service": ref("kubernetes_apiextensions_ServiceReference"),
		"url": type[
			str
		];
		true
	]
],
def "kubernetes_core_KeyToPath" = allOf[
	type[
		obj
	],
	props[
		"mode": type[
			int
		],
		"path": type[
			str
		],
		"key": type[
			str
		];
		true
	]
],
def "kubernetes_apimachinery_OwnerReference" = allOf[
	type[
		obj
	],
	props[
		"uid": type[
			str
		],
		"controller": type[
			bool
		],
		"apiVersion": type[
			str
		],
		"kind": type[
			str
		],
		"name": type[
			str
		],
		"blockOwnerDeletion": type[
			bool
		];
		true
	]
],
def "kubernetes_core_PodAffinityTerm" = allOf[
	type[
		obj
	],
	props[
		"labelSelector": ref("kubernetes_apimachinery_LabelSelector"),
		"topologyKey": type[
			str
		],
		"namespaces": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
rootdef "root" = allOf[
	type[
		obj
	],
	props[
		"Initializers": ref("kubernetes_apimachinery_Initializers"),
		"PersistentVolumeClaimList": ref("kubernetes_core_PersistentVolumeClaimList"),
		"ClusterRoleBinding": ref("os_authorization_ClusterRoleBinding"),
		"Node": ref("kubernetes_core_Node"),
		"IdentityList": ref("os_user_IdentityList"),
		"RouteList": ref("os_route_RouteList"),
		"EventSeriesState": type[
			str
		],
		"PersistentVolumeList": ref("kubernetes_core_PersistentVolumeList"),
		"CronJobList": ref("kubernetes_batch_CronJobList"),
		"BaseKubernetesList": ref("kubernetes_apimachinery_List"),
		"EnvVar": ref("kubernetes_core_EnvVar"),
		"StatefulSetList": ref("kubernetes_apps_StatefulSetList"),
		"Identity": ref("os_user_Identity"),
		"K8sSubjectAccessReview": ref("kubernetes_authorization_SubjectAccessReview"),
		"Status": ref("kubernetes_apimachinery_Status"),
		"K8sRole": ref("kubernetes_rbac_Role"),
		"ValidatingWebhookConfiguration": ref("kubernetes_admissionregistration_ValidatingWebhookConfiguration"),
		"PriorityClass": ref("kubernetes_scheduling_PriorityClass"),
		"K8sClusterRole": ref("kubernetes_rbac_ClusterRole"),
		"NetworkPolicy": ref("kubernetes_networking_NetworkPolicy"),
		"NodeList": ref("kubernetes_core_NodeList"),
		"ImageStreamList": ref("os_image_ImageStreamList"),
		"ClusterRole": ref("os_authorization_ClusterRole"),
		"Namespace": ref("kubernetes_core_Namespace"),
		"CustomResourceDefinitionCondition": ref("kubernetes_apiextensions_CustomResourceDefinitionCondition"),
		"CustomResourceDefinitionList": ref("kubernetes_apiextensions_CustomResourceDefinitionList"),
		"Project": ref("os_project_Project"),
		"Initializer": ref("kubernetes_apimachinery_Initializer"),
		"ReplicaSetList": ref("kubernetes_apps_ReplicaSetList"),
		"CronJob": ref("kubernetes_batch_CronJob"),
		"ProjectRequest": ref("os_project_ProjectRequest"),
		"OAuthAccessToken": ref("os_oauth_OAuthAccessToken"),
		"Rule": ref("kubernetes_admissionregistration_Rule"),
		"DeploymentConfig": ref("os_deploy_DeploymentConfig"),
		"OAuthClientAuthorization": ref("os_oauth_OAuthClientAuthorization"),
		"PodSecurityPolicyList": ref("kubernetes_extensions_PodSecurityPolicyList"),
		"Group": ref("os_user_Group"),
		"ServiceAccount": ref("kubernetes_core_ServiceAccount"),
		"ResourceQuotaList": ref("kubernetes_core_ResourceQuotaList"),
		"PriorityClassList": ref("kubernetes_scheduling_PriorityClassList"),
		"ImageStreamTagList": ref("os_image_ImageStreamTagList"),
		"AggregationRule": ref("kubernetes_rbac_AggregationRule"),
		"CustomResourceDefinitionSpec": ref("kubernetes_apiextensions_CustomResourceDefinitionSpec"),
		"SubjectAccessReview": ref("os_authorization_SubjectAccessReview"),
		"HorizontalPodAutoscalerList": ref("kubernetes_autoscaling_HorizontalPodAutoscalerList"),
		"DaemonSetList": ref("kubernetes_apps_DaemonSetList"),
		"RoleBindingRestriction": ref("os_authorization_RoleBindingRestriction"),
		"NetNameSpaceList": ref("os_network_NetNamespaceList"),
		"ProjectList": ref("os_project_ProjectList"),
		"PodSecurityPolicy": ref("kubernetes_extensions_PodSecurityPolicy"),
		"PatchType": type[
			str
		],
		"JobList": ref("kubernetes_batch_JobList"),
		"WatchEvent": ref("kubernetes_watch_WatchEvent"),
		"PodDisruptionBudgetList": ref("kubernetes_policy_PodDisruptionBudgetList"),
		"ReplicaSet": ref("kubernetes_apps_ReplicaSet"),
		"ReplicationControllerList": ref("kubernetes_core_ReplicationControllerList"),
		"EndpointsList": ref("kubernetes_core_EndpointsList"),
		"AdmissionWebhook": ref("kubernetes_admissionregistration_Webhook"),
		"ObjectMeta": ref("kubernetes_apimachinery_ObjectMeta"),
		"ClusterRoleBindingList": ref("os_authorization_ClusterRoleBindingList"),
		"PodList": ref("kubernetes_core_PodList"),
		"TokenReview": ref("kubernetes_authentication_TokenReview"),
		"K8sRoleBindingList": ref("kubernetes_rbac_RoleBindingList"),
		"StorageClass": ref("kubernetes_storageclass_StorageClass"),
		"EventSeries": ref("kubernetes_events_EventSeries"),
		"SecurityContextConstraints": ref("os_security_SecurityContextConstraints"),
		"ImageList": ref("os_image_ImageList"),
		"K8sClusterRoleBindingList": ref("kubernetes_rbac_ClusterRoleBindingList"),
		"OAuthAccessTokenList": ref("os_oauth_OAuthAccessTokenList"),
		"EventList": ref("kubernetes_core_EventList"),
		"PodTemplateList": ref("kubernetes_core_PodTemplateList"),
		"RoleBindingList": ref("os_authorization_RoleBindingList"),
		"Event": ref("kubernetes_events_Event"),
		"StorageClassList": ref("kubernetes_storageclass_StorageClassList"),
		"PersistentVolume": ref("kubernetes_core_PersistentVolume"),
		"NetworkPolicyList": ref("kubernetes_networking_NetworkPolicyList"),
		"CustomResourceDefinitionStatus": ref("kubernetes_apiextensions_CustomResourceDefinitionStatus"),
		"RuleWithOperations": ref("kubernetes_admissionregistration_RuleWithOperations"),
		"CertificateSigningRequestStatus": ref("kubernetes_certificates_CertificateSigningRequestStatus"),
		"K8sClusterRoleList": ref("kubernetes_rbac_ClusterRoleList"),
		"Deployment": ref("kubernetes_apps_Deployment"),
		"ImageStreamImport": ref("os_image_ImageStreamImport"),
		"PodPreset": ref("kubernetes_settings_PodPreset"),
		"AdmissionResponse": ref("kubernetes_admission_AdmissionResponse"),
		"K8sRoleBinding": ref("kubernetes_rbac_RoleBinding"),
		"K8sLocalSubjectAccessReview": ref("kubernetes_authorization_LocalSubjectAccessReview"),
		"K8sClusterRoleBinding": ref("kubernetes_rbac_ClusterRoleBinding"),
		"Template": ref("os_template_Template"),
		"ValidatingWebhookConfigurationList": ref("kubernetes_admissionregistration_ValidatingWebhookConfigurationList"),
		"OAuthAuthorizeTokenList": ref("os_oauth_OAuthAuthorizeTokenList"),
		"ContainerStatus": ref("kubernetes_core_ContainerStatus"),
		"GroupList": ref("os_user_GroupList"),
		"RoleBinding": ref("os_authorization_RoleBinding"),
		"Job": ref("kubernetes_batch_Job"),
		"Route": ref("os_route_Route"),
		"Binding": ref("kubernetes_core_Binding"),
		"DeleteOptions": ref("kubernetes_apimachinery_DeleteOptions"),
		"TagEvent": ref("os_image_TagEvent"),
		"CertificateSigningRequest": ref("kubernetes_certificates_CertificateSigningRequest"),
		"RoleList": ref("os_authorization_RoleList"),
		"ServiceList": ref("kubernetes_core_ServiceList"),
		"Ingress": ref("kubernetes_extensions_Ingress"),
		"BuildRequest": ref("os_build_BuildRequest"),
		"AdmissionReview": ref("kubernetes_admission_AdmissionReview"),
		"OAuthAuthorizeToken": ref("os_oauth_OAuthAuthorizeToken"),
		"Role": ref("os_authorization_Role"),
		"Secret": ref("kubernetes_core_Secret"),
		"MutatingWebhookConfigurationList": ref("kubernetes_admissionregistration_MutatingWebhookConfigurationList"),
		"HorizontalPodAutoscaler": ref("kubernetes_autoscaling_HorizontalPodAutoscaler"),
		"Toleration": ref("kubernetes_core_Toleration"),
		"MutatingWebhookConfiguration": ref("kubernetes_admissionregistration_MutatingWebhookConfiguration"),
		"DaemonSet": ref("kubernetes_apps_DaemonSet"),
		"PersistentVolumeClaim": ref("kubernetes_core_PersistentVolumeClaim"),
		"StatefulSet": ref("kubernetes_apps_StatefulSet"),
		"Patch": ref("kubernetes_apimachinery_Patch"),
		"ServiceAccountList": ref("kubernetes_core_ServiceAccountList"),
		"BuildConfigList": ref("os_build_BuildConfigList"),
		"ConfigMapList": ref("kubernetes_core_ConfigMapList"),
		"TemplateList": ref("os_template_TemplateList"),
		"User": ref("os_user_User"),
		"PodDisruptionBudget": ref("kubernetes_policy_PodDisruptionBudget"),
		"SecretList": ref("kubernetes_core_SecretList"),
		"OAuthClient": ref("os_oauth_OAuthClient"),
		"ComponentStatusList": ref("kubernetes_core_ComponentStatusList"),
		"Config": ref("kubernetes_config_Config"),
		"CertificateSigningRequestList": ref("kubernetes_certificates_CertificateSigningRequestList"),
		"NetNameSpace": ref("os_network_NetNamespace"),
		"Operation": type[
			str
		],
		"IngressList": ref("kubernetes_extensions_IngressList"),
		"LimitRangeList": ref("kubernetes_core_LimitRangeList"),
		"NamespaceList": ref("kubernetes_core_NamespaceList"),
		"Endpoints": ref("kubernetes_core_Endpoints"),
		"DeploymentList": ref("kubernetes_apps_DeploymentList"),
		"OAuthClientAuthorizationList": ref("os_oauth_OAuthClientAuthorizationList"),
		"OAuthClientList": ref("os_oauth_OAuthClientList"),
		"CertificateSigningRequestCondition": ref("kubernetes_certificates_CertificateSigningRequestCondition"),
		"ResourceQuota": ref("kubernetes_core_ResourceQuota"),
		"K8sRoleList": ref("kubernetes_rbac_RoleList"),
		"PodPresetSpec": ref("kubernetes_settings_PodPresetSpec"),
		"UserList": ref("os_user_UserList"),
		"DeploymentConfigList": ref("os_deploy_DeploymentConfigList"),
		"CustomResourceDefinitionNames": ref("kubernetes_apiextensions_CustomResourceDefinitionNames"),
		"BuildList": ref("os_build_BuildList"),
		"CertificateSigningRequestSpec": ref("kubernetes_certificates_CertificateSigningRequestSpec"),
		"ConfigMap": ref("kubernetes_core_ConfigMap"),
		"DeploymentRollback": ref("kubernetes_extensions_DeploymentRollback"),
		"RootPaths": ref("kubernetes_apimachinery_RootPaths"),
		"SecurityContextConstraintsList": ref("os_security_SecurityContextConstraintsList"),
		"CustomResourceDefinition": ref("kubernetes_apiextensions_CustomResourceDefinition"),
		"Quantity": ref("kubernetes_resource_Quantity"),
		"Scale": ref("kubernetes_extensions_Scale"),
		"Info": ref("kubernetes_apimachinery_pkg_version_Info"),
		"JSONSchemaPropsorStringArray": ref("kubernetes_apiextensions_JSONSchemaPropsOrStringArray"),
		"LocalSubjectAccessReview": ref("os_authorization_LocalSubjectAccessReview"),
		"AdmissionRequest": ref("kubernetes_admission_AdmissionRequest"),
		"SubjectAccessReviewResponse": ref("os_authorization_SubjectAccessReviewResponse"),
		"TypeMeta": ref("kubernetes_apimachinery_TypeMeta"),
		"PodPresetList": ref("kubernetes_settings_PodPresetList");
		true
	]
],
def "os_oauth_ScopeRestriction" = allOf[
	type[
		obj
	],
	props[
		"clusterRole": ref("os_oauth_ClusterRoleScopeRestriction"),
		"literals": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_core_Toleration" = allOf[
	type[
		obj
	],
	props[
		"effect": type[
			str
		],
		"tolerationSeconds": type[
			int
		],
		"value": type[
			str
		],
		"key": type[
			str
		],
		"operator": type[
			str
		];
		true
	]
],
def "kubernetes_apimachinery_DeleteOptions" = allOf[
	type[
		obj
	],
	props[
		"orphanDependents": type[
			bool
		],
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"dryRun": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"preconditions": ref("kubernetes_apimachinery_Preconditions"),
		"gracePeriodSeconds": type[
			int
		],
		"propagationPolicy": type[
			str
		];
		true
	]
],
def "os_authorization_GroupRestriction" = allOf[
	type[
		obj
	],
	props[
		"groups": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"labels": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apimachinery_LabelSelector");
				
			]
		];
		true
	]
],
def "kubernetes_core_FlexVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"driver": type[
			str
		],
		"options": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"secretRef": ref("kubernetes_core_LocalObjectReference"),
		"readOnly": type[
			bool
		],
		"fsType": type[
			str
		];
		true
	]
],
def "kubernetes_core_SELinuxOptions" = allOf[
	type[
		obj
	],
	props[
		"role": type[
			str
		],
		"level": type[
			str
		],
		"type": type[
			str
		],
		"user": type[
			str
		];
		true
	]
],
def "kubernetes_apiextensions_JSONSchemaPropsOrBool" = allOf[
	type[
		obj
	],
	props[
		"Allows": type[
			bool
		],
		"Schema": ref("kubernetes_apiextensions_JSONSchemaProps");
		true
	]
],
def "kubernetes_core_NodeSystemInfo" = allOf[
	type[
		obj
	],
	props[
		"machineID": type[
			str
		],
		"bootID": type[
			str
		],
		"containerRuntimeVersion": type[
			str
		],
		"kernelVersion": type[
			str
		],
		"kubeletVersion": type[
			str
		],
		"systemUUID": type[
			str
		],
		"kubeProxyVersion": type[
			str
		],
		"operatingSystem": type[
			str
		],
		"architecture": type[
			str
		],
		"osImage": type[
			str
		];
		true
	]
],
def "kubernetes_core_Node" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_core_NodeSpec"),
		"status": ref("kubernetes_core_NodeStatus");
		true
	]
],
def "kubernetes_extensions_IngressList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_extensions_Ingress");
				
			]
		];
		true
	]
],
def "os_authorization_RoleBindingRestriction" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("os_authorization_RoleBindingRestrictionSpec");
		true
	]
],
def "kubernetes_core_ExecAction" = allOf[
	type[
		obj
	],
	props[
		"command": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_apiextensions_CustomResourceDefinitionSpec" = allOf[
	type[
		obj
	],
	props[
		"names": ref("kubernetes_apiextensions_CustomResourceDefinitionNames"),
		"versions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apiextensions_CustomResourceDefinitionVersion");
				
			]
		],
		"scope": type[
			str
		],
		"subresources": ref("kubernetes_apiextensions_CustomResourceSubresources"),
		"additionalPrinterColumns": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apiextensions_CustomResourceColumnDefinition");
				
			]
		],
		"version": type[
			str
		],
		"validation": ref("kubernetes_apiextensions_CustomResourceValidation"),
		"conversion": ref("kubernetes_apiextensions_CustomResourceConversion"),
		"group": type[
			str
		];
		true
	]
],
def "os_user_GroupList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_user_Group");
				
			]
		];
		true
	]
],
def "kubernetes_admissionregistration_ValidatingWebhookConfigurationList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_admissionregistration_ValidatingWebhookConfiguration");
				
			]
		];
		true
	]
],
def "kubernetes_core_NodeSelector" = allOf[
	type[
		obj
	],
	props[
		"nodeSelectorTerms": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_NodeSelectorTerm");
				
			]
		];
		true
	]
],
def "kubernetes_core_NamespaceStatus" = allOf[
	type[
		obj
	],
	props[
		"phase": type[
			str
		];
		true
	]
],
def "kubernetes_batch_JobList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_batch_Job");
				
			]
		];
		true
	]
],
def "kubernetes_core_NFSVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"path": type[
			str
		],
		"server": type[
			str
		],
		"readOnly": type[
			bool
		];
		true
	]
],
def "kubernetes_core_Lifecycle" = allOf[
	type[
		obj
	],
	props[
		"postStart": ref("kubernetes_core_Handler"),
		"preStop": ref("kubernetes_core_Handler");
		true
	]
],
def "os_build_BuildTriggerPolicy" = allOf[
	type[
		obj
	],
	props[
		"imageChange": ref("os_build_ImageChangeTrigger"),
		"github": ref("os_build_WebHookTrigger"),
		"gitlab": ref("os_build_WebHookTrigger"),
		"bitbucket": ref("os_build_WebHookTrigger"),
		"type": type[
			str
		],
		"generic": ref("os_build_WebHookTrigger");
		true
	]
],
def "os_image_SignatureCondition" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"lastTransitionTime": ref("kubernetes_apimachinery_Time"),
		"message": type[
			str
		],
		"type": type[
			str
		],
		"lastProbeTime": ref("kubernetes_apimachinery_Time"),
		"status": type[
			str
		];
		true
	]
],
def "kubernetes_extensions_IngressBackend" = allOf[
	type[
		obj
	],
	props[
		"servicePort": ref("kubernetes_apimachinery_pkg_util_intstr_IntOrString"),
		"serviceName": type[
			str
		];
		true
	]
],
def "kubernetes_batch_CronJob" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_batch_CronJobSpec"),
		"status": ref("kubernetes_batch_CronJobStatus");
		true
	]
],
def "kubernetes_config_Cluster" = allOf[
	type[
		obj
	],
	props[
		"server": type[
			str
		],
		"certificate-authority-data": type[
			str
		],
		"extensions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_config_NamedExtension");
				
			]
		],
		"certificate-authority": type[
			str
		],
		"insecure-skip-tls-verify": type[
			bool
		];
		true
	]
],
def "kubernetes_core_DaemonEndpoint" = allOf[
	type[
		obj
	],
	props[
		"Port": type[
			int
		];
		true
	]
],
def "kubernetes_rbac_RoleRef" = allOf[
	type[
		obj
	],
	props[
		"apiGroup": type[
			str
		],
		"kind": type[
			str
		],
		"name": type[
			str
		];
		true
	]
],
def "os_build_ImageChangeTrigger" = allOf[
	type[
		obj
	],
	props[
		"lastTriggeredImageID": type[
			str
		],
		"paused": type[
			bool
		],
		"from": ref("kubernetes_core_ObjectReference");
		true
	]
],
def "kubernetes_core_ScaleIOVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"system": type[
			str
		],
		"protectionDomain": type[
			str
		],
		"sslEnabled": type[
			bool
		],
		"storageMode": type[
			str
		],
		"volumeName": type[
			str
		],
		"secretRef": ref("kubernetes_core_LocalObjectReference"),
		"readOnly": type[
			bool
		],
		"fsType": type[
			str
		],
		"storagePool": type[
			str
		],
		"gateway": type[
			str
		];
		true
	]
],
def "os_deploy_DeploymentConfigStatus" = allOf[
	type[
		obj
	],
	props[
		"unavailableReplicas": type[
			int
		],
		"latestVersion": type[
			int
		],
		"replicas": type[
			int
		],
		"readyReplicas": type[
			int
		],
		"details": ref("os_deploy_DeploymentDetails"),
		"conditions": allOf[
			type[
				arr
			],
			items[
				ref("os_deploy_DeploymentCondition");
				
			]
		],
		"updatedReplicas": type[
			int
		],
		"availableReplicas": type[
			int
		],
		"observedGeneration": type[
			int
		];
		true
	]
],
def "kubernetes_core_RBDPersistentVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"image": type[
			str
		],
		"pool": type[
			str
		],
		"secretRef": ref("kubernetes_core_SecretReference"),
		"readOnly": type[
			bool
		],
		"fsType": type[
			str
		],
		"keyring": type[
			str
		],
		"user": type[
			str
		],
		"monitors": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "os_build_SecretLocalReference" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		];
		true
	]
],
def "kubernetes_core_ContainerImage" = allOf[
	type[
		obj
	],
	props[
		"names": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"sizeBytes": type[
			int
		];
		true
	]
],
def "kubernetes_core_ProjectedVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"sources": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_VolumeProjection");
				
			]
		],
		"defaultMode": type[
			int
		];
		true
	]
],
def "os_authorization_Role" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"rules": allOf[
			type[
				arr
			],
			items[
				ref("os_authorization_PolicyRule");
				
			]
		];
		true
	]
],
def "kubernetes_autoscaling_HorizontalPodAutoscalerList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_autoscaling_HorizontalPodAutoscaler");
				
			]
		];
		true
	]
],
def "os_authorization_PolicyRule" = allOf[
	type[
		obj
	],
	props[
		"resourceNames": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"attributeRestrictions": ref("kubernetes_apimachinery_pkg_runtime_RawExtension"),
		"resources": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"verbs": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"apiGroups": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"nonResourceURLs": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_core_PersistentVolumeStatus" = allOf[
	type[
		obj
	],
	props[
		"phase": type[
			str
		],
		"reason": type[
			str
		],
		"message": type[
			str
		];
		true
	]
],
def "os_image_ImageLayer" = allOf[
	type[
		obj
	],
	props[
		"size": type[
			int
		],
		"name": type[
			str
		],
		"mediaType": type[
			str
		];
		true
	]
],
def "os_oauth_OAuthClientList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_oauth_OAuthClient");
				
			]
		];
		true
	]
],
def "os_oauth_OAuthClientAuthorization" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"clientName": type[
			str
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"scopes": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"userName": type[
			str
		],
		"userUID": type[
			str
		];
		true
	]
],
def "os_oauth_OAuthAccessToken" = allOf[
	type[
		obj
	],
	props[
		"expiresIn": type[
			int
		],
		"redirectURI": type[
			str
		],
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"authorizeToken": type[
			str
		],
		"clientName": type[
			str
		],
		"inactivityTimeoutSeconds": type[
			int
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"scopes": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"userName": type[
			str
		],
		"refreshToken": type[
			str
		],
		"userUID": type[
			str
		];
		true
	]
],
def "kubernetes_extensions_RunAsGroupStrategyOptions" = allOf[
	type[
		obj
	],
	props[
		"ranges": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_extensions_IDRange");
				
			]
		],
		"rule": type[
			str
		];
		true
	]
],
def "kubernetes_core_PersistentVolumeList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_PersistentVolume");
				
			]
		];
		true
	]
],
def "kubernetes_authorization_SubjectAccessReviewSpec" = allOf[
	type[
		obj
	],
	props[
		"uid": type[
			str
		],
		"nonResourceAttributes": ref("kubernetes_authorization_NonResourceAttributes"),
		"extra": allOf[
			type[
				obj
			],
			props[
				;
				allOf[
					type[
						arr
					],
					items[
						type[
							str
						];
						
					]
				]
			]
		],
		"groups": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"resourceAttributes": ref("kubernetes_authorization_ResourceAttributes"),
		"user": type[
			str
		];
		true
	]
],
def "kubernetes_config_NamedCluster" = allOf[
	type[
		obj
	],
	props[
		"cluster": ref("kubernetes_config_Cluster"),
		"name": type[
			str
		];
		true
	]
],
def "kubernetes_core_SessionAffinityConfig" = allOf[
	type[
		obj
	],
	props[
		"clientIP": ref("kubernetes_core_ClientIPConfig");
		true
	]
],
def "os_route_TLSConfig" = allOf[
	type[
		obj
	],
	props[
		"termination": type[
			str
		],
		"insecureEdgeTerminationPolicy": type[
			str
		],
		"certificate": type[
			str
		],
		"destinationCACertificate": type[
			str
		],
		"caCertificate": type[
			str
		],
		"key": type[
			str
		];
		true
	]
],
def "os_security_FSGroupStrategyOptions" = allOf[
	type[
		obj
	],
	props[
		"ranges": allOf[
			type[
				arr
			],
			items[
				ref("os_security_IDRange");
				
			]
		],
		"type": type[
			str
		];
		true
	]
],
def "kubernetes_core_Volume" = allOf[
	type[
		obj
	],
	props[
		"quobyte": ref("kubernetes_core_QuobyteVolumeSource"),
		"azureFile": ref("kubernetes_core_AzureFileVolumeSource"),
		"flexVolume": ref("kubernetes_core_FlexVolumeSource"),
		"secret": ref("kubernetes_core_SecretVolumeSource"),
		"projected": ref("kubernetes_core_ProjectedVolumeSource"),
		"cephfs": ref("kubernetes_core_CephFSVolumeSource"),
		"scaleIO": ref("kubernetes_core_ScaleIOVolumeSource"),
		"emptyDir": ref("kubernetes_core_EmptyDirVolumeSource"),
		"glusterfs": ref("kubernetes_core_GlusterfsVolumeSource"),
		"gcePersistentDisk": ref("kubernetes_core_GCEPersistentDiskVolumeSource"),
		"photonPersistentDisk": ref("kubernetes_core_PhotonPersistentDiskVolumeSource"),
		"azureDisk": ref("kubernetes_core_AzureDiskVolumeSource"),
		"cinder": ref("kubernetes_core_CinderVolumeSource"),
		"downwardAPI": ref("kubernetes_core_DownwardAPIVolumeSource"),
		"awsElasticBlockStore": ref("kubernetes_core_AWSElasticBlockStoreVolumeSource"),
		"flocker": ref("kubernetes_core_FlockerVolumeSource"),
		"iscsi": ref("kubernetes_core_ISCSIVolumeSource"),
		"rbd": ref("kubernetes_core_RBDVolumeSource"),
		"configMap": ref("kubernetes_core_ConfigMapVolumeSource"),
		"storageos": ref("kubernetes_core_StorageOSVolumeSource"),
		"name": allOf[
			length(0,63),
			pattern("^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"),
			type[
				str
			]
		],
		"nfs": ref("kubernetes_core_NFSVolumeSource"),
		"persistentVolumeClaim": ref("kubernetes_core_PersistentVolumeClaimVolumeSource"),
		"gitRepo": ref("kubernetes_core_GitRepoVolumeSource"),
		"portworxVolume": ref("kubernetes_core_PortworxVolumeSource"),
		"vsphereVolume": ref("kubernetes_core_VsphereVirtualDiskVolumeSource"),
		"fc": ref("kubernetes_core_FCVolumeSource"),
		"hostPath": ref("kubernetes_core_HostPathVolumeSource");
		true
	]
],
def "kubernetes_core_ReplicationController" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_core_ReplicationControllerSpec"),
		"status": ref("kubernetes_core_ReplicationControllerStatus");
		true
	]
],
def "kubernetes_authorization_ResourceAttributes" = allOf[
	type[
		obj
	],
	props[
		"resource": type[
			str
		],
		"subresource": type[
			str
		],
		"name": type[
			str
		],
		"namespace": type[
			str
		],
		"verb": type[
			str
		],
		"version": type[
			str
		],
		"group": type[
			str
		];
		true
	]
],
def "kubernetes_extensions_FSGroupStrategyOptions" = allOf[
	type[
		obj
	],
	props[
		"ranges": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_extensions_IDRange");
				
			]
		],
		"rule": type[
			str
		];
		true
	]
],
def "os_build_BuildTriggerCause" = allOf[
	type[
		obj
	],
	props[
		"githubWebHook": ref("os_build_GitHubWebHookCause"),
		"genericWebHook": ref("os_build_GenericWebHookCause"),
		"bitbucketWebHook": ref("os_build_BitbucketWebHookCause"),
		"imageChangeBuild": ref("os_build_ImageChangeCause"),
		"message": type[
			str
		],
		"gitlabWebHook": ref("os_build_GitLabWebHookCause");
		true
	]
],
def "kubernetes_authentication_TokenReviewSpec" = allOf[
	type[
		obj
	],
	props[
		"audiences": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"token": type[
			str
		];
		true
	]
],
def "os_build_BuildStrategy" = allOf[
	type[
		obj
	],
	props[
		"jenkinsPipelineStrategy": ref("os_build_JenkinsPipelineBuildStrategy"),
		"sourceStrategy": ref("os_build_SourceBuildStrategy"),
		"dockerStrategy": ref("os_build_DockerBuildStrategy"),
		"type": type[
			str
		],
		"customStrategy": ref("os_build_CustomBuildStrategy");
		true
	]
],
def "os_deploy_DeploymentCauseImageTrigger" = allOf[
	type[
		obj
	],
	props[
		"from": ref("kubernetes_core_ObjectReference");
		true
	]
],
def "kubernetes_networking_NetworkPolicyPeer" = allOf[
	type[
		obj
	],
	props[
		"podSelector": ref("kubernetes_apimachinery_LabelSelector"),
		"ipBlock": ref("kubernetes_networking_IPBlock"),
		"namespaceSelector": ref("kubernetes_apimachinery_LabelSelector");
		true
	]
],
def "kubernetes_extensions_DeploymentRollback" = allOf[
	type[
		obj
	],
	props[
		"updatedAnnotations": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"name": type[
			str
		],
		"rollbackTo": ref("kubernetes_extensions_RollbackConfig");
		true
	]
],
def "kubernetes_core_PodAntiAffinity" = allOf[
	type[
		obj
	],
	props[
		"requiredDuringSchedulingIgnoredDuringExecution": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_PodAffinityTerm");
				
			]
		],
		"preferredDuringSchedulingIgnoredDuringExecution": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_WeightedPodAffinityTerm");
				
			]
		];
		true
	]
],
def "kubernetes_apps_StatefulSetCondition" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"lastTransitionTime": ref("kubernetes_apimachinery_Time"),
		"message": type[
			str
		],
		"type": type[
			str
		],
		"status": type[
			str
		];
		true
	]
],
def "kubernetes_core_ContainerStateWaiting" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"message": type[
			str
		];
		true
	]
],
def "kubernetes_apiextensions_CustomResourceColumnDefinition" = allOf[
	type[
		obj
	],
	props[
		"JSONPath": type[
			str
		],
		"format": type[
			str
		],
		"name": type[
			str
		],
		"description": type[
			str
		],
		"priority": type[
			int
		],
		"type": type[
			str
		];
		true
	]
],
def "os_build_SourceControlUser" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		],
		"email": type[
			str
		];
		true
	]
],
def "kubernetes_admissionregistration_Webhook" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		],
		"namespaceSelector": ref("kubernetes_apimachinery_LabelSelector"),
		"rules": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_admissionregistration_RuleWithOperations");
				
			]
		],
		"clientConfig": ref("kubernetes_admissionregistration_WebhookClientConfig"),
		"failurePolicy": type[
			str
		],
		"sideEffects": type[
			str
		];
		true
	]
],
def "os_deploy_DeploymentConfigSpec" = allOf[
	type[
		obj
	],
	props[
		"template": ref("kubernetes_core_PodTemplateSpec"),
		"paused": type[
			bool
		],
		"test": type[
			bool
		],
		"replicas": type[
			int
		],
		"revisionHistoryLimit": type[
			int
		],
		"selector": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"minReadySeconds": type[
			int
		],
		"strategy": ref("os_deploy_DeploymentStrategy"),
		"triggers": allOf[
			type[
				arr
			],
			items[
				ref("os_deploy_DeploymentTriggerPolicy");
				
			]
		];
		true
	]
],
def "os_route_Route" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("os_route_RouteSpec"),
		"status": ref("os_route_RouteStatus");
		true
	]
],
def "kubernetes_resource_Quantity" = allOf[
	type[
		obj
	],
	props[
		"Format": type[
			str
		];
		true
	]
],
def "kubernetes_events_EventSeries" = allOf[
	type[
		obj
	],
	props[
		"count": type[
			int
		],
		"lastObservedTime": ref("kubernetes_apimachinery_MicroTime"),
		"state": type[
			str
		];
		true
	]
],
def "kubernetes_core_CSIPersistentVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"controllerPublishSecretRef": ref("kubernetes_core_SecretReference"),
		"driver": type[
			str
		],
		"nodePublishSecretRef": ref("kubernetes_core_SecretReference"),
		"nodeStageSecretRef": ref("kubernetes_core_SecretReference"),
		"volumeHandle": type[
			str
		],
		"readOnly": type[
			bool
		],
		"fsType": type[
			str
		],
		"volumeAttributes": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		];
		true
	]
],
def "os_deploy_DeploymentCause" = allOf[
	type[
		obj
	],
	props[
		"imageTrigger": ref("os_deploy_DeploymentCauseImageTrigger"),
		"type": type[
			str
		];
		true
	]
],
def "kubernetes_core_RBDVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"image": type[
			str
		],
		"pool": type[
			str
		],
		"secretRef": ref("kubernetes_core_LocalObjectReference"),
		"readOnly": type[
			bool
		],
		"fsType": type[
			str
		],
		"keyring": type[
			str
		],
		"user": type[
			str
		],
		"monitors": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_core_ServiceStatus" = allOf[
	type[
		obj
	],
	props[
		"loadBalancer": ref("kubernetes_core_LoadBalancerStatus");
		true
	]
],
def "kubernetes_apiextensions_CustomResourceDefinition" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_apiextensions_CustomResourceDefinitionSpec"),
		"status": ref("kubernetes_apiextensions_CustomResourceDefinitionStatus");
		true
	]
],
def "os_build_ImageChangeCause" = allOf[
	type[
		obj
	],
	props[
		"imageID": type[
			str
		],
		"fromRef": ref("kubernetes_core_ObjectReference");
		true
	]
],
def "kubernetes_batch_CronJobList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_batch_CronJob");
				
			]
		];
		true
	]
],
def "os_oauth_ClusterRoleScopeRestriction" = allOf[
	type[
		obj
	],
	props[
		"allowEscalation": type[
			bool
		],
		"roleNames": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"namespaces": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_core_PhotonPersistentDiskVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"pdID": type[
			str
		],
		"fsType": type[
			str
		];
		true
	]
],
def "os_image_TagReferencePolicy" = allOf[
	type[
		obj
	],
	props[
		"type": type[
			str
		];
		true
	]
],
def "kubernetes_apps_DeploymentCondition" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"lastTransitionTime": ref("kubernetes_apimachinery_Time"),
		"message": type[
			str
		],
		"type": type[
			str
		],
		"lastUpdateTime": ref("kubernetes_apimachinery_Time"),
		"status": type[
			str
		];
		true
	]
],
def "os_build_BuildConfigList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_build_BuildConfig");
				
			]
		];
		true
	]
],
def "kubernetes_core_StorageOSPersistentVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"volumeNamespace": type[
			str
		],
		"volumeName": type[
			str
		],
		"secretRef": ref("kubernetes_core_ObjectReference"),
		"readOnly": type[
			bool
		],
		"fsType": type[
			str
		];
		true
	]
],
def "kubernetes_batch_JobStatus" = allOf[
	type[
		obj
	],
	props[
		"completionTime": ref("kubernetes_apimachinery_Time"),
		"active": type[
			int
		],
		"startTime": ref("kubernetes_apimachinery_Time"),
		"failed": type[
			int
		],
		"conditions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_batch_JobCondition");
				
			]
		],
		"succeeded": type[
			int
		];
		true
	]
],
def "os_security_RunAsUserStrategyOptions" = allOf[
	type[
		obj
	],
	props[
		"uid": type[
			int
		],
		"uidRangeMin": type[
			int
		],
		"uidRangeMax": type[
			int
		],
		"type": type[
			str
		];
		true
	]
],
def "os_template_Template" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"objects": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apimachinery_pkg_runtime_RawExtension");
				
			]
		],
		"message": type[
			str
		],
		"parameters": allOf[
			type[
				arr
			],
			items[
				ref("os_template_Parameter");
				
			]
		],
		"labels": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		];
		true
	]
],
def "kubernetes_rbac_Subject" = allOf[
	type[
		obj
	],
	props[
		"apiGroup": type[
			str
		],
		"kind": type[
			str
		],
		"name": type[
			str
		],
		"namespace": type[
			str
		];
		true
	]
],
def "kubernetes_apps_DaemonSetUpdateStrategy" = allOf[
	type[
		obj
	],
	props[
		"type": type[
			str
		],
		"rollingUpdate": ref("kubernetes_apps_RollingUpdateDaemonSet");
		true
	]
],
def "kubernetes_core_ISCSIPersistentVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"chapAuthSession": type[
			bool
		],
		"iscsiInterface": type[
			str
		],
		"lun": type[
			int
		],
		"chapAuthDiscovery": type[
			bool
		],
		"iqn": type[
			str
		],
		"portals": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"secretRef": ref("kubernetes_core_SecretReference"),
		"initiatorName": type[
			str
		],
		"readOnly": type[
			bool
		],
		"fsType": type[
			str
		],
		"targetPortal": type[
			str
		];
		true
	]
],
def "os_route_RouteTargetReference" = allOf[
	type[
		obj
	],
	props[
		"kind": type[
			str
		],
		"name": type[
			str
		],
		"weight": type[
			int
		];
		true
	]
],
def "kubernetes_core_GCEPersistentDiskVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"partition": type[
			int
		],
		"readOnly": type[
			bool
		],
		"pdName": type[
			str
		],
		"fsType": type[
			str
		];
		true
	]
],
def "kubernetes_core_SecretVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"secretName": type[
			str
		],
		"defaultMode": type[
			int
		],
		"optional": type[
			bool
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_KeyToPath");
				
			]
		];
		true
	]
],
def "kubernetes_batch_Job" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_batch_JobSpec"),
		"status": ref("kubernetes_batch_JobStatus");
		true
	]
],
def "kubernetes_extensions_ScaleSpec" = allOf[
	type[
		obj
	],
	props[
		"replicas": type[
			int
		];
		true
	]
],
def "kubernetes_batch_JobTemplateSpec" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"spec": ref("kubernetes_batch_JobSpec");
		true
	]
],
def "kubernetes_extensions_AllowedFlexVolume" = allOf[
	type[
		obj
	],
	props[
		"driver": type[
			str
		];
		true
	]
],
def "os_build_DockerBuildStrategy" = allOf[
	type[
		obj
	],
	props[
		"forcePull": type[
			bool
		],
		"imageOptimizationPolicy": type[
			str
		],
		"dockerfilePath": type[
			str
		],
		"noCache": type[
			bool
		],
		"from": ref("kubernetes_core_ObjectReference"),
		"env": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_EnvVar");
				
			]
		],
		"buildArgs": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_EnvVar");
				
			]
		],
		"pullSecret": ref("kubernetes_core_LocalObjectReference");
		true
	]
],
def "kubernetes_core_HTTPGetAction" = allOf[
	type[
		obj
	],
	props[
		"path": type[
			str
		],
		"scheme": type[
			str
		],
		"port": ref("kubernetes_apimachinery_pkg_util_intstr_IntOrString"),
		"host": type[
			str
		],
		"httpHeaders": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_HTTPHeader");
				
			]
		];
		true
	]
],
def "kubernetes_extensions_Ingress" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_extensions_IngressSpec"),
		"status": ref("kubernetes_extensions_IngressStatus");
		true
	]
],
def "kubernetes_admissionregistration_WebhookClientConfig" = allOf[
	type[
		obj
	],
	props[
		"caBundle": type[
			str
		],
		"service": ref("kubernetes_admissionregistration_ServiceReference"),
		"url": type[
			str
		];
		true
	]
],
def "kubernetes_core_CinderPersistentVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"secretRef": ref("kubernetes_core_SecretReference"),
		"volumeID": type[
			str
		],
		"readOnly": type[
			bool
		],
		"fsType": type[
			str
		];
		true
	]
],
def "os_oauth_OAuthAuthorizeTokenList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_oauth_OAuthAuthorizeToken");
				
			]
		];
		true
	]
],
def "kubernetes_core_SecretKeySelector" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		],
		"optional": type[
			bool
		],
		"key": type[
			str
		];
		true
	]
],
def "os_build_GenericWebHookCause" = allOf[
	type[
		obj
	],
	props[
		"secret": type[
			str
		],
		"revision": ref("os_build_SourceRevision");
		true
	]
],
def "os_build_SecretBuildSource" = allOf[
	type[
		obj
	],
	props[
		"destinationDir": type[
			str
		],
		"secret": ref("kubernetes_core_LocalObjectReference");
		true
	]
],
def "kubernetes_apimachinery_pkg_runtime_RawExtension" = allOf[
	type[
		obj
	],
	props[
		"Raw": type[
			str
		];
		true
	]
],
def "kubernetes_core_NodeDaemonEndpoints" = allOf[
	type[
		obj
	],
	props[
		"kubeletEndpoint": ref("kubernetes_core_DaemonEndpoint");
		true
	]
],
def "kubernetes_apps_DeploymentList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apps_Deployment");
				
			]
		];
		true
	]
],
def "kubernetes_core_VsphereVirtualDiskVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"storagePolicyName": type[
			str
		],
		"storagePolicyID": type[
			str
		],
		"volumePath": type[
			str
		],
		"fsType": type[
			str
		];
		true
	]
],
def "kubernetes_apimachinery_Time" = allOf[
	type[
		obj
	],
	props[
		"Time": type[
			str
		];
		true
	]
],
def "kubernetes_core_NamespaceSpec" = allOf[
	type[
		obj
	],
	props[
		"finalizers": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_networking_NetworkPolicyIngressRule" = allOf[
	type[
		obj
	],
	props[
		"from": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_networking_NetworkPolicyPeer");
				
			]
		],
		"ports": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_networking_NetworkPolicyPort");
				
			]
		];
		true
	]
],
def "kubernetes_apiextensions_ExternalDocumentation" = allOf[
	type[
		obj
	],
	props[
		"description": type[
			str
		],
		"url": type[
			str
		];
		true
	]
],
def "kubernetes_core_Handler" = allOf[
	type[
		obj
	],
	props[
		"tcpSocket": ref("kubernetes_core_TCPSocketAction"),
		"exec": ref("kubernetes_core_ExecAction"),
		"httpGet": ref("kubernetes_core_HTTPGetAction");
		true
	]
],
def "kubernetes_core_ResourceFieldSelector" = allOf[
	type[
		obj
	],
	props[
		"divisor": ref("kubernetes_resource_Quantity"),
		"resource": type[
			str
		],
		"containerName": type[
			str
		];
		true
	]
],
def "kubernetes_core_Endpoints" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"subsets": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_EndpointSubset");
				
			]
		];
		true
	]
],
def "kubernetes_rbac_PolicyRule" = allOf[
	type[
		obj
	],
	props[
		"resourceNames": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"resources": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"verbs": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"apiGroups": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"nonResourceURLs": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "os_image_SignatureGenericEntity" = allOf[
	type[
		obj
	],
	props[
		"commonName": type[
			str
		],
		"organization": type[
			str
		];
		true
	]
],
def "os_authorization_ClusterRole" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"aggregationRule": ref("kubernetes_rbac_AggregationRule"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"rules": allOf[
			type[
				arr
			],
			items[
				ref("os_authorization_PolicyRule");
				
			]
		];
		true
	]
],
def "kubernetes_core_ConfigMapEnvSource" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		],
		"optional": type[
			bool
		];
		true
	]
],
def "os_build_WebHookTrigger" = allOf[
	type[
		obj
	],
	props[
		"allowEnv": type[
			bool
		],
		"secret": type[
			str
		],
		"secretReference": ref("os_build_SecretLocalReference");
		true
	]
],
def "kubernetes_apimachinery_TypeMeta" = allOf[
	type[
		obj
	],
	props[
		"apiVersion": type[
			str
		],
		"kind": type[
			str
		];
		true
	]
],
def "kubernetes_networking_NetworkPolicyEgressRule" = allOf[
	type[
		obj
	],
	props[
		"to": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_networking_NetworkPolicyPeer");
				
			]
		],
		"ports": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_networking_NetworkPolicyPort");
				
			]
		];
		true
	]
],
def "os_security_SupplementalGroupsStrategyOptions" = allOf[
	type[
		obj
	],
	props[
		"ranges": allOf[
			type[
				arr
			],
			items[
				ref("os_security_IDRange");
				
			]
		],
		"type": type[
			str
		];
		true
	]
],
def "kubernetes_rbac_ClusterRole" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"aggregationRule": ref("kubernetes_rbac_AggregationRule"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"rules": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_rbac_PolicyRule");
				
			]
		];
		true
	]
],
def "kubernetes_rbac_ClusterRoleList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_rbac_ClusterRole");
				
			]
		];
		true
	]
],
def "os_build_SourceStrategyOptions" = allOf[
	type[
		obj
	],
	props[
		"incremental": type[
			bool
		];
		true
	]
],
def "kubernetes_certificates_CertificateSigningRequest" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_certificates_CertificateSigningRequestSpec"),
		"status": ref("kubernetes_certificates_CertificateSigningRequestStatus");
		true
	]
],
def "kubernetes_core_HTTPHeader" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		],
		"value": type[
			str
		];
		true
	]
],
def "kubernetes_apimachinery_pkg_util_intstr_IntOrString" = allOf[
	type[
		obj
	],
	props[
		"Type": type[
			int
		],
		"IntVal": type[
			int
		],
		"StrVal": type[
			str
		];
		true
	]
],
def "kubernetes_core_EndpointPort" = allOf[
	type[
		obj
	],
	props[
		"protocol": type[
			str
		],
		"port": type[
			int
		],
		"name": allOf[
			length(0,63),
			pattern("^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"),
			type[
				str
			]
		];
		true
	]
],
def "os_deploy_TagImageHook" = allOf[
	type[
		obj
	],
	props[
		"containerName": type[
			str
		],
		"to": ref("kubernetes_core_ObjectReference");
		true
	]
],
def "os_template_Parameter" = allOf[
	type[
		obj
	],
	props[
		"displayName": type[
			str
		],
		"name": type[
			str
		],
		"description": type[
			str
		],
		"from": type[
			str
		],
		"generate": type[
			str
		],
		"value": type[
			str
		],
		"required": type[
			bool
		];
		true
	]
],
def "kubernetes_rbac_ClusterRoleBinding" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"subjects": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_rbac_Subject");
				
			]
		],
		"roleRef": ref("kubernetes_rbac_RoleRef");
		true
	]
],
def "os_image_ImageStream" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("os_image_ImageStreamSpec"),
		"status": ref("os_image_ImageStreamStatus");
		true
	]
],
def "kubernetes_autoscaling_ObjectMetricSource" = allOf[
	type[
		obj
	],
	props[
		"averageValue": ref("kubernetes_resource_Quantity"),
		"metricName": type[
			str
		],
		"targetValue": ref("kubernetes_resource_Quantity"),
		"selector": ref("kubernetes_apimachinery_LabelSelector"),
		"target": ref("kubernetes_autoscaling_CrossVersionObjectReference");
		true
	]
],
def "kubernetes_apiextensions_CustomResourceSubresourceScale" = allOf[
	type[
		obj
	],
	props[
		"statusReplicasPath": type[
			str
		],
		"labelSelectorPath": type[
			str
		],
		"specReplicasPath": type[
			str
		];
		true
	]
],
def "kubernetes_core_ReplicationControllerList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_ReplicationController");
				
			]
		];
		true
	]
],
def "os_project_Project" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("os_project_ProjectSpec"),
		"status": ref("os_project_ProjectStatus");
		true
	]
],
def "kubernetes_apps_StatefulSetList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apps_StatefulSet");
				
			]
		];
		true
	]
],
def "kubernetes_core_SecretProjection" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		],
		"optional": type[
			bool
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_KeyToPath");
				
			]
		];
		true
	]
],
def "kubernetes_core_Binding" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"target": ref("kubernetes_core_ObjectReference");
		true
	]
],
def "kubernetes_core_ServiceList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_Service");
				
			]
		];
		true
	]
],
def "kubernetes_extensions_SupplementalGroupsStrategyOptions" = allOf[
	type[
		obj
	],
	props[
		"ranges": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_extensions_IDRange");
				
			]
		],
		"rule": type[
			str
		];
		true
	]
],
def "os_deploy_DeploymentTriggerImageChangeParams" = allOf[
	type[
		obj
	],
	props[
		"lastTriggeredImage": type[
			str
		],
		"automatic": type[
			bool
		],
		"from": ref("kubernetes_core_ObjectReference"),
		"containerNames": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_autoscaling_ObjectMetricStatus" = allOf[
	type[
		obj
	],
	props[
		"averageValue": ref("kubernetes_resource_Quantity"),
		"metricName": type[
			str
		],
		"selector": ref("kubernetes_apimachinery_LabelSelector"),
		"currentValue": ref("kubernetes_resource_Quantity"),
		"target": ref("kubernetes_autoscaling_CrossVersionObjectReference");
		true
	]
],
def "kubernetes_apps_DaemonSetStatus" = allOf[
	type[
		obj
	],
	props[
		"numberUnavailable": type[
			int
		],
		"updatedNumberScheduled": type[
			int
		],
		"numberAvailable": type[
			int
		],
		"numberMisscheduled": type[
			int
		],
		"numberReady": type[
			int
		],
		"currentNumberScheduled": type[
			int
		],
		"collisionCount": type[
			int
		],
		"desiredNumberScheduled": type[
			int
		],
		"conditions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apps_DaemonSetCondition");
				
			]
		],
		"observedGeneration": type[
			int
		];
		true
	]
],
def "os_image_Image" = allOf[
	type[
		obj
	],
	props[
		"dockerImageLayers": allOf[
			type[
				arr
			],
			items[
				ref("os_image_ImageLayer");
				
			]
		],
		"dockerImageMetadata": ref("kubernetes_apimachinery_pkg_runtime_ImageRawExtension"),
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"dockerImageSignatures": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"dockerImageReference": type[
			str
		],
		"dockerImageManifestMediaType": type[
			str
		],
		"dockerImageConfig": type[
			str
		],
		"dockerImageMetadataVersion": type[
			str
		],
		"dockerImageManifest": type[
			str
		],
		"signatures": allOf[
			type[
				arr
			],
			items[
				ref("os_image_ImageSignature");
				
			]
		];
		true
	]
],
def "os_authorization_RoleBindingRestrictionSpec" = allOf[
	type[
		obj
	],
	props[
		"serviceaccountrestriction": ref("os_authorization_ServiceAccountRestriction"),
		"grouprestriction": ref("os_authorization_GroupRestriction"),
		"userrestriction": ref("os_authorization_UserRestriction");
		true
	]
],
def "kubernetes_core_QuobyteVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"volume": type[
			str
		],
		"registry": type[
			str
		],
		"readOnly": type[
			bool
		],
		"user": type[
			str
		],
		"group": type[
			str
		];
		true
	]
],
def "kubernetes_core_Sysctl" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		],
		"value": type[
			str
		];
		true
	]
],
def "kubernetes_core_TopologySelectorLabelRequirement" = allOf[
	type[
		obj
	],
	props[
		"values": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"key": type[
			str
		];
		true
	]
],
def "kubernetes_apimachinery_ListMeta" = allOf[
	type[
		obj
	],
	props[
		"continue": type[
			str
		],
		"resourceVersion": type[
			str
		],
		"selfLink": type[
			str
		];
		true
	]
],
def "kubernetes_core_PodTemplateSpec" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"spec": ref("kubernetes_core_PodSpec");
		true
	]
],
def "os_authorization_ServiceAccountReference" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		],
		"namespace": type[
			str
		];
		true
	]
],
def "os_authorization_RoleList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_authorization_Role");
				
			]
		];
		true
	]
],
def "kubernetes_config_AuthProviderConfig" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		],
		"config": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		];
		true
	]
],
def "kubernetes_core_PersistentVolumeClaimSpec" = allOf[
	type[
		obj
	],
	props[
		"storageClassName": type[
			str
		],
		"volumeName": type[
			str
		],
		"resources": ref("kubernetes_core_ResourceRequirements"),
		"selector": ref("kubernetes_apimachinery_LabelSelector"),
		"accessModes": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"dataSource": ref("kubernetes_core_TypedLocalObjectReference"),
		"volumeMode": type[
			str
		];
		true
	]
],
def "os_image_RepositoryImportSpec" = allOf[
	type[
		obj
	],
	props[
		"importPolicy": ref("os_image_TagImportPolicy"),
		"includeManifest": type[
			bool
		],
		"referencePolicy": ref("os_image_TagReferencePolicy"),
		"from": ref("kubernetes_core_ObjectReference");
		true
	]
],
def "os_deploy_DeploymentDetails" = allOf[
	type[
		obj
	],
	props[
		"causes": allOf[
			type[
				arr
			],
			items[
				ref("os_deploy_DeploymentCause");
				
			]
		],
		"message": type[
			str
		];
		true
	]
],
def "kubernetes_apimachinery_StatusCause" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"field": type[
			str
		],
		"message": type[
			str
		];
		true
	]
],
def "kubernetes_core_ContainerState" = allOf[
	type[
		obj
	],
	props[
		"running": ref("kubernetes_core_ContainerStateRunning"),
		"waiting": ref("kubernetes_core_ContainerStateWaiting"),
		"terminated": ref("kubernetes_core_ContainerStateTerminated");
		true
	]
],
def "kubernetes_autoscaling_HorizontalPodAutoscaler" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_autoscaling_HorizontalPodAutoscalerSpec"),
		"status": ref("kubernetes_autoscaling_HorizontalPodAutoscalerStatus");
		true
	]
],
def "os_image_ImageImportStatus" = allOf[
	type[
		obj
	],
	props[
		"image": ref("os_image_Image"),
		"tag": type[
			str
		],
		"status": ref("kubernetes_apimachinery_Status");
		true
	]
],
def "kubernetes_apps_StatefulSetUpdateStrategy" = allOf[
	type[
		obj
	],
	props[
		"type": type[
			str
		],
		"rollingUpdate": ref("kubernetes_apps_RollingUpdateStatefulSetStrategy");
		true
	]
],
def "os_deploy_DeploymentConfig" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("os_deploy_DeploymentConfigSpec"),
		"status": ref("os_deploy_DeploymentConfigStatus");
		true
	]
],
def "kubernetes_core_LoadBalancerIngress" = allOf[
	type[
		obj
	],
	props[
		"hostname": type[
			str
		],
		"ip": type[
			str
		];
		true
	]
],
def "kubernetes_core_ContainerStateTerminated" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"exitCode": type[
			int
		],
		"startedAt": ref("kubernetes_apimachinery_Time"),
		"containerID": type[
			str
		],
		"message": type[
			str
		],
		"signal": type[
			int
		],
		"finishedAt": ref("kubernetes_apimachinery_Time");
		true
	]
],
def "kubernetes_core_LimitRangeSpec" = allOf[
	type[
		obj
	],
	props[
		"limits": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_LimitRangeItem");
				
			]
		];
		true
	]
],
def "kubernetes_core_ContainerStatus" = allOf[
	type[
		obj
	],
	props[
		"image": type[
			str
		],
		"imageID": type[
			str
		],
		"restartCount": type[
			int
		],
		"ready": type[
			bool
		],
		"name": allOf[
			length(0,63),
			pattern("^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"),
			type[
				str
			]
		],
		"state": ref("kubernetes_core_ContainerState"),
		"containerID": type[
			str
		],
		"lastState": ref("kubernetes_core_ContainerState");
		true
	]
],
def "os_authorization_ClusterRoleBinding" = allOf[
	type[
		obj
	],
	props[
		"groupNames": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"subjects": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_ObjectReference");
				
			]
		],
		"userNames": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"roleRef": ref("kubernetes_core_ObjectReference");
		true
	]
],
def "kubernetes_authorization_SubjectAccessReview" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_authorization_SubjectAccessReviewSpec"),
		"status": ref("kubernetes_authorization_SubjectAccessReviewStatus");
		true
	]
],
def "os_image_ImageList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_image_Image");
				
			]
		];
		true
	]
],
def "os_route_RouteIngressCondition" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"lastTransitionTime": ref("kubernetes_apimachinery_Time"),
		"message": type[
			str
		],
		"type": type[
			str
		],
		"status": type[
			str
		];
		true
	]
],
def "kubernetes_core_ConfigMapNodeConfigSource" = allOf[
	type[
		obj
	],
	props[
		"uid": type[
			str
		],
		"kubeletConfigKey": type[
			str
		],
		"resourceVersion": type[
			str
		],
		"name": type[
			str
		],
		"namespace": type[
			str
		];
		true
	]
],
def "kubernetes_core_PodList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_Pod");
				
			]
		];
		true
	]
],
def "kubernetes_autoscaling_HorizontalPodAutoscalerStatus" = allOf[
	type[
		obj
	],
	props[
		"desiredReplicas": type[
			int
		],
		"currentReplicas": type[
			int
		],
		"conditions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_autoscaling_HorizontalPodAutoscalerCondition");
				
			]
		],
		"lastScaleTime": ref("kubernetes_apimachinery_Time"),
		"observedGeneration": type[
			int
		],
		"currentMetrics": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_autoscaling_MetricStatus");
				
			]
		];
		true
	]
],
def "kubernetes_apiextensions_JSONSchemaProps" = allOf[
	type[
		obj
	],
	props[
		"$schema": type[
			str
		],
		"minLength": type[
			int
		],
		"pattern": type[
			str
		],
		"description": type[
			str
		],
		"title": type[
			str
		],
		"type": type[
			str
		],
		"required": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"example": ref("kubernetes_apiextensions_JSON"),
		"exclusiveMaximum": type[
			bool
		],
		"patternProperties": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_apiextensions_JSONSchemaProps")
			]
		],
		"allOf": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apiextensions_JSONSchemaProps");
				
			]
		],
		"default": ref("kubernetes_apiextensions_JSON"),
		"not": ref("kubernetes_apiextensions_JSONSchemaProps"),
		"oneOf": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apiextensions_JSONSchemaProps");
				
			]
		],
		"additionalItems": ref("kubernetes_apiextensions_JSONSchemaPropsOrBool"),
		"id": type[
			str
		],
		"maxProperties": type[
			int
		],
		"exclusiveMinimum": type[
			bool
		],
		"definitions": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_apiextensions_JSONSchemaProps")
			]
		],
		"multipleOf": type[
			num
		],
		"maxItems": type[
			int
		],
		"format": type[
			str
		],
		"anyOf": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apiextensions_JSONSchemaProps");
				
			]
		],
		"enum": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apiextensions_JSON");
				
			]
		],
		"dependencies": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_apiextensions_JSONSchemaPropsOrStringArray")
			]
		],
		"minProperties": type[
			int
		],
		"minItems": type[
			int
		],
		"uniqueItems": type[
			bool
		],
		"maximum": type[
			num
		],
		"additionalProperties": ref("kubernetes_apiextensions_JSONSchemaPropsOrBool"),
		"externalDocs": ref("kubernetes_apiextensions_ExternalDocumentation"),
		"$ref": type[
			str
		],
		"items": ref("kubernetes_apiextensions_JSONSchemaPropsOrArray"),
		"minimum": type[
			num
		],
		"maxLength": type[
			int
		],
		"properties": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_apiextensions_JSONSchemaProps")
			]
		];
		false
	]
],
def "kubernetes_admission_AdmissionRequest" = allOf[
	type[
		obj
	],
	props[
		"uid": type[
			str
		],
		"userInfo": ref("kubernetes_authentication_UserInfo"),
		"dryRun": type[
			bool
		],
		"resource": ref("kubernetes_apimachinery_GroupVersionResource"),
		"kind": ref("kubernetes_apimachinery_GroupVersionKind"),
		"name": type[
			str
		],
		"namespace": type[
			str
		],
		"oldObject": ref("kubernetes_apimachinery_pkg_runtime_RawExtension"),
		"subResource": type[
			str
		],
		"operation": type[
			str
		],
		"object": ref("kubernetes_apimachinery_pkg_runtime_RawExtension");
		true
	]
],
def "os_image_ImageStreamTag" = allOf[
	type[
		obj
	],
	props[
		"generation": type[
			int
		],
		"image": ref("os_image_Image"),
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"tag": ref("os_image_TagReference"),
		"conditions": allOf[
			type[
				arr
			],
			items[
				ref("os_image_TagEventCondition");
				
			]
		],
		"lookupPolicy": ref("os_image_ImageLookupPolicy");
		true
	]
],
def "os_build_JenkinsPipelineBuildStrategy" = allOf[
	type[
		obj
	],
	props[
		"jenkinsfilePath": type[
			str
		],
		"jenkinsfile": type[
			str
		],
		"env": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_EnvVar");
				
			]
		];
		true
	]
],
def "kubernetes_core_Service" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_core_ServiceSpec"),
		"status": ref("kubernetes_core_ServiceStatus");
		true
	]
],
def "os_user_UserList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_user_User");
				
			]
		];
		true
	]
],
def "os_image_TagEventCondition" = allOf[
	type[
		obj
	],
	props[
		"generation": type[
			int
		],
		"reason": type[
			str
		],
		"lastTransitionTime": ref("kubernetes_apimachinery_Time"),
		"message": type[
			str
		],
		"type": type[
			str
		],
		"status": type[
			str
		];
		true
	]
],
def "kubernetes_events_Event" = allOf[
	type[
		obj
	],
	props[
		"note": type[
			str
		],
		"reason": type[
			str
		],
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"reportingInstance": type[
			str
		],
		"deprecatedCount": type[
			int
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"deprecatedSource": ref("kubernetes_core_EventSource"),
		"type": type[
			str
		],
		"deprecatedLastTimestamp": ref("kubernetes_apimachinery_Time"),
		"regarding": ref("kubernetes_core_ObjectReference"),
		"deprecatedFirstTimestamp": ref("kubernetes_apimachinery_Time"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"reportingController": type[
			str
		],
		"related": ref("kubernetes_core_ObjectReference"),
		"series": ref("kubernetes_events_EventSeries"),
		"eventTime": ref("kubernetes_apimachinery_MicroTime"),
		"action": type[
			str
		];
		true
	]
],
def "kubernetes_core_PodSecurityContext" = allOf[
	type[
		obj
	],
	props[
		"runAsUser": type[
			int
		],
		"seLinuxOptions": ref("kubernetes_core_SELinuxOptions"),
		"fsGroup": type[
			int
		],
		"supplementalGroups": allOf[
			type[
				arr
			],
			items[
				type[
					int
				];
				
			]
		],
		"runAsGroup": type[
			int
		],
		"runAsNonRoot": type[
			bool
		],
		"sysctls": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_Sysctl");
				
			]
		];
		true
	]
],
def "kubernetes_core_ServiceAccountList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_ServiceAccount");
				
			]
		];
		true
	]
],
def "kubernetes_core_ReplicationControllerStatus" = allOf[
	type[
		obj
	],
	props[
		"fullyLabeledReplicas": type[
			int
		],
		"replicas": type[
			int
		],
		"readyReplicas": type[
			int
		],
		"conditions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_ReplicationControllerCondition");
				
			]
		],
		"availableReplicas": type[
			int
		],
		"observedGeneration": type[
			int
		];
		true
	]
],
def "os_oauth_OAuthAccessTokenList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_oauth_OAuthAccessToken");
				
			]
		];
		true
	]
],
def "os_build_ConfigMapBuildSource" = allOf[
	type[
		obj
	],
	props[
		"destinationDir": type[
			str
		],
		"configMap": ref("kubernetes_core_LocalObjectReference");
		true
	]
],
def "kubernetes_storageclass_StorageClassList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_storageclass_StorageClass");
				
			]
		];
		true
	]
],
def "kubernetes_admissionregistration_ServiceReference" = allOf[
	type[
		obj
	],
	props[
		"path": type[
			str
		],
		"name": type[
			str
		],
		"namespace": type[
			str
		];
		true
	]
],
def "kubernetes_apps_RollingUpdateStatefulSetStrategy" = allOf[
	type[
		obj
	],
	props[
		"partition": type[
			int
		];
		true
	]
],
def "kubernetes_core_Pod" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_core_PodSpec"),
		"status": ref("kubernetes_core_PodStatus");
		true
	]
],
def "kubernetes_extensions_ScaleStatus" = allOf[
	type[
		obj
	],
	props[
		"targetSelector": type[
			str
		],
		"replicas": type[
			int
		],
		"selector": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		];
		true
	]
],
def "kubernetes_scheduling_PriorityClass" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"globalDefault": type[
			bool
		],
		"description": type[
			str
		],
		"value": type[
			int
		];
		true
	]
],
def "kubernetes_autoscaling_MetricSpec" = allOf[
	type[
		obj
	],
	props[
		"external": ref("kubernetes_autoscaling_ExternalMetricSource"),
		"resource": ref("kubernetes_autoscaling_ResourceMetricSource"),
		"pods": ref("kubernetes_autoscaling_PodsMetricSource"),
		"type": type[
			str
		],
		"object": ref("kubernetes_autoscaling_ObjectMetricSource");
		true
	]
],
def "kubernetes_extensions_IngressRule" = allOf[
	type[
		obj
	],
	props[
		"host": type[
			str
		],
		"http": ref("kubernetes_extensions_HTTPIngressRuleValue");
		true
	]
],
def "os_deploy_RollingDeploymentStrategyParams" = allOf[
	type[
		obj
	],
	props[
		"maxSurge": ref("kubernetes_apimachinery_pkg_util_intstr_IntOrString"),
		"updatePeriodSeconds": type[
			int
		],
		"pre": ref("os_deploy_LifecycleHook"),
		"post": ref("os_deploy_LifecycleHook"),
		"maxUnavailable": ref("kubernetes_apimachinery_pkg_util_intstr_IntOrString"),
		"timeoutSeconds": type[
			int
		],
		"intervalSeconds": type[
			int
		];
		true
	]
],
def "kubernetes_apps_DaemonSetList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apps_DaemonSet");
				
			]
		];
		true
	]
],
def "kubernetes_core_FlexPersistentVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"driver": type[
			str
		],
		"options": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"secretRef": ref("kubernetes_core_SecretReference"),
		"readOnly": type[
			bool
		],
		"fsType": type[
			str
		];
		true
	]
],
def "kubernetes_apps_DeploymentSpec" = allOf[
	type[
		obj
	],
	props[
		"template": ref("kubernetes_core_PodTemplateSpec"),
		"paused": type[
			bool
		],
		"replicas": type[
			int
		],
		"revisionHistoryLimit": type[
			int
		],
		"selector": ref("kubernetes_apimachinery_LabelSelector"),
		"minReadySeconds": type[
			int
		],
		"strategy": ref("kubernetes_apps_DeploymentStrategy"),
		"progressDeadlineSeconds": type[
			int
		];
		true
	]
],
def "kubernetes_batch_CronJobStatus" = allOf[
	type[
		obj
	],
	props[
		"lastScheduleTime": ref("kubernetes_apimachinery_Time"),
		"active": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_ObjectReference");
				
			]
		];
		true
	]
],
def "kubernetes_certificates_CertificateSigningRequestStatus" = allOf[
	type[
		obj
	],
	props[
		"certificate": type[
			str
		],
		"conditions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_certificates_CertificateSigningRequestCondition");
				
			]
		];
		true
	]
],
def "os_build_BuildConfigSpec" = allOf[
	type[
		obj
	],
	props[
		"completionDeadlineSeconds": type[
			int
		],
		"resources": ref("kubernetes_core_ResourceRequirements"),
		"serviceAccount": type[
			str
		],
		"source": ref("os_build_BuildSource"),
		"triggers": allOf[
			type[
				arr
			],
			items[
				ref("os_build_BuildTriggerPolicy");
				
			]
		],
		"nodeSelector": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"revision": ref("os_build_SourceRevision"),
		"output": ref("os_build_BuildOutput"),
		"successfulBuildsHistoryLimit": type[
			int
		],
		"failedBuildsHistoryLimit": type[
			int
		],
		"postCommit": ref("os_build_BuildPostCommitSpec"),
		"strategy": ref("os_build_BuildStrategy"),
		"runPolicy": type[
			str
		];
		true
	]
],
def "kubernetes_networking_NetworkPolicyPort" = allOf[
	type[
		obj
	],
	props[
		"protocol": type[
			str
		],
		"port": ref("kubernetes_apimachinery_pkg_util_intstr_IntOrString");
		true
	]
],
def "os_build_ImageSource" = allOf[
	type[
		obj
	],
	props[
		"as": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"paths": allOf[
			type[
				arr
			],
			items[
				ref("os_build_ImageSourcePath");
				
			]
		],
		"from": ref("kubernetes_core_ObjectReference"),
		"pullSecret": ref("kubernetes_core_LocalObjectReference");
		true
	]
],
def "kubernetes_apimachinery_Initializer" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		];
		true
	]
],
def "os_image_ImageLookupPolicy" = allOf[
	type[
		obj
	],
	props[
		"local": type[
			bool
		];
		true
	]
],
def "os_build_BinaryBuildSource" = allOf[
	type[
		obj
	],
	props[
		"asFile": type[
			str
		];
		true
	]
],
def "kubernetes_core_ConfigMap" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"data": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"binaryData": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		];
		true
	]
],
def "kubernetes_core_DownwardAPIVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"defaultMode": type[
			int
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_DownwardAPIVolumeFile");
				
			]
		];
		true
	]
],
def "kubernetes_core_ServicePort" = allOf[
	type[
		obj
	],
	props[
		"protocol": type[
			str
		],
		"port": type[
			int
		],
		"name": allOf[
			length(0,63),
			pattern("^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"),
			type[
				str
			]
		],
		"nodePort": type[
			int
		],
		"targetPort": ref("kubernetes_apimachinery_pkg_util_intstr_IntOrString");
		true
	]
],
def "os_deploy_DeploymentConfigList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_deploy_DeploymentConfig");
				
			]
		];
		true
	]
],
def "os_build_BitbucketWebHookCause" = allOf[
	type[
		obj
	],
	props[
		"secret": type[
			str
		],
		"revision": ref("os_build_SourceRevision");
		true
	]
],
def "kubernetes_config_NamedContext" = allOf[
	type[
		obj
	],
	props[
		"context": ref("kubernetes_config_Context"),
		"name": type[
			str
		];
		true
	]
],
def "kubernetes_core_ConfigMapKeySelector" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		],
		"optional": type[
			bool
		],
		"key": type[
			str
		];
		true
	]
],
def "kubernetes_core_HostPathVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"path": type[
			str
		],
		"type": type[
			str
		];
		true
	]
],
def "kubernetes_networking_NetworkPolicyList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_networking_NetworkPolicy");
				
			]
		];
		true
	]
],
def "kubernetes_core_ContainerPort" = allOf[
	type[
		obj
	],
	props[
		"protocol": type[
			str
		],
		"hostIP": type[
			str
		],
		"name": allOf[
			length(0,63),
			pattern("^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"),
			type[
				str
			]
		],
		"containerPort": type[
			int
		],
		"hostPort": type[
			int
		];
		true
	]
],
def "kubernetes_core_Namespace" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_core_NamespaceSpec"),
		"status": ref("kubernetes_core_NamespaceStatus");
		true
	]
],
def "os_route_RouteSpec" = allOf[
	type[
		obj
	],
	props[
		"path": type[
			str
		],
		"alternateBackends": allOf[
			type[
				arr
			],
			items[
				ref("os_route_RouteTargetReference");
				
			]
		],
		"port": ref("os_route_RoutePort"),
		"wildcardPolicy": type[
			str
		],
		"host": type[
			str
		],
		"tls": ref("os_route_TLSConfig"),
		"to": ref("os_route_RouteTargetReference");
		true
	]
],
def "kubernetes_core_TypedLocalObjectReference" = allOf[
	type[
		obj
	],
	props[
		"apiGroup": type[
			str
		],
		"kind": type[
			str
		],
		"name": type[
			str
		];
		true
	]
],
def "kubernetes_core_VolumeProjection" = allOf[
	type[
		obj
	],
	props[
		"downwardAPI": ref("kubernetes_core_DownwardAPIProjection"),
		"configMap": ref("kubernetes_core_ConfigMapProjection"),
		"secret": ref("kubernetes_core_SecretProjection"),
		"serviceAccountToken": ref("kubernetes_core_ServiceAccountTokenProjection");
		true
	]
],
def "kubernetes_apiextensions_ServiceReference" = allOf[
	type[
		obj
	],
	props[
		"path": type[
			str
		],
		"name": type[
			str
		],
		"namespace": type[
			str
		];
		true
	]
],
def "os_route_RouteStatus" = allOf[
	type[
		obj
	],
	props[
		"ingress": allOf[
			type[
				arr
			],
			items[
				ref("os_route_RouteIngress");
				
			]
		];
		true
	]
],
def "kubernetes_core_ComponentCondition" = allOf[
	type[
		obj
	],
	props[
		"error": type[
			str
		],
		"message": type[
			str
		],
		"type": type[
			str
		],
		"status": type[
			str
		];
		true
	]
],
def "os_build_BuildSpec" = allOf[
	type[
		obj
	],
	props[
		"output": ref("os_build_BuildOutput"),
		"completionDeadlineSeconds": type[
			int
		],
		"resources": ref("kubernetes_core_ResourceRequirements"),
		"serviceAccount": type[
			str
		],
		"source": ref("os_build_BuildSource"),
		"postCommit": ref("os_build_BuildPostCommitSpec"),
		"strategy": ref("os_build_BuildStrategy"),
		"nodeSelector": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"revision": ref("os_build_SourceRevision"),
		"triggeredBy": allOf[
			type[
				arr
			],
			items[
				ref("os_build_BuildTriggerCause");
				
			]
		];
		true
	]
],
def "kubernetes_core_NodeAddress" = allOf[
	type[
		obj
	],
	props[
		"address": type[
			str
		],
		"type": type[
			str
		];
		true
	]
],
def "kubernetes_core_NodeList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_Node");
				
			]
		];
		true
	]
],
def "kubernetes_apimachinery_Status" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"code": type[
			int
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"details": ref("kubernetes_apimachinery_StatusDetails"),
		"message": type[
			str
		],
		"status": type[
			str
		];
		true
	]
],
def "kubernetes_apps_ReplicaSetList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apps_ReplicaSet");
				
			]
		];
		true
	]
],
def "kubernetes_apimachinery_pkg_runtime_ImageRawExtension" = allOf[
	type[
		obj
	],
	props[
		"Raw": type[
			str
		];
		true
	]
],
def "kubernetes_core_ReplicationControllerSpec" = allOf[
	type[
		obj
	],
	props[
		"template": ref("kubernetes_core_PodTemplateSpec"),
		"replicas": type[
			int
		],
		"selector": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"minReadySeconds": type[
			int
		];
		true
	]
],
def "os_image_ImageStreamImportStatus" = allOf[
	type[
		obj
	],
	props[
		"images": allOf[
			type[
				arr
			],
			items[
				ref("os_image_ImageImportStatus");
				
			]
		],
		"import": ref("os_image_ImageStream"),
		"repository": ref("os_image_RepositoryImportStatus");
		true
	]
],
def "kubernetes_core_ServiceSpec" = allOf[
	type[
		obj
	],
	props[
		"healthCheckNodePort": type[
			int
		],
		"externalIPs": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"sessionAffinity": type[
			str
		],
		"ports": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_ServicePort");
				
			]
		],
		"type": type[
			str
		],
		"sessionAffinityConfig": ref("kubernetes_core_SessionAffinityConfig"),
		"loadBalancerIP": type[
			str
		],
		"externalName": type[
			str
		],
		"loadBalancerSourceRanges": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"externalTrafficPolicy": type[
			str
		],
		"selector": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"publishNotReadyAddresses": type[
			bool
		],
		"clusterIP": type[
			str
		];
		true
	]
],
def "kubernetes_rbac_AggregationRule" = allOf[
	type[
		obj
	],
	props[
		"clusterRoleSelectors": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apimachinery_LabelSelector");
				
			]
		];
		true
	]
],
def "kubernetes_core_ScaleIOPersistentVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"system": type[
			str
		],
		"protectionDomain": type[
			str
		],
		"sslEnabled": type[
			bool
		],
		"storageMode": type[
			str
		],
		"volumeName": type[
			str
		],
		"secretRef": ref("kubernetes_core_SecretReference"),
		"readOnly": type[
			bool
		],
		"fsType": type[
			str
		],
		"storagePool": type[
			str
		],
		"gateway": type[
			str
		];
		true
	]
],
def "kubernetes_core_NodeStatus" = allOf[
	type[
		obj
	],
	props[
		"daemonEndpoints": ref("kubernetes_core_NodeDaemonEndpoints"),
		"phase": type[
			str
		],
		"allocatable": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_resource_Quantity")
			]
		],
		"volumesInUse": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"addresses": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_NodeAddress");
				
			]
		],
		"images": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_ContainerImage");
				
			]
		],
		"nodeInfo": ref("kubernetes_core_NodeSystemInfo"),
		"conditions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_NodeCondition");
				
			]
		],
		"config": ref("kubernetes_core_NodeConfigStatus"),
		"volumesAttached": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_AttachedVolume");
				
			]
		],
		"capacity": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_resource_Quantity")
			]
		];
		true
	]
],
def "kubernetes_core_PodAffinity" = allOf[
	type[
		obj
	],
	props[
		"requiredDuringSchedulingIgnoredDuringExecution": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_PodAffinityTerm");
				
			]
		],
		"preferredDuringSchedulingIgnoredDuringExecution": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_WeightedPodAffinityTerm");
				
			]
		];
		true
	]
],
def "kubernetes_watch_WatchEvent" = allOf[
	type[
		obj
	],
	props[
		"type": type[
			str
		],
		"object": ref("kubernetes_apimachinery_pkg_runtime_RawExtension");
		true
	]
],
def "kubernetes_authentication_TokenReviewStatus" = allOf[
	type[
		obj
	],
	props[
		"authenticated": type[
			bool
		],
		"audiences": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"error": type[
			str
		],
		"user": ref("kubernetes_authentication_UserInfo");
		true
	]
],
def "kubernetes_apps_StatefulSetSpec" = allOf[
	type[
		obj
	],
	props[
		"template": ref("kubernetes_core_PodTemplateSpec"),
		"podManagementPolicy": type[
			str
		],
		"updateStrategy": ref("kubernetes_apps_StatefulSetUpdateStrategy"),
		"replicas": type[
			int
		],
		"revisionHistoryLimit": type[
			int
		],
		"selector": ref("kubernetes_apimachinery_LabelSelector"),
		"serviceName": type[
			str
		],
		"volumeClaimTemplates": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_PersistentVolumeClaim");
				
			]
		];
		true
	]
],
def "kubernetes_core_ScopeSelector" = allOf[
	type[
		obj
	],
	props[
		"matchExpressions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_ScopedResourceSelectorRequirement");
				
			]
		];
		true
	]
],
def "os_build_GitLabWebHookCause" = allOf[
	type[
		obj
	],
	props[
		"secret": type[
			str
		],
		"revision": ref("os_build_SourceRevision");
		true
	]
],
def "kubernetes_core_LocalObjectReference" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		];
		true
	]
],
def "kubernetes_policy_PodDisruptionBudgetStatus" = allOf[
	type[
		obj
	],
	props[
		"currentHealthy": type[
			int
		],
		"expectedPods": type[
			int
		],
		"disruptionsAllowed": type[
			int
		],
		"disruptedPods": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_apimachinery_Time")
			]
		],
		"observedGeneration": type[
			int
		],
		"desiredHealthy": type[
			int
		];
		true
	]
],
def "kubernetes_core_PersistentVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"gcePersistentDisk": ref("kubernetes_core_GCEPersistentDiskVolumeSource"),
		"photonPersistentDisk": ref("kubernetes_core_PhotonPersistentDiskVolumeSource"),
		"azureDisk": ref("kubernetes_core_AzureDiskVolumeSource"),
		"quobyte": ref("kubernetes_core_QuobyteVolumeSource"),
		"cinder": ref("kubernetes_core_CinderPersistentVolumeSource"),
		"azureFile": ref("kubernetes_core_AzureFilePersistentVolumeSource"),
		"awsElasticBlockStore": ref("kubernetes_core_AWSElasticBlockStoreVolumeSource"),
		"flexVolume": ref("kubernetes_core_FlexPersistentVolumeSource"),
		"local": ref("kubernetes_core_LocalVolumeSource"),
		"flocker": ref("kubernetes_core_FlockerVolumeSource"),
		"iscsi": ref("kubernetes_core_ISCSIPersistentVolumeSource"),
		"cephfs": ref("kubernetes_core_CephFSPersistentVolumeSource"),
		"rbd": ref("kubernetes_core_RBDPersistentVolumeSource"),
		"scaleIO": ref("kubernetes_core_ScaleIOPersistentVolumeSource"),
		"storageos": ref("kubernetes_core_StorageOSPersistentVolumeSource"),
		"csi": ref("kubernetes_core_CSIPersistentVolumeSource"),
		"nfs": ref("kubernetes_core_NFSVolumeSource"),
		"glusterfs": ref("kubernetes_core_GlusterfsPersistentVolumeSource"),
		"portworxVolume": ref("kubernetes_core_PortworxVolumeSource"),
		"vsphereVolume": ref("kubernetes_core_VsphereVirtualDiskVolumeSource"),
		"fc": ref("kubernetes_core_FCVolumeSource"),
		"hostPath": ref("kubernetes_core_HostPathVolumeSource");
		true
	]
],
def "kubernetes_extensions_AllowedHostPath" = allOf[
	type[
		obj
	],
	props[
		"readOnly": type[
			bool
		],
		"pathPrefix": type[
			str
		];
		true
	]
],
def "kubernetes_extensions_RunAsUserStrategyOptions" = allOf[
	type[
		obj
	],
	props[
		"ranges": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_extensions_IDRange");
				
			]
		],
		"rule": type[
			str
		];
		true
	]
],
def "kubernetes_apps_DeploymentStrategy" = allOf[
	type[
		obj
	],
	props[
		"type": type[
			str
		],
		"rollingUpdate": ref("kubernetes_apps_RollingUpdateDeployment");
		true
	]
],
def "os_image_RepositoryImportStatus" = allOf[
	type[
		obj
	],
	props[
		"additionalTags": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"images": allOf[
			type[
				arr
			],
			items[
				ref("os_image_ImageImportStatus");
				
			]
		],
		"status": ref("kubernetes_apimachinery_Status");
		true
	]
],
def "kubernetes_core_LocalVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"path": type[
			str
		],
		"fsType": type[
			str
		];
		true
	]
],
def "kubernetes_core_PodReadinessGate" = allOf[
	type[
		obj
	],
	props[
		"conditionType": type[
			str
		];
		true
	]
],
def "kubernetes_apiextensions_CustomResourceSubresources" = allOf[
	type[
		obj
	],
	props[
		"scale": ref("kubernetes_apiextensions_CustomResourceSubresourceScale"),
		"status": ref("kubernetes_apiextensions_CustomResourceSubresourceStatus");
		true
	]
],
def "kubernetes_core_GlusterfsVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"path": type[
			str
		],
		"endpoints": type[
			str
		],
		"readOnly": type[
			bool
		];
		true
	]
],
def "kubernetes_core_SecurityContext" = allOf[
	type[
		obj
	],
	props[
		"privileged": type[
			bool
		],
		"runAsUser": type[
			int
		],
		"capabilities": ref("kubernetes_core_Capabilities"),
		"seLinuxOptions": ref("kubernetes_core_SELinuxOptions"),
		"procMount": type[
			str
		],
		"allowPrivilegeEscalation": type[
			bool
		],
		"runAsGroup": type[
			int
		],
		"runAsNonRoot": type[
			bool
		],
		"readOnlyRootFilesystem": type[
			bool
		];
		true
	]
],
def "kubernetes_rbac_RoleList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_rbac_Role");
				
			]
		];
		true
	]
],
def "kubernetes_apiextensions_CustomResourceDefinitionStatus" = allOf[
	type[
		obj
	],
	props[
		"storedVersions": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"conditions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apiextensions_CustomResourceDefinitionCondition");
				
			]
		],
		"acceptedNames": ref("kubernetes_apiextensions_CustomResourceDefinitionNames");
		true
	]
],
def "kubernetes_core_LimitRangeList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_LimitRange");
				
			]
		];
		true
	]
],
def "kubernetes_core_PersistentVolumeClaimList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_PersistentVolumeClaim");
				
			]
		];
		true
	]
],
def "kubernetes_admissionregistration_RuleWithOperations" = allOf[
	type[
		obj
	],
	props[
		"operations": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"apiVersions": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"resources": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"apiGroups": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_core_PersistentVolumeClaimVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"claimName": type[
			str
		],
		"readOnly": type[
			bool
		];
		true
	]
],
def "kubernetes_core_Event" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"involvedObject": ref("kubernetes_core_ObjectReference"),
		"reportingInstance": type[
			str
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"count": type[
			int
		],
		"source": ref("kubernetes_core_EventSource"),
		"message": type[
			str
		],
		"type": type[
			str
		],
		"reportingComponent": type[
			str
		],
		"firstTimestamp": ref("kubernetes_apimachinery_Time"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"related": ref("kubernetes_core_ObjectReference"),
		"lastTimestamp": ref("kubernetes_apimachinery_Time"),
		"series": ref("kubernetes_core_EventSeries"),
		"eventTime": ref("kubernetes_apimachinery_MicroTime"),
		"action": type[
			str
		];
		true
	]
],
def "os_build_GitBuildSource" = allOf[
	type[
		obj
	],
	props[
		"ref": type[
			str
		],
		"httpProxy": type[
			str
		],
		"httpsProxy": type[
			str
		],
		"noProxy": type[
			str
		],
		"uri": type[
			str
		];
		true
	]
],
def "kubernetes_extensions_Scale" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_extensions_ScaleSpec"),
		"status": ref("kubernetes_extensions_ScaleStatus");
		true
	]
],
def "kubernetes_core_ServiceAccount" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"automountServiceAccountToken": type[
			bool
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"imagePullSecrets": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_LocalObjectReference");
				
			]
		],
		"secrets": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_ObjectReference");
				
			]
		];
		true
	]
],
def "kubernetes_extensions_IngressTLS" = allOf[
	type[
		obj
	],
	props[
		"secretName": type[
			str
		],
		"hosts": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_certificates_CertificateSigningRequestSpec" = allOf[
	type[
		obj
	],
	props[
		"request": type[
			str
		],
		"uid": type[
			str
		],
		"extra": allOf[
			type[
				obj
			],
			props[
				;
				allOf[
					type[
						arr
					],
					items[
						type[
							str
						];
						
					]
				]
			]
		],
		"groups": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"usages": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"username": type[
			str
		];
		true
	]
],
def "kubernetes_apimachinery_LabelSelectorRequirement" = allOf[
	type[
		obj
	],
	props[
		"values": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"key": type[
			str
		],
		"operator": type[
			str
		];
		true
	]
],
def "kubernetes_core_PodDNSConfigOption" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		],
		"value": type[
			str
		];
		true
	]
],
def "kubernetes_extensions_RollbackConfig" = allOf[
	type[
		obj
	],
	props[
		"revision": type[
			int
		];
		true
	]
],
def "kubernetes_core_CephFSPersistentVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"path": type[
			str
		],
		"secretRef": ref("kubernetes_core_SecretReference"),
		"secretFile": type[
			str
		],
		"readOnly": type[
			bool
		],
		"user": type[
			str
		],
		"monitors": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_core_PodSpec" = allOf[
	type[
		obj
	],
	props[
		"dnsPolicy": type[
			str
		],
		"nodeName": type[
			str
		],
		"terminationGracePeriodSeconds": type[
			int
		],
		"dnsConfig": ref("kubernetes_core_PodDNSConfig"),
		"hostNetwork": type[
			bool
		],
		"readinessGates": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_PodReadinessGate");
				
			]
		],
		"serviceAccountName": type[
			str
		],
		"imagePullSecrets": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_LocalObjectReference");
				
			]
		],
		"priorityClassName": type[
			str
		],
		"hostAliases": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_HostAlias");
				
			]
		],
		"securityContext": ref("kubernetes_core_PodSecurityContext"),
		"nodeSelector": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"hostname": type[
			str
		],
		"runtimeClassName": type[
			str
		],
		"tolerations": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_Toleration");
				
			]
		],
		"automountServiceAccountToken": type[
			bool
		],
		"schedulerName": type[
			str
		],
		"activeDeadlineSeconds": type[
			int
		],
		"enableServiceLinks": type[
			bool
		],
		"hostIPC": type[
			bool
		],
		"volumes": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_Volume");
				
			]
		],
		"serviceAccount": type[
			str
		],
		"priority": type[
			int
		],
		"restartPolicy": type[
			str
		],
		"shareProcessNamespace": type[
			bool
		],
		"subdomain": type[
			str
		],
		"containers": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_Container");
				
			]
		],
		"initContainers": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_Container");
				
			]
		],
		"affinity": ref("kubernetes_core_Affinity"),
		"hostPID": type[
			bool
		];
		true
	]
],
def "kubernetes_apps_RollingUpdateDaemonSet" = allOf[
	type[
		obj
	],
	props[
		"maxUnavailable": ref("kubernetes_apimachinery_pkg_util_intstr_IntOrString");
		true
	]
],
def "kubernetes_core_ContainerStateRunning" = allOf[
	type[
		obj
	],
	props[
		"startedAt": ref("kubernetes_apimachinery_Time");
		true
	]
],
def "kubernetes_core_Probe" = allOf[
	type[
		obj
	],
	props[
		"failureThreshold": type[
			int
		],
		"periodSeconds": type[
			int
		],
		"tcpSocket": ref("kubernetes_core_TCPSocketAction"),
		"timeoutSeconds": type[
			int
		],
		"successThreshold": type[
			int
		],
		"initialDelaySeconds": type[
			int
		],
		"exec": ref("kubernetes_core_ExecAction"),
		"httpGet": ref("kubernetes_core_HTTPGetAction");
		true
	]
],
def "kubernetes_core_PodCondition" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"lastTransitionTime": ref("kubernetes_apimachinery_Time"),
		"message": type[
			str
		],
		"type": type[
			str
		],
		"lastProbeTime": ref("kubernetes_apimachinery_Time"),
		"status": type[
			str
		];
		true
	]
],
def "os_build_BuildRequest" = allOf[
	type[
		obj
	],
	props[
		"sourceStrategyOptions": ref("os_build_SourceStrategyOptions"),
		"lastVersion": type[
			int
		],
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"dockerStrategyOptions": ref("os_build_DockerStrategyOptions"),
		"triggeredByImage": ref("kubernetes_core_ObjectReference"),
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"binary": ref("os_build_BinaryBuildSource"),
		"from": ref("kubernetes_core_ObjectReference"),
		"env": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_EnvVar");
				
			]
		],
		"revision": ref("os_build_SourceRevision"),
		"triggeredBy": allOf[
			type[
				arr
			],
			items[
				ref("os_build_BuildTriggerCause");
				
			]
		];
		true
	]
],
def "kubernetes_core_ResourceQuotaSpec" = allOf[
	type[
		obj
	],
	props[
		"scopeSelector": ref("kubernetes_core_ScopeSelector"),
		"hard": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_resource_Quantity")
			]
		],
		"scopes": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_config_ExecConfig" = allOf[
	type[
		obj
	],
	props[
		"args": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"apiVersion": type[
			str
		],
		"env": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_config_ExecEnvVar");
				
			]
		],
		"command": type[
			str
		];
		true
	]
],
def "kubernetes_core_NodeConfigStatus" = allOf[
	type[
		obj
	],
	props[
		"lastKnownGood": ref("kubernetes_core_NodeConfigSource"),
		"active": ref("kubernetes_core_NodeConfigSource"),
		"assigned": ref("kubernetes_core_NodeConfigSource"),
		"error": type[
			str
		];
		true
	]
],
def "kubernetes_core_NodeSelectorRequirement" = allOf[
	type[
		obj
	],
	props[
		"values": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"key": type[
			str
		],
		"operator": type[
			str
		];
		true
	]
],
def "kubernetes_authorization_NonResourceAttributes" = allOf[
	type[
		obj
	],
	props[
		"path": type[
			str
		],
		"verb": type[
			str
		];
		true
	]
],
def "kubernetes_config_Preferences" = allOf[
	type[
		obj
	],
	props[
		"extensions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_config_NamedExtension");
				
			]
		],
		"colors": type[
			bool
		];
		true
	]
],
def "os_build_StepInfo" = allOf[
	type[
		obj
	],
	props[
		"durationMilliseconds": type[
			int
		],
		"name": type[
			str
		],
		"startTime": ref("kubernetes_apimachinery_Time");
		true
	]
],
def "kubernetes_config_NamedExtension" = allOf[
	type[
		obj
	],
	props[
		"extension": ref("kubernetes_apimachinery_pkg_runtime_RawExtension"),
		"name": type[
			str
		];
		true
	]
],
def "kubernetes_apiextensions_JSONSchemaPropsOrArray" = allOf[
	type[
		obj
	],
	props[
		"Schema": ref("kubernetes_apiextensions_JSONSchemaProps"),
		"JSONSchemas": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apiextensions_JSONSchemaProps");
				
			]
		];
		true
	]
],
def "kubernetes_core_EventSeries" = allOf[
	type[
		obj
	],
	props[
		"count": type[
			int
		],
		"lastObservedTime": ref("kubernetes_apimachinery_MicroTime"),
		"state": type[
			str
		];
		true
	]
],
def "kubernetes_extensions_PodSecurityPolicySpec" = allOf[
	type[
		obj
	],
	props[
		"defaultAddCapabilities": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"hostPorts": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_extensions_HostPortRange");
				
			]
		],
		"allowedProcMountTypes": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"fsGroup": ref("kubernetes_extensions_FSGroupStrategyOptions"),
		"seLinux": ref("kubernetes_extensions_SELinuxStrategyOptions"),
		"hostNetwork": type[
			bool
		],
		"hostIPC": type[
			bool
		],
		"volumes": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"requiredDropCapabilities": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"runAsGroup": ref("kubernetes_extensions_RunAsGroupStrategyOptions"),
		"allowedCapabilities": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"readOnlyRootFilesystem": type[
			bool
		],
		"privileged": type[
			bool
		],
		"runAsUser": ref("kubernetes_extensions_RunAsUserStrategyOptions"),
		"allowedHostPaths": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_extensions_AllowedHostPath");
				
			]
		],
		"forbiddenSysctls": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"supplementalGroups": ref("kubernetes_extensions_SupplementalGroupsStrategyOptions"),
		"defaultAllowPrivilegeEscalation": type[
			bool
		],
		"allowedUnsafeSysctls": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"allowPrivilegeEscalation": type[
			bool
		],
		"allowedFlexVolumes": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_extensions_AllowedFlexVolume");
				
			]
		],
		"hostPID": type[
			bool
		];
		true
	]
],
def "kubernetes_core_NodeConfigSource" = allOf[
	type[
		obj
	],
	props[
		"configMap": ref("kubernetes_core_ConfigMapNodeConfigSource");
		true
	]
],
def "kubernetes_core_FlockerVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"datasetName": type[
			str
		],
		"datasetUUID": type[
			str
		];
		true
	]
],
def "os_build_StageInfo" = allOf[
	type[
		obj
	],
	props[
		"durationMilliseconds": type[
			int
		],
		"name": type[
			str
		],
		"startTime": ref("kubernetes_apimachinery_Time"),
		"steps": allOf[
			type[
				arr
			],
			items[
				ref("os_build_StepInfo");
				
			]
		];
		true
	]
],
def "os_deploy_LifecycleHook" = allOf[
	type[
		obj
	],
	props[
		"tagImages": allOf[
			type[
				arr
			],
			items[
				ref("os_deploy_TagImageHook");
				
			]
		],
		"execNewPod": ref("os_deploy_ExecNewPodHook"),
		"failurePolicy": type[
			str
		];
		true
	]
],
def "os_image_ImageStreamImport" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("os_image_ImageStreamImportSpec"),
		"status": ref("os_image_ImageStreamImportStatus");
		true
	]
],
def "kubernetes_apimachinery_Initializers" = allOf[
	type[
		obj
	],
	props[
		"result": ref("kubernetes_apimachinery_Status"),
		"pending": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apimachinery_Initializer");
				
			]
		];
		true
	]
],
def "kubernetes_extensions_HTTPIngressPath" = allOf[
	type[
		obj
	],
	props[
		"path": type[
			str
		],
		"backend": ref("kubernetes_extensions_IngressBackend");
		true
	]
],
def "kubernetes_admissionregistration_ValidatingWebhookConfiguration" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"webhooks": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_admissionregistration_Webhook");
				
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		];
		true
	]
],
def "os_deploy_RecreateDeploymentStrategyParams" = allOf[
	type[
		obj
	],
	props[
		"pre": ref("os_deploy_LifecycleHook"),
		"post": ref("os_deploy_LifecycleHook"),
		"mid": ref("os_deploy_LifecycleHook"),
		"timeoutSeconds": type[
			int
		];
		true
	]
],
def "kubernetes_core_ConfigMapProjection" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		],
		"optional": type[
			bool
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_KeyToPath");
				
			]
		];
		true
	]
],
def "kubernetes_core_StorageOSVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"volumeNamespace": type[
			str
		],
		"volumeName": type[
			str
		],
		"secretRef": ref("kubernetes_core_LocalObjectReference"),
		"readOnly": type[
			bool
		],
		"fsType": type[
			str
		];
		true
	]
],
def "kubernetes_admissionregistration_Rule" = allOf[
	type[
		obj
	],
	props[
		"apiVersions": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"resources": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"apiGroups": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_apimachinery_pkg_version_Info" = allOf[
	type[
		obj
	],
	props[
		"gitVersion": type[
			str
		],
		"gitCommit": type[
			str
		],
		"major": type[
			str
		],
		"minor": type[
			str
		],
		"goVersion": type[
			str
		],
		"buildDate": type[
			str
		],
		"compiler": type[
			str
		],
		"gitTreeState": type[
			str
		],
		"platform": type[
			str
		];
		true
	]
],
def "kubernetes_apimachinery_GroupVersionKind" = allOf[
	type[
		obj
	],
	props[
		"kind": type[
			str
		],
		"version": type[
			str
		],
		"group": type[
			str
		];
		true
	]
],
def "kubernetes_core_GitRepoVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"repository": type[
			str
		],
		"directory": type[
			str
		],
		"revision": type[
			str
		];
		true
	]
],
def "os_authorization_RoleBinding" = allOf[
	type[
		obj
	],
	props[
		"groupNames": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"subjects": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_ObjectReference");
				
			]
		],
		"userNames": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"roleRef": ref("kubernetes_core_ObjectReference");
		true
	]
],
def "kubernetes_core_FCVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"lun": type[
			int
		],
		"targetWWNs": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"readOnly": type[
			bool
		],
		"wwids": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"fsType": type[
			str
		];
		true
	]
],
def "kubernetes_apiextensions_CustomResourceDefinitionCondition" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"lastTransitionTime": ref("kubernetes_apimachinery_Time"),
		"message": type[
			str
		],
		"type": type[
			str
		],
		"status": type[
			str
		];
		true
	]
],
def "kubernetes_extensions_HostPortRange" = allOf[
	type[
		obj
	],
	props[
		"min": type[
			int
		],
		"max": type[
			int
		];
		true
	]
],
def "kubernetes_apps_DaemonSetCondition" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"lastTransitionTime": ref("kubernetes_apimachinery_Time"),
		"message": type[
			str
		],
		"type": type[
			str
		],
		"status": type[
			str
		];
		true
	]
],
def "kubernetes_core_PodStatus" = allOf[
	type[
		obj
	],
	props[
		"phase": type[
			str
		],
		"reason": type[
			str
		],
		"podIP": type[
			str
		],
		"containerStatuses": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_ContainerStatus");
				
			]
		],
		"hostIP": type[
			str
		],
		"startTime": ref("kubernetes_apimachinery_Time"),
		"nominatedNodeName": type[
			str
		],
		"qosClass": type[
			str
		],
		"conditions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_PodCondition");
				
			]
		],
		"message": type[
			str
		],
		"initContainerStatuses": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_ContainerStatus");
				
			]
		];
		true
	]
],
def "os_build_BuildConfig" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("os_build_BuildConfigSpec"),
		"status": ref("os_build_BuildConfigStatus");
		true
	]
],
def "kubernetes_core_AzureDiskVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"diskName": type[
			str
		],
		"kind": type[
			str
		],
		"readOnly": type[
			bool
		],
		"cachingMode": type[
			str
		],
		"diskURI": type[
			str
		],
		"fsType": type[
			str
		];
		true
	]
],
def "kubernetes_autoscaling_PodsMetricSource" = allOf[
	type[
		obj
	],
	props[
		"metricName": type[
			str
		],
		"targetAverageValue": ref("kubernetes_resource_Quantity"),
		"selector": ref("kubernetes_apimachinery_LabelSelector");
		true
	]
],
def "os_build_SourceRevision" = allOf[
	type[
		obj
	],
	props[
		"git": ref("os_build_GitSourceRevision"),
		"type": type[
			str
		];
		true
	]
],
def "kubernetes_apps_Deployment" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_apps_DeploymentSpec"),
		"status": ref("kubernetes_apps_DeploymentStatus");
		true
	]
],
def "kubernetes_scheduling_PriorityClassList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_scheduling_PriorityClass");
				
			]
		];
		true
	]
],
def "kubernetes_certificates_CertificateSigningRequestCondition" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"message": type[
			str
		],
		"type": type[
			str
		],
		"lastUpdateTime": ref("kubernetes_apimachinery_Time");
		true
	]
],
def "kubernetes_admissionregistration_MutatingWebhookConfiguration" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"webhooks": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_admissionregistration_Webhook");
				
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		];
		true
	]
],
def "kubernetes_core_ReplicationControllerCondition" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"lastTransitionTime": ref("kubernetes_apimachinery_Time"),
		"message": type[
			str
		],
		"type": type[
			str
		],
		"status": type[
			str
		];
		true
	]
],
def "kubernetes_core_HostAlias" = allOf[
	type[
		obj
	],
	props[
		"ip": type[
			str
		],
		"hostnames": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "os_deploy_DeploymentTriggerPolicy" = allOf[
	type[
		obj
	],
	props[
		"imageChangeParams": ref("os_deploy_DeploymentTriggerImageChangeParams"),
		"type": type[
			str
		];
		true
	]
],
def "kubernetes_core_SecretList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_Secret");
				
			]
		];
		true
	]
],
def "os_deploy_DeploymentCondition" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"lastTransitionTime": ref("kubernetes_apimachinery_Time"),
		"message": type[
			str
		],
		"type": type[
			str
		],
		"lastUpdateTime": ref("kubernetes_apimachinery_Time"),
		"status": type[
			str
		];
		true
	]
],
def "os_build_DockerStrategyOptions" = allOf[
	type[
		obj
	],
	props[
		"noCache": type[
			bool
		],
		"buildArgs": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_EnvVar");
				
			]
		];
		true
	]
],
def "kubernetes_rbac_RoleBindingList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_rbac_RoleBinding");
				
			]
		];
		true
	]
],
def "kubernetes_apps_RollingUpdateDeployment" = allOf[
	type[
		obj
	],
	props[
		"maxSurge": ref("kubernetes_apimachinery_pkg_util_intstr_IntOrString"),
		"maxUnavailable": ref("kubernetes_apimachinery_pkg_util_intstr_IntOrString");
		true
	]
],
def "kubernetes_autoscaling_CrossVersionObjectReference" = allOf[
	type[
		obj
	],
	props[
		"apiVersion": type[
			str
		],
		"kind": type[
			str
		],
		"name": type[
			str
		];
		true
	]
],
def "kubernetes_core_ClientIPConfig" = allOf[
	type[
		obj
	],
	props[
		"timeoutSeconds": type[
			int
		];
		true
	]
],
def "os_user_Group" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"users": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_autoscaling_PodsMetricStatus" = allOf[
	type[
		obj
	],
	props[
		"metricName": type[
			str
		],
		"currentAverageValue": ref("kubernetes_resource_Quantity"),
		"selector": ref("kubernetes_apimachinery_LabelSelector");
		true
	]
],
def "kubernetes_apiextensions_JSON" = allOf[
	type[
		obj
	],
	props[
		"Raw": type[
			str
		];
		true
	]
],
def "kubernetes_apiextensions_CustomResourceConversion" = allOf[
	type[
		obj
	],
	props[
		"webhookClientConfig": ref("kubernetes_apiextensions_WebhookClientConfig"),
		"strategy": type[
			str
		];
		true
	]
],
def "os_authorization_SubjectAccessReview" = allOf[
	type[
		obj
	],
	props[
		"isNonResourceURL": type[
			bool
		],
		"resource": type[
			str
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"resourceAPIGroup": type[
			str
		],
		"verb": type[
			str
		],
		"groups": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"resourceName": type[
			str
		],
		"content": ref("kubernetes_apimachinery_pkg_runtime_RawExtension"),
		"path": type[
			str
		],
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"namespace": type[
			str
		],
		"resourceAPIVersion": type[
			str
		],
		"scopes": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"user": type[
			str
		];
		true
	]
],
def "kubernetes_policy_PodDisruptionBudgetList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_policy_PodDisruptionBudget");
				
			]
		];
		true
	]
],
def "kubernetes_apps_DeploymentStatus" = allOf[
	type[
		obj
	],
	props[
		"unavailableReplicas": type[
			int
		],
		"replicas": type[
			int
		],
		"readyReplicas": type[
			int
		],
		"collisionCount": type[
			int
		],
		"conditions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apps_DeploymentCondition");
				
			]
		],
		"updatedReplicas": type[
			int
		],
		"availableReplicas": type[
			int
		],
		"observedGeneration": type[
			int
		];
		true
	]
],
def "kubernetes_core_ResourceQuotaStatus" = allOf[
	type[
		obj
	],
	props[
		"hard": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_resource_Quantity")
			]
		],
		"used": allOf[
			type[
				obj
			],
			props[
				;
				ref("kubernetes_resource_Quantity")
			]
		];
		true
	]
],
def "os_route_RouteList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_route_Route");
				
			]
		];
		true
	]
],
def "kubernetes_core_AttachedVolume" = allOf[
	type[
		obj
	],
	props[
		"devicePath": type[
			str
		],
		"name": type[
			str
		];
		true
	]
],
def "os_build_SourceBuildStrategy" = allOf[
	type[
		obj
	],
	props[
		"forcePull": type[
			bool
		],
		"from": ref("kubernetes_core_ObjectReference"),
		"incremental": type[
			bool
		],
		"env": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_EnvVar");
				
			]
		],
		"scripts": type[
			str
		],
		"pullSecret": ref("kubernetes_core_LocalObjectReference");
		true
	]
],
def "kubernetes_core_TCPSocketAction" = allOf[
	type[
		obj
	],
	props[
		"port": ref("kubernetes_apimachinery_pkg_util_intstr_IntOrString"),
		"host": type[
			str
		];
		true
	]
],
def "os_deploy_DeploymentStrategy" = allOf[
	type[
		obj
	],
	props[
		"recreateParams": ref("os_deploy_RecreateDeploymentStrategyParams"),
		"rollingParams": ref("os_deploy_RollingDeploymentStrategyParams"),
		"customParams": ref("os_deploy_CustomDeploymentStrategyParams"),
		"annotations": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"resources": ref("kubernetes_core_ResourceRequirements"),
		"type": type[
			str
		],
		"activeDeadlineSeconds": type[
			int
		],
		"labels": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		];
		true
	]
],
def "kubernetes_core_ConfigMapVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"defaultMode": type[
			int
		],
		"name": type[
			str
		],
		"optional": type[
			bool
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_KeyToPath");
				
			]
		];
		true
	]
],
def "os_image_ImageStreamImportSpec" = allOf[
	type[
		obj
	],
	props[
		"images": allOf[
			type[
				arr
			],
			items[
				ref("os_image_ImageImportSpec");
				
			]
		],
		"import": type[
			bool
		],
		"repository": ref("os_image_RepositoryImportSpec");
		true
	]
],
def "os_build_BuildList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_build_Build");
				
			]
		];
		true
	]
],
def "os_build_ImageSourcePath" = allOf[
	type[
		obj
	],
	props[
		"destinationDir": type[
			str
		],
		"sourcePath": type[
			str
		];
		true
	]
],
def "os_image_ImageStreamSpec" = allOf[
	type[
		obj
	],
	props[
		"dockerImageRepository": type[
			str
		],
		"lookupPolicy": ref("os_image_ImageLookupPolicy"),
		"tags": allOf[
			type[
				arr
			],
			items[
				ref("os_image_TagReference");
				
			]
		];
		true
	]
],
def "os_network_NetNamespace" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"egressIPs": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"netid": type[
			int
		],
		"netname": type[
			str
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		];
		true
	]
],
def "kubernetes_core_EndpointAddress" = allOf[
	type[
		obj
	],
	props[
		"nodeName": type[
			str
		],
		"targetRef": ref("kubernetes_core_ObjectReference"),
		"hostname": type[
			str
		],
		"ip": type[
			str
		];
		true
	]
],
def "kubernetes_authorization_SubjectAccessReviewStatus" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"allowed": type[
			bool
		],
		"evaluationError": type[
			str
		],
		"denied": type[
			bool
		];
		true
	]
],
def "os_project_ProjectList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_project_Project");
				
			]
		];
		true
	]
],
def "kubernetes_admissionregistration_MutatingWebhookConfigurationList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_admissionregistration_MutatingWebhookConfiguration");
				
			]
		];
		true
	]
],
def "os_image_TagImportPolicy" = allOf[
	type[
		obj
	],
	props[
		"scheduled": type[
			bool
		],
		"insecure": type[
			bool
		];
		true
	]
],
def "os_user_User" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"identities": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"fullName": type[
			str
		],
		"groups": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_core_PodDNSConfig" = allOf[
	type[
		obj
	],
	props[
		"searches": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"nameservers": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"options": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_PodDNSConfigOption");
				
			]
		];
		true
	]
],
def "kubernetes_core_PersistentVolumeClaim" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_core_PersistentVolumeClaimSpec"),
		"status": ref("kubernetes_core_PersistentVolumeClaimStatus");
		true
	]
],
def "kubernetes_core_ComponentStatus" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"conditions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_ComponentCondition");
				
			]
		];
		true
	]
],
def "kubernetes_core_AzureFileVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"secretName": type[
			str
		],
		"readOnly": type[
			bool
		],
		"shareName": type[
			str
		];
		true
	]
],
def "os_image_NamedTagEventList" = allOf[
	type[
		obj
	],
	props[
		"tag": type[
			str
		],
		"conditions": allOf[
			type[
				arr
			],
			items[
				ref("os_image_TagEventCondition");
				
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_image_TagEvent");
				
			]
		];
		true
	]
],
def "os_project_ProjectRequest" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"displayName": type[
			str
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"description": type[
			str
		];
		true
	]
],
def "kubernetes_core_LimitRange" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_core_LimitRangeSpec");
		true
	]
],
def "kubernetes_networking_NetworkPolicySpec" = allOf[
	type[
		obj
	],
	props[
		"ingress": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_networking_NetworkPolicyIngressRule");
				
			]
		],
		"podSelector": ref("kubernetes_apimachinery_LabelSelector"),
		"policyTypes": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"egress": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_networking_NetworkPolicyEgressRule");
				
			]
		];
		true
	]
],
def "os_security_SecurityContextConstraints" = allOf[
	type[
		obj
	],
	props[
		"defaultAddCapabilities": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"seccompProfiles": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"allowHostNetwork": type[
			bool
		],
		"readOnlyRootFilesystem": type[
			bool
		],
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"allowPrivilegedContainer": type[
			bool
		],
		"allowHostIPC": type[
			bool
		],
		"supplementalGroups": ref("os_security_SupplementalGroupsStrategyOptions"),
		"allowPrivilegeEscalation": type[
			bool
		],
		"allowedFlexVolumes": allOf[
			type[
				arr
			],
			items[
				ref("os_security_AllowedFlexVolume");
				
			]
		],
		"seLinuxContext": ref("os_security_SELinuxContextStrategyOptions"),
		"fsGroup": ref("os_security_FSGroupStrategyOptions"),
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"volumes": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"allowHostPID": type[
			bool
		],
		"groups": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"requiredDropCapabilities": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"allowHostDirVolumePlugin": type[
			bool
		],
		"allowHostPorts": type[
			bool
		],
		"priority": type[
			int
		],
		"users": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"allowedCapabilities": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"runAsUser": ref("os_security_RunAsUserStrategyOptions"),
		"forbiddenSysctls": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"defaultAllowPrivilegeEscalation": type[
			bool
		],
		"allowedUnsafeSysctls": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "os_deploy_CustomDeploymentStrategyParams" = allOf[
	type[
		obj
	],
	props[
		"image": type[
			str
		],
		"environment": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_EnvVar");
				
			]
		],
		"command": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_rbac_ClusterRoleBindingList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_rbac_ClusterRoleBinding");
				
			]
		];
		true
	]
],
def "kubernetes_config_AuthInfo" = allOf[
	type[
		obj
	],
	props[
		"as-groups": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"client-certificate": type[
			str
		],
		"as-user-extra": allOf[
			type[
				obj
			],
			props[
				;
				allOf[
					type[
						arr
					],
					items[
						type[
							str
						];
						
					]
				]
			]
		],
		"auth-provider": ref("kubernetes_config_AuthProviderConfig"),
		"token": type[
			str
		],
		"as": type[
			str
		],
		"extensions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_config_NamedExtension");
				
			]
		],
		"password": type[
			str
		],
		"client-certificate-data": type[
			str
		],
		"client-key-data": type[
			str
		],
		"client-key": type[
			str
		],
		"tokenFile": type[
			str
		],
		"exec": ref("kubernetes_config_ExecConfig"),
		"username": type[
			str
		];
		true
	]
],
def "kubernetes_apimachinery_ObjectMeta" = allOf[
	type[
		obj
	],
	props[
		"generation": type[
			int
		],
		"finalizers": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"resourceVersion": type[
			str
		],
		"annotations": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"generateName": type[
			str
		],
		"deletionTimestamp": ref("kubernetes_apimachinery_Time"),
		"labels": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		],
		"ownerReferences": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apimachinery_OwnerReference");
				
			]
		],
		"selfLink": type[
			str
		],
		"deletionGracePeriodSeconds": type[
			int
		],
		"uid": type[
			str
		],
		"initializers": ref("kubernetes_apimachinery_Initializers"),
		"clusterName": type[
			str
		],
		"creationTimestamp": ref("kubernetes_apimachinery_Time"),
		"name": type[
			str
		],
		"namespace": allOf[
			length(0,253),
			pattern("^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"),
			type[
				str
			]
		];
		true
	]
],
def "kubernetes_batch_JobCondition" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"lastTransitionTime": ref("kubernetes_apimachinery_Time"),
		"message": type[
			str
		],
		"type": type[
			str
		],
		"lastProbeTime": ref("kubernetes_apimachinery_Time"),
		"status": type[
			str
		];
		true
	]
],
def "kubernetes_apiextensions_CustomResourceDefinitionList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apiextensions_CustomResourceDefinition");
				
			]
		];
		true
	]
],
def "kubernetes_core_AWSElasticBlockStoreVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"partition": type[
			int
		],
		"volumeID": type[
			str
		],
		"readOnly": type[
			bool
		],
		"fsType": type[
			str
		];
		true
	]
],
def "kubernetes_core_Capabilities" = allOf[
	type[
		obj
	],
	props[
		"add": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"drop": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_apps_ReplicaSetCondition" = allOf[
	type[
		obj
	],
	props[
		"reason": type[
			str
		],
		"lastTransitionTime": ref("kubernetes_apimachinery_Time"),
		"message": type[
			str
		],
		"type": type[
			str
		],
		"status": type[
			str
		];
		true
	]
],
def "kubernetes_core_AzureFilePersistentVolumeSource" = allOf[
	type[
		obj
	],
	props[
		"secretName": type[
			str
		],
		"secretNamespace": type[
			str
		],
		"readOnly": type[
			bool
		],
		"shareName": type[
			str
		];
		true
	]
],
def "os_oauth_OAuthAuthorizeToken" = allOf[
	type[
		obj
	],
	props[
		"expiresIn": type[
			int
		],
		"redirectURI": type[
			str
		],
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"clientName": type[
			str
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"codeChallenge": type[
			str
		],
		"codeChallengeMethod": type[
			str
		],
		"scopes": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		],
		"state": type[
			str
		],
		"userName": type[
			str
		],
		"userUID": type[
			str
		];
		true
	]
],
def "kubernetes_core_ConfigMapList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_ConfigMap");
				
			]
		];
		true
	]
],
def "kubernetes_core_EventList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_Event");
				
			]
		];
		true
	]
],
def "kubernetes_core_SecretReference" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		],
		"namespace": type[
			str
		];
		true
	]
],
def "os_route_RoutePort" = allOf[
	type[
		obj
	],
	props[
		"targetPort": ref("kubernetes_apimachinery_pkg_util_intstr_IntOrString");
		true
	]
],
def "kubernetes_apps_ReplicaSetSpec" = allOf[
	type[
		obj
	],
	props[
		"template": ref("kubernetes_core_PodTemplateSpec"),
		"replicas": type[
			int
		],
		"selector": ref("kubernetes_apimachinery_LabelSelector"),
		"minReadySeconds": type[
			int
		];
		true
	]
],
def "kubernetes_apimachinery_LabelSelector" = allOf[
	type[
		obj
	],
	props[
		"matchExpressions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apimachinery_LabelSelectorRequirement");
				
			]
		],
		"matchLabels": allOf[
			type[
				obj
			],
			props[
				;
				type[
					str
				]
			]
		];
		true
	]
],
def "kubernetes_core_EndpointsList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_Endpoints");
				
			]
		];
		true
	]
],
def "kubernetes_networking_IPBlock" = allOf[
	type[
		obj
	],
	props[
		"cidr": type[
			str
		],
		"except": allOf[
			type[
				arr
			],
			items[
				type[
					str
				];
				
			]
		];
		true
	]
],
def "kubernetes_autoscaling_MetricStatus" = allOf[
	type[
		obj
	],
	props[
		"external": ref("kubernetes_autoscaling_ExternalMetricStatus"),
		"resource": ref("kubernetes_autoscaling_ResourceMetricStatus"),
		"pods": ref("kubernetes_autoscaling_PodsMetricStatus"),
		"type": type[
			str
		],
		"object": ref("kubernetes_autoscaling_ObjectMetricStatus");
		true
	]
],
def "kubernetes_core_NodeSpec" = allOf[
	type[
		obj
	],
	props[
		"providerID": type[
			str
		],
		"externalID": type[
			str
		],
		"taints": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_Taint");
				
			]
		],
		"configSource": ref("kubernetes_core_NodeConfigSource"),
		"unschedulable": type[
			bool
		],
		"podCIDR": type[
			str
		];
		true
	]
],
def "kubernetes_autoscaling_ResourceMetricStatus" = allOf[
	type[
		obj
	],
	props[
		"currentAverageValue": ref("kubernetes_resource_Quantity"),
		"name": type[
			str
		],
		"currentAverageUtilization": type[
			int
		];
		true
	]
],
def "os_build_BuildSource" = allOf[
	type[
		obj
	],
	props[
		"sourceSecret": ref("kubernetes_core_LocalObjectReference"),
		"images": allOf[
			type[
				arr
			],
			items[
				ref("os_build_ImageSource");
				
			]
		],
		"git": ref("os_build_GitBuildSource"),
		"configMaps": allOf[
			type[
				arr
			],
			items[
				ref("os_build_ConfigMapBuildSource");
				
			]
		],
		"binary": ref("os_build_BinaryBuildSource"),
		"dockerfile": type[
			str
		],
		"type": type[
			str
		],
		"secrets": allOf[
			type[
				arr
			],
			items[
				ref("os_build_SecretBuildSource");
				
			]
		],
		"contextDir": type[
			str
		];
		true
	]
],
def "kubernetes_apimachinery_List" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apimachinery_pkg_runtime_RawExtension");
				
			]
		];
		true
	]
],
def "kubernetes_apps_DaemonSetSpec" = allOf[
	type[
		obj
	],
	props[
		"template": ref("kubernetes_core_PodTemplateSpec"),
		"updateStrategy": ref("kubernetes_apps_DaemonSetUpdateStrategy"),
		"revisionHistoryLimit": type[
			int
		],
		"selector": ref("kubernetes_apimachinery_LabelSelector"),
		"minReadySeconds": type[
			int
		];
		true
	]
],
def "kubernetes_apiextensions_CustomResourceValidation" = allOf[
	type[
		obj
	],
	props[
		"openAPIV3Schema": ref("kubernetes_apiextensions_JSONSchemaProps");
		true
	]
],
def "kubernetes_core_VolumeMount" = allOf[
	type[
		obj
	],
	props[
		"mountPath": type[
			str
		],
		"mountPropagation": type[
			str
		],
		"name": type[
			str
		],
		"readOnly": type[
			bool
		],
		"subPath": type[
			str
		];
		true
	]
],
def "kubernetes_core_ComponentStatusList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_ComponentStatus");
				
			]
		];
		true
	]
],
def "kubernetes_settings_PodPresetList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_settings_PodPreset");
				
			]
		];
		true
	]
],
def "os_authorization_RoleBindingList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_authorization_RoleBinding");
				
			]
		];
		true
	]
],
def "kubernetes_apiextensions_CustomResourceDefinitionVersion" = allOf[
	type[
		obj
	],
	props[
		"schema": ref("kubernetes_apiextensions_CustomResourceValidation"),
		"served": type[
			bool
		],
		"name": type[
			str
		],
		"subresources": ref("kubernetes_apiextensions_CustomResourceSubresources"),
		"storage": type[
			bool
		],
		"additionalPrinterColumns": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apiextensions_CustomResourceColumnDefinition");
				
			]
		];
		true
	]
],
def "kubernetes_core_VolumeDevice" = allOf[
	type[
		obj
	],
	props[
		"devicePath": type[
			str
		],
		"name": type[
			str
		];
		true
	]
],
def "kubernetes_core_Taint" = allOf[
	type[
		obj
	],
	props[
		"timeAdded": ref("kubernetes_apimachinery_Time"),
		"effect": type[
			str
		],
		"value": type[
			str
		],
		"key": type[
			str
		];
		true
	]
],
def "kubernetes_extensions_IngressRuleValue" = allOf[
	type[
		obj
	],
	props[
		"http": ref("kubernetes_extensions_HTTPIngressRuleValue");
		true
	]
],
def "kubernetes_authentication_TokenReview" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_authentication_TokenReviewSpec"),
		"status": ref("kubernetes_authentication_TokenReviewStatus");
		true
	]
],
def "kubernetes_autoscaling_ResourceMetricSource" = allOf[
	type[
		obj
	],
	props[
		"targetAverageUtilization": type[
			int
		],
		"targetAverageValue": ref("kubernetes_resource_Quantity"),
		"name": type[
			str
		];
		true
	]
],
def "kubernetes_config_Config" = allOf[
	type[
		obj
	],
	props[
		"extensions": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_config_NamedExtension");
				
			]
		],
		"preferences": ref("kubernetes_config_Preferences"),
		"apiVersion": type[
			str
		],
		"kind": type[
			str
		],
		"current-context": type[
			str
		],
		"contexts": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_config_NamedContext");
				
			]
		],
		"clusters": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_config_NamedCluster");
				
			]
		],
		"users": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_config_NamedAuthInfo");
				
			]
		];
		true
	]
],
def "kubernetes_core_PersistentVolume" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_core_PersistentVolumeSpec"),
		"status": ref("kubernetes_core_PersistentVolumeStatus");
		true
	]
],
def "kubernetes_core_VolumeNodeAffinity" = allOf[
	type[
		obj
	],
	props[
		"required": ref("kubernetes_core_NodeSelector");
		true
	]
],
def "kubernetes_batch_JobSpec" = allOf[
	type[
		obj
	],
	props[
		"template": ref("kubernetes_core_PodTemplateSpec"),
		"backoffLimit": type[
			int
		],
		"manualSelector": type[
			bool
		],
		"parallelism": type[
			int
		],
		"completions": type[
			int
		],
		"selector": ref("kubernetes_apimachinery_LabelSelector"),
		"activeDeadlineSeconds": type[
			int
		],
		"ttlSecondsAfterFinished": type[
			int
		];
		true
	]
],
def "kubernetes_authorization_LocalSubjectAccessReview" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_authorization_SubjectAccessReviewSpec"),
		"status": ref("kubernetes_authorization_SubjectAccessReviewStatus");
		true
	]
],
def "os_template_TemplateList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_template_Template");
				
			]
		];
		true
	]
],
def "os_authorization_Action" = allOf[
	type[
		obj
	],
	props[
		"path": type[
			str
		],
		"isNonResourceURL": type[
			bool
		],
		"resource": type[
			str
		],
		"resourceAPIGroup": type[
			str
		],
		"namespace": type[
			str
		],
		"resourceAPIVersion": type[
			str
		],
		"verb": type[
			str
		],
		"resourceName": type[
			str
		],
		"content": ref("kubernetes_apimachinery_pkg_runtime_RawExtension");
		true
	]
],
def "kubernetes_extensions_PodSecurityPolicyList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_extensions_PodSecurityPolicy");
				
			]
		];
		true
	]
],
def "kubernetes_config_ExecEnvVar" = allOf[
	type[
		obj
	],
	props[
		"name": type[
			str
		],
		"value": type[
			str
		];
		true
	]
],
def "os_network_NetNamespaceList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("os_network_NetNamespace");
				
			]
		];
		true
	]
],
def "kubernetes_apps_DaemonSet" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_apps_DaemonSetSpec"),
		"status": ref("kubernetes_apps_DaemonSetStatus");
		true
	]
],
def "os_image_ImageImportSpec" = allOf[
	type[
		obj
	],
	props[
		"importPolicy": ref("os_image_TagImportPolicy"),
		"includeManifest": type[
			bool
		],
		"referencePolicy": ref("os_image_TagReferencePolicy"),
		"from": ref("kubernetes_core_ObjectReference"),
		"to": ref("kubernetes_core_LocalObjectReference");
		true
	]
],
def "kubernetes_apimachinery_StatusDetails" = allOf[
	type[
		obj
	],
	props[
		"uid": type[
			str
		],
		"kind": type[
			str
		],
		"causes": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_apimachinery_StatusCause");
				
			]
		],
		"retryAfterSeconds": type[
			int
		],
		"name": type[
			str
		],
		"group": type[
			str
		];
		true
	]
],
def "kubernetes_settings_PodPreset" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ObjectMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"spec": ref("kubernetes_settings_PodPresetSpec");
		true
	]
],
def "kubernetes_extensions_IngressSpec" = allOf[
	type[
		obj
	],
	props[
		"backend": ref("kubernetes_extensions_IngressBackend"),
		"rules": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_extensions_IngressRule");
				
			]
		],
		"tls": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_extensions_IngressTLS");
				
			]
		];
		true
	]
],
def "kubernetes_core_ResourceQuotaList" = allOf[
	type[
		obj
	],
	props[
		"metadata": ref("kubernetes_apimachinery_ListMeta"),
		"apiVersion": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"kind": allOf[
			type[
				str
			],
			req[
				"true"
			]
		],
		"items": allOf[
			type[
				arr
			],
			items[
				ref("kubernetes_core_ResourceQuota");
				
			]
		];
		true
	]
],
def "os_build_BuildStatusOutputTo" = allOf[
	type[
		obj
	],
	props[
		"imageDigest": type[
			str
		];
		true
	]
]